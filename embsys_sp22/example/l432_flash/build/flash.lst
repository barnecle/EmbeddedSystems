ARM GAS  /tmp/ccSJzgEg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.GetPage,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	GetPage:
  26              	.LVL0:
  27              	.LFB296:
  28              		.file 1 "Core/Src/flash.c"
   1:Core/Src/flash.c **** /* flash.c
   2:Core/Src/flash.c ****  * Description: 
   3:Core/Src/flash.c ****  *
   4:Core/Src/flash.c ****  * Author: Bryce Himebaugh 
   5:Core/Src/flash.c ****  * Contact: bhimebau@indiana.edu
   6:Core/Src/flash.c ****  * Date: 03.16.2021
   7:Core/Src/flash.c ****  * Copyright (C) 2021
   8:Core/Src/flash.c ****  *
   9:Core/Src/flash.c ****  */
  10:Core/Src/flash.c **** 
  11:Core/Src/flash.c **** #include <string.h>
  12:Core/Src/flash.c **** #include <stdio.h>
  13:Core/Src/flash.c **** #include "main.h"
  14:Core/Src/flash.c **** #include "flash.h"
  15:Core/Src/flash.c **** 
  16:Core/Src/flash.c **** extern int _edata;
  17:Core/Src/flash.c **** extern int _sdata;
  18:Core/Src/flash.c **** extern int __fini_array_end;
  19:Core/Src/flash.c **** extern flash_status_t flash_status;
  20:Core/Src/flash.c **** 
  21:Core/Src/flash.c **** static uint32_t GetPage(uint32_t);
  22:Core/Src/flash.c **** static uint32_t GetBank(uint32_t);
  23:Core/Src/flash.c **** 
  24:Core/Src/flash.c **** void ef_command(char *args) {
  25:Core/Src/flash.c ****   if (!args) {
  26:Core/Src/flash.c ****     printf("NOK\n\r");
  27:Core/Src/flash.c ****     return;
  28:Core/Src/flash.c ****   }
  29:Core/Src/flash.c ****   else {
  30:Core/Src/flash.c ****     if (!strcmp("all",args)) {
ARM GAS  /tmp/ccSJzgEg.s 			page 2


  31:Core/Src/flash.c ****       flash_erase();
  32:Core/Src/flash.c ****       printf("Erase Here!\n\r");
  33:Core/Src/flash.c ****     }
  34:Core/Src/flash.c ****     else {
  35:Core/Src/flash.c ****       printf("NOK\n\r");
  36:Core/Src/flash.c ****       return;
  37:Core/Src/flash.c ****     }
  38:Core/Src/flash.c ****   }
  39:Core/Src/flash.c ****   printf("OK\n\r");
  40:Core/Src/flash.c **** }
  41:Core/Src/flash.c **** 
  42:Core/Src/flash.c **** void flash_info_command(char * args) {
  43:Core/Src/flash.c ****   printf("Start of Flash Data: %p\n\r",flash_status.data_start);
  44:Core/Src/flash.c ****   printf("End of Flash Data: %p\n\r",flash_status.data_end);
  45:Core/Src/flash.c ****   printf("Next Address: %p\n\r",flash_status.next_address);
  46:Core/Src/flash.c ****   printf("Total Records Possible: %d\n\r",((int)flash_status.data_start-(int)flash_status.data_end)
  47:Core/Src/flash.c ****   printf("Total Empty Records: %d\n\r",((int)flash_status.next_address-(int)flash_status.data_end)/
  48:Core/Src/flash.c ****   printf("OK\n\r");
  49:Core/Src/flash.c **** }
  50:Core/Src/flash.c **** 
  51:Core/Src/flash.c **** int flash_write_init(flash_status_t * fs) {
  52:Core/Src/flash.c ****   sensordata_t * p;
  53:Core/Src/flash.c ****   uint32_t program_end = ((uint32_t )&__fini_array_end
  54:Core/Src/flash.c ****                   + (uint32_t)&_edata
  55:Core/Src/flash.c ****                   - (uint32_t)&_sdata);
  56:Core/Src/flash.c ****   uint32_t bottom  = (((uint32_t)program_end & ~0x7FF) + 0x800);
  57:Core/Src/flash.c ****   fs->data_end = (raw_t *) bottom;
  58:Core/Src/flash.c ****   fs->data_start = (raw_t *) 0x0803FFF0;
  59:Core/Src/flash.c ****   p = (sensordata_t *) fs->data_start;
  60:Core/Src/flash.c ****   while (p->watermark!=0xff) {
  61:Core/Src/flash.c ****     p--;
  62:Core/Src/flash.c ****     if (p<=((sensordata_t *)bottom)) return (-1);
  63:Core/Src/flash.c ****   }
  64:Core/Src/flash.c ****   fs->next_address = (raw_t *) p;
  65:Core/Src/flash.c ****   return(0);
  66:Core/Src/flash.c **** }
  67:Core/Src/flash.c **** 
  68:Core/Src/flash.c **** int write_raw(flash_status_t *fs, raw_t *data) {
  69:Core/Src/flash.c ****   HAL_StatusTypeDef status = 0;
  70:Core/Src/flash.c ****   uint32_t addr;
  71:Core/Src/flash.c **** 
  72:Core/Src/flash.c ****   if ((!data) || (!fs)) {
  73:Core/Src/flash.c ****     return(-1); 
  74:Core/Src/flash.c ****   }
  75:Core/Src/flash.c ****   HAL_FLASH_Unlock();
  76:Core/Src/flash.c ****   addr = (uint32_t) fs->next_address;
  77:Core/Src/flash.c ****   if ((status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,addr, data->data0))) {
  78:Core/Src/flash.c ****     HAL_FLASH_Lock();
  79:Core/Src/flash.c ****     return(-4);
  80:Core/Src/flash.c ****   }
  81:Core/Src/flash.c ****   addr += 8;
  82:Core/Src/flash.c ****   if ((status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,addr, data->data1))) {
  83:Core/Src/flash.c ****     HAL_FLASH_Lock();
  84:Core/Src/flash.c ****     return(-4);
  85:Core/Src/flash.c ****   }
  86:Core/Src/flash.c ****   HAL_FLASH_Lock();
  87:Core/Src/flash.c ****   fs->next_address--;
ARM GAS  /tmp/ccSJzgEg.s 			page 3


  88:Core/Src/flash.c ****   return(0);
  89:Core/Src/flash.c **** }
  90:Core/Src/flash.c **** 
  91:Core/Src/flash.c **** int erase_one_page(uint32_t addr) {
  92:Core/Src/flash.c ****   uint32_t PAGEError = 0;
  93:Core/Src/flash.c ****   static FLASH_EraseInitTypeDef EraseInitStruct;
  94:Core/Src/flash.c ****   
  95:Core/Src/flash.c ****   HAL_FLASH_Unlock();
  96:Core/Src/flash.c ****   /* Clear OPTVERR bit set on virgin samples */
  97:Core/Src/flash.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPTVERR); 
  98:Core/Src/flash.c ****   /* Fill EraseInit structure*/
  99:Core/Src/flash.c ****   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 100:Core/Src/flash.c ****   EraseInitStruct.Banks       = GetBank(addr);
 101:Core/Src/flash.c ****   EraseInitStruct.Page        = GetPage(addr);
 102:Core/Src/flash.c ****   EraseInitStruct.NbPages     = 1;
 103:Core/Src/flash.c ****   if (HAL_FLASHEx_Erase(&EraseInitStruct, &PAGEError) != HAL_OK) {
 104:Core/Src/flash.c ****     HAL_FLASH_Lock();
 105:Core/Src/flash.c ****     return (-1);
 106:Core/Src/flash.c ****   }
 107:Core/Src/flash.c ****   HAL_FLASH_Lock();
 108:Core/Src/flash.c ****   return(0);
 109:Core/Src/flash.c **** }
 110:Core/Src/flash.c **** 
 111:Core/Src/flash.c **** static uint32_t GetPage(uint32_t Addr) {
  29              		.loc 1 111 40 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 112:Core/Src/flash.c ****   uint32_t page = 0;
  34              		.loc 1 112 3 view .LVU1
 113:Core/Src/flash.c ****   
 114:Core/Src/flash.c ****   if (Addr < (FLASH_BASE + FLASH_BANK_SIZE))
  35              		.loc 1 114 3 view .LVU2
  36              		.loc 1 114 28 is_stmt 0 view .LVU3
  37 0000 0B4B     		ldr	r3, .L6
  38 0002 D3F8E025 		ldr	r2, [r3, #1504]
  39 0006 91B2     		uxth	r1, r2
  40              		.loc 1 114 26 view .LVU4
  41 0008 4FF6FF73 		movw	r3, #65535
  42 000c 9942     		cmp	r1, r3
  43 000e 0AD0     		beq	.L5
  44              		.loc 1 114 28 discriminator 1 view .LVU5
  45 0010 084B     		ldr	r3, .L6+4
  46 0012 03EA8223 		and	r3, r3, r2, lsl #10
  47              		.loc 1 114 26 discriminator 1 view .LVU6
  48 0016 03F10063 		add	r3, r3, #134217728
  49              	.L2:
  50              		.loc 1 114 6 discriminator 4 view .LVU7
  51 001a 8342     		cmp	r3, r0
  52 001c 05D9     		bls	.L3
 115:Core/Src/flash.c ****   {
 116:Core/Src/flash.c ****     /* Bank 1 */
 117:Core/Src/flash.c ****     page = (Addr - FLASH_BASE) / FLASH_PAGE_SIZE;
  53              		.loc 1 117 5 is_stmt 1 view .LVU8
  54              		.loc 1 117 18 is_stmt 0 view .LVU9
  55 001e 00F17840 		add	r0, r0, #-134217728
ARM GAS  /tmp/ccSJzgEg.s 			page 4


  56              	.LVL1:
  57              		.loc 1 117 10 view .LVU10
  58 0022 C00A     		lsrs	r0, r0, #11
  59              	.LVL2:
  60              		.loc 1 117 10 view .LVU11
  61 0024 7047     		bx	lr
  62              	.LVL3:
  63              	.L5:
 114:Core/Src/flash.c ****   {
  64              		.loc 1 114 26 view .LVU12
  65 0026 044B     		ldr	r3, .L6+8
  66 0028 F7E7     		b	.L2
  67              	.L3:
 118:Core/Src/flash.c ****   }
 119:Core/Src/flash.c ****   else
 120:Core/Src/flash.c ****   {
 121:Core/Src/flash.c ****     /* Bank 2 */
 122:Core/Src/flash.c ****     page = (Addr - (FLASH_BASE + FLASH_BANK_SIZE)) / FLASH_PAGE_SIZE;
  68              		.loc 1 122 5 is_stmt 1 discriminator 4 view .LVU13
  69              		.loc 1 122 18 is_stmt 0 discriminator 4 view .LVU14
  70 002a C01A     		subs	r0, r0, r3
  71              	.LVL4:
  72              		.loc 1 122 10 discriminator 4 view .LVU15
  73 002c C00A     		lsrs	r0, r0, #11
  74              	.LVL5:
 123:Core/Src/flash.c ****   }
 124:Core/Src/flash.c ****   
 125:Core/Src/flash.c ****   return page;
  75              		.loc 1 125 3 is_stmt 1 discriminator 4 view .LVU16
 126:Core/Src/flash.c **** }
  76              		.loc 1 126 1 is_stmt 0 discriminator 4 view .LVU17
  77 002e 7047     		bx	lr
  78              	.L7:
  79              		.align	2
  80              	.L6:
  81 0030 0070FF1F 		.word	536834048
  82 0034 00FCFF03 		.word	67107840
  83 0038 00000408 		.word	134479872
  84              		.cfi_endproc
  85              	.LFE296:
  87              		.section	.text.GetBank,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	GetBank:
  95              	.LVL6:
  96              	.LFB297:
 127:Core/Src/flash.c **** 
 128:Core/Src/flash.c **** static uint32_t GetBank(uint32_t Addr) {
  97              		.loc 1 128 40 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 129:Core/Src/flash.c ****   return FLASH_BANK_1;
ARM GAS  /tmp/ccSJzgEg.s 			page 5


 102              		.loc 1 129 3 view .LVU19
 130:Core/Src/flash.c **** }
 103              		.loc 1 130 1 is_stmt 0 view .LVU20
 104 0000 0120     		movs	r0, #1
 105              	.LVL7:
 106              		.loc 1 130 1 view .LVU21
 107 0002 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE297:
 111              		.section	.rodata.flash_info_command.str1.4,"aMS",%progbits,1
 112              		.align	2
 113              	.LC0:
 114 0000 53746172 		.ascii	"Start of Flash Data: %p\012\015\000"
 114      74206F66 
 114      20466C61 
 114      73682044 
 114      6174613A 
 115 001a 0000     		.align	2
 116              	.LC1:
 117 001c 456E6420 		.ascii	"End of Flash Data: %p\012\015\000"
 117      6F662046 
 117      6C617368 
 117      20446174 
 117      613A2025 
 118              		.align	2
 119              	.LC2:
 120 0034 4E657874 		.ascii	"Next Address: %p\012\015\000"
 120      20416464 
 120      72657373 
 120      3A202570 
 120      0A0D00
 121 0047 00       		.align	2
 122              	.LC3:
 123 0048 546F7461 		.ascii	"Total Records Possible: %d\012\015\000"
 123      6C205265 
 123      636F7264 
 123      7320506F 
 123      73736962 
 124 0065 000000   		.align	2
 125              	.LC4:
 126 0068 546F7461 		.ascii	"Total Empty Records: %d\012\015\000"
 126      6C20456D 
 126      70747920 
 126      5265636F 
 126      7264733A 
 127 0082 0000     		.align	2
 128              	.LC5:
 129 0084 4F4B0A0D 		.ascii	"OK\012\015\000"
 129      00
 130              		.section	.text.flash_info_command,"ax",%progbits
 131              		.align	1
 132              		.global	flash_info_command
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	flash_info_command:
ARM GAS  /tmp/ccSJzgEg.s 			page 6


 139              	.LVL8:
 140              	.LFB292:
  42:Core/Src/flash.c ****   printf("Start of Flash Data: %p\n\r",flash_status.data_start);
 141              		.loc 1 42 38 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
  42:Core/Src/flash.c ****   printf("Start of Flash Data: %p\n\r",flash_status.data_start);
 145              		.loc 1 42 38 is_stmt 0 view .LVU23
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI0:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
  43:Core/Src/flash.c ****   printf("End of Flash Data: %p\n\r",flash_status.data_end);
 151              		.loc 1 43 3 is_stmt 1 view .LVU24
 152 0002 134C     		ldr	r4, .L15
 153 0004 2168     		ldr	r1, [r4]
 154 0006 1348     		ldr	r0, .L15+4
 155              	.LVL9:
  43:Core/Src/flash.c ****   printf("End of Flash Data: %p\n\r",flash_status.data_end);
 156              		.loc 1 43 3 is_stmt 0 view .LVU25
 157 0008 FFF7FEFF 		bl	printf
 158              	.LVL10:
  44:Core/Src/flash.c ****   printf("Next Address: %p\n\r",flash_status.next_address);
 159              		.loc 1 44 3 is_stmt 1 view .LVU26
 160 000c 6168     		ldr	r1, [r4, #4]
 161 000e 1248     		ldr	r0, .L15+8
 162 0010 FFF7FEFF 		bl	printf
 163              	.LVL11:
  45:Core/Src/flash.c ****   printf("Total Records Possible: %d\n\r",((int)flash_status.data_start-(int)flash_status.data_end)
 164              		.loc 1 45 3 view .LVU27
 165 0014 A168     		ldr	r1, [r4, #8]
 166 0016 1148     		ldr	r0, .L15+12
 167 0018 FFF7FEFF 		bl	printf
 168              	.LVL12:
  46:Core/Src/flash.c ****   printf("Total Empty Records: %d\n\r",((int)flash_status.next_address-(int)flash_status.data_end)/
 169              		.loc 1 46 3 view .LVU28
  46:Core/Src/flash.c ****   printf("Total Empty Records: %d\n\r",((int)flash_status.next_address-(int)flash_status.data_end)/
 170              		.loc 1 46 61 is_stmt 0 view .LVU29
 171 001c 2168     		ldr	r1, [r4]
  46:Core/Src/flash.c ****   printf("Total Empty Records: %d\n\r",((int)flash_status.next_address-(int)flash_status.data_end)/
 172              		.loc 1 46 90 view .LVU30
 173 001e 6368     		ldr	r3, [r4, #4]
  46:Core/Src/flash.c ****   printf("Total Empty Records: %d\n\r",((int)flash_status.next_address-(int)flash_status.data_end)/
 174              		.loc 1 46 3 view .LVU31
 175 0020 C91A     		subs	r1, r1, r3
 176 0022 10D4     		bmi	.L13
 177              	.L10:
 178 0024 0911     		asrs	r1, r1, #4
 179 0026 0E48     		ldr	r0, .L15+16
 180 0028 FFF7FEFF 		bl	printf
 181              	.LVL13:
  47:Core/Src/flash.c ****   printf("OK\n\r");
 182              		.loc 1 47 3 is_stmt 1 view .LVU32
  47:Core/Src/flash.c ****   printf("OK\n\r");
 183              		.loc 1 47 58 is_stmt 0 view .LVU33
ARM GAS  /tmp/ccSJzgEg.s 			page 7


 184 002c 084B     		ldr	r3, .L15
 185 002e 9968     		ldr	r1, [r3, #8]
  47:Core/Src/flash.c ****   printf("OK\n\r");
 186              		.loc 1 47 89 view .LVU34
 187 0030 5B68     		ldr	r3, [r3, #4]
  47:Core/Src/flash.c ****   printf("OK\n\r");
 188              		.loc 1 47 3 view .LVU35
 189 0032 C91A     		subs	r1, r1, r3
 190 0034 09D4     		bmi	.L14
 191              	.L11:
 192 0036 0911     		asrs	r1, r1, #4
 193 0038 0A48     		ldr	r0, .L15+20
 194 003a FFF7FEFF 		bl	printf
 195              	.LVL14:
  48:Core/Src/flash.c **** }
 196              		.loc 1 48 3 is_stmt 1 view .LVU36
 197 003e 0A48     		ldr	r0, .L15+24
 198 0040 FFF7FEFF 		bl	printf
 199              	.LVL15:
  49:Core/Src/flash.c **** 
 200              		.loc 1 49 1 is_stmt 0 view .LVU37
 201 0044 10BD     		pop	{r4, pc}
 202              	.L13:
  46:Core/Src/flash.c ****   printf("Total Empty Records: %d\n\r",((int)flash_status.next_address-(int)flash_status.data_end)/
 203              		.loc 1 46 3 view .LVU38
 204 0046 0F31     		adds	r1, r1, #15
 205 0048 ECE7     		b	.L10
 206              	.L14:
  47:Core/Src/flash.c ****   printf("OK\n\r");
 207              		.loc 1 47 3 view .LVU39
 208 004a 0F31     		adds	r1, r1, #15
 209 004c F3E7     		b	.L11
 210              	.L16:
 211 004e 00BF     		.align	2
 212              	.L15:
 213 0050 00000000 		.word	flash_status
 214 0054 00000000 		.word	.LC0
 215 0058 1C000000 		.word	.LC1
 216 005c 34000000 		.word	.LC2
 217 0060 48000000 		.word	.LC3
 218 0064 68000000 		.word	.LC4
 219 0068 84000000 		.word	.LC5
 220              		.cfi_endproc
 221              	.LFE292:
 223              		.section	.text.flash_write_init,"ax",%progbits
 224              		.align	1
 225              		.global	flash_write_init
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	flash_write_init:
 232              	.LVL16:
 233              	.LFB293:
  51:Core/Src/flash.c ****   sensordata_t * p;
 234              		.loc 1 51 43 is_stmt 1 view -0
 235              		.cfi_startproc
ARM GAS  /tmp/ccSJzgEg.s 			page 8


 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
  52:Core/Src/flash.c ****   uint32_t program_end = ((uint32_t )&__fini_array_end
 239              		.loc 1 52 3 view .LVU41
  53:Core/Src/flash.c ****                   + (uint32_t)&_edata
 240              		.loc 1 53 3 view .LVU42
  55:Core/Src/flash.c ****   uint32_t bottom  = (((uint32_t)program_end & ~0x7FF) + 0x800);
 241              		.loc 1 55 19 is_stmt 0 view .LVU43
 242 0000 0C4B     		ldr	r3, .L23
  53:Core/Src/flash.c ****                   + (uint32_t)&_edata
 243              		.loc 1 53 12 view .LVU44
 244 0002 0D4A     		ldr	r2, .L23+4
 245 0004 0D49     		ldr	r1, .L23+8
 246 0006 5B1A     		subs	r3, r3, r1
 247 0008 1A44     		add	r2, r2, r3
 248              	.LVL17:
  56:Core/Src/flash.c ****   fs->data_end = (raw_t *) bottom;
 249              		.loc 1 56 3 is_stmt 1 view .LVU45
  56:Core/Src/flash.c ****   fs->data_end = (raw_t *) bottom;
 250              		.loc 1 56 46 is_stmt 0 view .LVU46
 251 000a 22F4FF62 		bic	r2, r2, #2040
 252              	.LVL18:
  56:Core/Src/flash.c ****   fs->data_end = (raw_t *) bottom;
 253              		.loc 1 56 46 view .LVU47
 254 000e 22F00702 		bic	r2, r2, #7
  56:Core/Src/flash.c ****   fs->data_end = (raw_t *) bottom;
 255              		.loc 1 56 12 view .LVU48
 256 0012 02F50062 		add	r2, r2, #2048
  57:Core/Src/flash.c ****   fs->data_start = (raw_t *) 0x0803FFF0;
 257              		.loc 1 57 3 is_stmt 1 view .LVU49
  57:Core/Src/flash.c ****   fs->data_start = (raw_t *) 0x0803FFF0;
 258              		.loc 1 57 16 is_stmt 0 view .LVU50
 259 0016 4260     		str	r2, [r0, #4]
  58:Core/Src/flash.c ****   p = (sensordata_t *) fs->data_start;
 260              		.loc 1 58 3 is_stmt 1 view .LVU51
  58:Core/Src/flash.c ****   p = (sensordata_t *) fs->data_start;
 261              		.loc 1 58 18 is_stmt 0 view .LVU52
 262 0018 094B     		ldr	r3, .L23+12
 263              	.LVL19:
  58:Core/Src/flash.c ****   p = (sensordata_t *) fs->data_start;
 264              		.loc 1 58 18 view .LVU53
 265 001a 0360     		str	r3, [r0]
  59:Core/Src/flash.c ****   while (p->watermark!=0xff) {
 266              		.loc 1 59 3 is_stmt 1 view .LVU54
 267              	.LVL20:
  60:Core/Src/flash.c ****     p--;
 268              		.loc 1 60 3 view .LVU55
 269              	.L18:
  60:Core/Src/flash.c ****     p--;
 270              		.loc 1 60 9 view .LVU56
  60:Core/Src/flash.c ****     p--;
 271              		.loc 1 60 11 is_stmt 0 view .LVU57
 272 001c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  60:Core/Src/flash.c ****     p--;
 273              		.loc 1 60 9 view .LVU58
 274 001e FF29     		cmp	r1, #255
ARM GAS  /tmp/ccSJzgEg.s 			page 9


 275 0020 05D0     		beq	.L22
  61:Core/Src/flash.c ****     if (p<=((sensordata_t *)bottom)) return (-1);
 276              		.loc 1 61 5 is_stmt 1 view .LVU59
  61:Core/Src/flash.c ****     if (p<=((sensordata_t *)bottom)) return (-1);
 277              		.loc 1 61 6 is_stmt 0 view .LVU60
 278 0022 103B     		subs	r3, r3, #16
 279              	.LVL21:
  62:Core/Src/flash.c ****   }
 280              		.loc 1 62 5 is_stmt 1 view .LVU61
  62:Core/Src/flash.c ****   }
 281              		.loc 1 62 8 is_stmt 0 view .LVU62
 282 0024 9A42     		cmp	r2, r3
 283 0026 F9D3     		bcc	.L18
  62:Core/Src/flash.c ****   }
 284              		.loc 1 62 45 view .LVU63
 285 0028 4FF0FF30 		mov	r0, #-1
 286              	.LVL22:
  66:Core/Src/flash.c **** 
 287              		.loc 1 66 1 view .LVU64
 288 002c 7047     		bx	lr
 289              	.LVL23:
 290              	.L22:
  64:Core/Src/flash.c ****   return(0);
 291              		.loc 1 64 3 is_stmt 1 view .LVU65
  64:Core/Src/flash.c ****   return(0);
 292              		.loc 1 64 20 is_stmt 0 view .LVU66
 293 002e 8360     		str	r3, [r0, #8]
  65:Core/Src/flash.c **** }
 294              		.loc 1 65 3 is_stmt 1 view .LVU67
  65:Core/Src/flash.c **** }
 295              		.loc 1 65 9 is_stmt 0 view .LVU68
 296 0030 0020     		movs	r0, #0
 297              	.LVL24:
  65:Core/Src/flash.c **** }
 298              		.loc 1 65 9 view .LVU69
 299 0032 7047     		bx	lr
 300              	.L24:
 301              		.align	2
 302              	.L23:
 303 0034 00000000 		.word	__fini_array_end
 304 0038 00000000 		.word	_edata
 305 003c 00000000 		.word	_sdata
 306 0040 F0FF0308 		.word	134479856
 307              		.cfi_endproc
 308              	.LFE293:
 310              		.section	.text.write_raw,"ax",%progbits
 311              		.align	1
 312              		.global	write_raw
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	write_raw:
 319              	.LVL25:
 320              	.LFB294:
  68:Core/Src/flash.c ****   HAL_StatusTypeDef status = 0;
 321              		.loc 1 68 48 is_stmt 1 view -0
ARM GAS  /tmp/ccSJzgEg.s 			page 10


 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
  69:Core/Src/flash.c ****   uint32_t addr;
 325              		.loc 1 69 3 view .LVU71
  70:Core/Src/flash.c **** 
 326              		.loc 1 70 3 view .LVU72
  72:Core/Src/flash.c ****     return(-1); 
 327              		.loc 1 72 3 view .LVU73
  72:Core/Src/flash.c ****     return(-1); 
 328              		.loc 1 72 6 is_stmt 0 view .LVU74
 329 0000 31B3     		cbz	r1, .L29
  68:Core/Src/flash.c ****   HAL_StatusTypeDef status = 0;
 330              		.loc 1 68 48 discriminator 1 view .LVU75
 331 0002 70B5     		push	{r4, r5, r6, lr}
 332              	.LCFI1:
 333              		.cfi_def_cfa_offset 16
 334              		.cfi_offset 4, -16
 335              		.cfi_offset 5, -12
 336              		.cfi_offset 6, -8
 337              		.cfi_offset 14, -4
 338 0004 0446     		mov	r4, r0
 339 0006 0D46     		mov	r5, r1
  72:Core/Src/flash.c ****     return(-1); 
 340              		.loc 1 72 15 discriminator 1 view .LVU76
 341 0008 28B3     		cbz	r0, .L30
  75:Core/Src/flash.c ****   addr = (uint32_t) fs->next_address;
 342              		.loc 1 75 3 is_stmt 1 view .LVU77
 343 000a FFF7FEFF 		bl	HAL_FLASH_Unlock
 344              	.LVL26:
  76:Core/Src/flash.c ****   if ((status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,addr, data->data0))) {
 345              		.loc 1 76 3 view .LVU78
  76:Core/Src/flash.c ****   if ((status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,addr, data->data0))) {
 346              		.loc 1 76 23 is_stmt 0 view .LVU79
 347 000e A668     		ldr	r6, [r4, #8]
 348              	.LVL27:
  77:Core/Src/flash.c ****     HAL_FLASH_Lock();
 349              		.loc 1 77 3 is_stmt 1 view .LVU80
  77:Core/Src/flash.c ****     HAL_FLASH_Lock();
 350              		.loc 1 77 17 is_stmt 0 view .LVU81
 351 0010 D5E90023 		ldrd	r2, [r5]
 352 0014 3146     		mov	r1, r6
 353 0016 0020     		movs	r0, #0
 354 0018 FFF7FEFF 		bl	HAL_FLASH_Program
 355              	.LVL28:
  77:Core/Src/flash.c ****     HAL_FLASH_Lock();
 356              		.loc 1 77 6 view .LVU82
 357 001c 70B9     		cbnz	r0, .L35
  81:Core/Src/flash.c ****   if ((status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,addr, data->data1))) {
 358              		.loc 1 81 3 is_stmt 1 view .LVU83
 359              	.LVL29:
  82:Core/Src/flash.c ****     HAL_FLASH_Lock();
 360              		.loc 1 82 3 view .LVU84
  82:Core/Src/flash.c ****     HAL_FLASH_Lock();
 361              		.loc 1 82 17 is_stmt 0 view .LVU85
 362 001e D5E90223 		ldrd	r2, [r5, #8]
 363 0022 06F10801 		add	r1, r6, #8
ARM GAS  /tmp/ccSJzgEg.s 			page 11


 364              	.LVL30:
  82:Core/Src/flash.c ****     HAL_FLASH_Lock();
 365              		.loc 1 82 17 view .LVU86
 366 0026 0020     		movs	r0, #0
 367              	.LVL31:
  82:Core/Src/flash.c ****     HAL_FLASH_Lock();
 368              		.loc 1 82 17 view .LVU87
 369 0028 FFF7FEFF 		bl	HAL_FLASH_Program
 370              	.LVL32:
  82:Core/Src/flash.c ****     HAL_FLASH_Lock();
 371              		.loc 1 82 6 view .LVU88
 372 002c 58B9     		cbnz	r0, .L36
  86:Core/Src/flash.c ****   fs->next_address--;
 373              		.loc 1 86 3 is_stmt 1 view .LVU89
 374 002e FFF7FEFF 		bl	HAL_FLASH_Lock
 375              	.LVL33:
  87:Core/Src/flash.c ****   return(0);
 376              		.loc 1 87 3 view .LVU90
  87:Core/Src/flash.c ****   return(0);
 377              		.loc 1 87 5 is_stmt 0 view .LVU91
 378 0032 A368     		ldr	r3, [r4, #8]
  87:Core/Src/flash.c ****   return(0);
 379              		.loc 1 87 19 view .LVU92
 380 0034 103B     		subs	r3, r3, #16
 381 0036 A360     		str	r3, [r4, #8]
  88:Core/Src/flash.c **** }
 382              		.loc 1 88 3 is_stmt 1 view .LVU93
  88:Core/Src/flash.c **** }
 383              		.loc 1 88 9 is_stmt 0 view .LVU94
 384 0038 0020     		movs	r0, #0
 385              	.LVL34:
 386              	.L25:
  89:Core/Src/flash.c **** 
 387              		.loc 1 89 1 view .LVU95
 388 003a 70BD     		pop	{r4, r5, r6, pc}
 389              	.LVL35:
 390              	.L35:
  78:Core/Src/flash.c ****     return(-4);
 391              		.loc 1 78 5 is_stmt 1 view .LVU96
 392 003c FFF7FEFF 		bl	HAL_FLASH_Lock
 393              	.LVL36:
  79:Core/Src/flash.c ****   }
 394              		.loc 1 79 5 view .LVU97
  79:Core/Src/flash.c ****   }
 395              		.loc 1 79 11 is_stmt 0 view .LVU98
 396 0040 6FF00300 		mvn	r0, #3
 397 0044 F9E7     		b	.L25
 398              	.LVL37:
 399              	.L36:
  83:Core/Src/flash.c ****     return(-4);
 400              		.loc 1 83 5 is_stmt 1 view .LVU99
 401 0046 FFF7FEFF 		bl	HAL_FLASH_Lock
 402              	.LVL38:
  84:Core/Src/flash.c ****   }
 403              		.loc 1 84 5 view .LVU100
  84:Core/Src/flash.c ****   }
 404              		.loc 1 84 11 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccSJzgEg.s 			page 12


 405 004a 6FF00300 		mvn	r0, #3
 406 004e F4E7     		b	.L25
 407              	.LVL39:
 408              	.L29:
 409              	.LCFI2:
 410              		.cfi_def_cfa_offset 0
 411              		.cfi_restore 4
 412              		.cfi_restore 5
 413              		.cfi_restore 6
 414              		.cfi_restore 14
  73:Core/Src/flash.c ****   }
 415              		.loc 1 73 11 view .LVU102
 416 0050 4FF0FF30 		mov	r0, #-1
 417              	.LVL40:
  89:Core/Src/flash.c **** 
 418              		.loc 1 89 1 view .LVU103
 419 0054 7047     		bx	lr
 420              	.LVL41:
 421              	.L30:
 422              	.LCFI3:
 423              		.cfi_def_cfa_offset 16
 424              		.cfi_offset 4, -16
 425              		.cfi_offset 5, -12
 426              		.cfi_offset 6, -8
 427              		.cfi_offset 14, -4
  73:Core/Src/flash.c ****   }
 428              		.loc 1 73 11 view .LVU104
 429 0056 4FF0FF30 		mov	r0, #-1
 430              	.LVL42:
  73:Core/Src/flash.c ****   }
 431              		.loc 1 73 11 view .LVU105
 432 005a EEE7     		b	.L25
 433              		.cfi_endproc
 434              	.LFE294:
 436              		.section	.text.erase_one_page,"ax",%progbits
 437              		.align	1
 438              		.global	erase_one_page
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	erase_one_page:
 445              	.LVL43:
 446              	.LFB295:
  91:Core/Src/flash.c ****   uint32_t PAGEError = 0;
 447              		.loc 1 91 35 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 8
 450              		@ frame_needed = 0, uses_anonymous_args = 0
  91:Core/Src/flash.c ****   uint32_t PAGEError = 0;
 451              		.loc 1 91 35 is_stmt 0 view .LVU107
 452 0000 70B5     		push	{r4, r5, r6, lr}
 453              	.LCFI4:
 454              		.cfi_def_cfa_offset 16
 455              		.cfi_offset 4, -16
 456              		.cfi_offset 5, -12
 457              		.cfi_offset 6, -8
ARM GAS  /tmp/ccSJzgEg.s 			page 13


 458              		.cfi_offset 14, -4
 459 0002 82B0     		sub	sp, sp, #8
 460              	.LCFI5:
 461              		.cfi_def_cfa_offset 24
 462 0004 0546     		mov	r5, r0
  92:Core/Src/flash.c ****   static FLASH_EraseInitTypeDef EraseInitStruct;
 463              		.loc 1 92 3 is_stmt 1 view .LVU108
  92:Core/Src/flash.c ****   static FLASH_EraseInitTypeDef EraseInitStruct;
 464              		.loc 1 92 12 is_stmt 0 view .LVU109
 465 0006 0026     		movs	r6, #0
 466 0008 0196     		str	r6, [sp, #4]
  93:Core/Src/flash.c ****   
 467              		.loc 1 93 3 is_stmt 1 view .LVU110
  95:Core/Src/flash.c ****   /* Clear OPTVERR bit set on virgin samples */
 468              		.loc 1 95 3 view .LVU111
 469 000a FFF7FEFF 		bl	HAL_FLASH_Unlock
 470              	.LVL44:
  97:Core/Src/flash.c ****   /* Fill EraseInit structure*/
 471              		.loc 1 97 3 view .LVU112
  97:Core/Src/flash.c ****   /* Fill EraseInit structure*/
 472              		.loc 1 97 3 view .LVU113
  97:Core/Src/flash.c ****   /* Fill EraseInit structure*/
 473              		.loc 1 97 3 view .LVU114
  97:Core/Src/flash.c ****   /* Fill EraseInit structure*/
 474              		.loc 1 97 3 view .LVU115
 475 000e 0F4B     		ldr	r3, .L42
 476 0010 4FF40042 		mov	r2, #32768
 477 0014 1A61     		str	r2, [r3, #16]
  97:Core/Src/flash.c ****   /* Fill EraseInit structure*/
 478              		.loc 1 97 3 view .LVU116
  99:Core/Src/flash.c ****   EraseInitStruct.Banks       = GetBank(addr);
 479              		.loc 1 99 3 view .LVU117
  99:Core/Src/flash.c ****   EraseInitStruct.Banks       = GetBank(addr);
 480              		.loc 1 99 31 is_stmt 0 view .LVU118
 481 0016 0E4C     		ldr	r4, .L42+4
 482 0018 2660     		str	r6, [r4]
 100:Core/Src/flash.c ****   EraseInitStruct.Page        = GetPage(addr);
 483              		.loc 1 100 3 is_stmt 1 view .LVU119
 100:Core/Src/flash.c ****   EraseInitStruct.Page        = GetPage(addr);
 484              		.loc 1 100 33 is_stmt 0 view .LVU120
 485 001a 2846     		mov	r0, r5
 486 001c FFF7FEFF 		bl	GetBank
 487              	.LVL45:
 100:Core/Src/flash.c ****   EraseInitStruct.Page        = GetPage(addr);
 488              		.loc 1 100 31 view .LVU121
 489 0020 6060     		str	r0, [r4, #4]
 101:Core/Src/flash.c ****   EraseInitStruct.NbPages     = 1;
 490              		.loc 1 101 3 is_stmt 1 view .LVU122
 101:Core/Src/flash.c ****   EraseInitStruct.NbPages     = 1;
 491              		.loc 1 101 33 is_stmt 0 view .LVU123
 492 0022 2846     		mov	r0, r5
 493 0024 FFF7FEFF 		bl	GetPage
 494              	.LVL46:
 101:Core/Src/flash.c ****   EraseInitStruct.NbPages     = 1;
 495              		.loc 1 101 31 view .LVU124
 496 0028 A060     		str	r0, [r4, #8]
 102:Core/Src/flash.c ****   if (HAL_FLASHEx_Erase(&EraseInitStruct, &PAGEError) != HAL_OK) {
ARM GAS  /tmp/ccSJzgEg.s 			page 14


 497              		.loc 1 102 3 is_stmt 1 view .LVU125
 102:Core/Src/flash.c ****   if (HAL_FLASHEx_Erase(&EraseInitStruct, &PAGEError) != HAL_OK) {
 498              		.loc 1 102 31 is_stmt 0 view .LVU126
 499 002a 0123     		movs	r3, #1
 500 002c E360     		str	r3, [r4, #12]
 103:Core/Src/flash.c ****     HAL_FLASH_Lock();
 501              		.loc 1 103 3 is_stmt 1 view .LVU127
 103:Core/Src/flash.c ****     HAL_FLASH_Lock();
 502              		.loc 1 103 7 is_stmt 0 view .LVU128
 503 002e 01A9     		add	r1, sp, #4
 504 0030 2046     		mov	r0, r4
 505 0032 FFF7FEFF 		bl	HAL_FLASHEx_Erase
 506              	.LVL47:
 103:Core/Src/flash.c ****     HAL_FLASH_Lock();
 507              		.loc 1 103 6 view .LVU129
 508 0036 20B9     		cbnz	r0, .L41
 107:Core/Src/flash.c ****   return(0);
 509              		.loc 1 107 3 is_stmt 1 view .LVU130
 510 0038 FFF7FEFF 		bl	HAL_FLASH_Lock
 511              	.LVL48:
 108:Core/Src/flash.c **** }
 512              		.loc 1 108 3 view .LVU131
 108:Core/Src/flash.c **** }
 513              		.loc 1 108 9 is_stmt 0 view .LVU132
 514 003c 0020     		movs	r0, #0
 515              	.L37:
 109:Core/Src/flash.c **** 
 516              		.loc 1 109 1 view .LVU133
 517 003e 02B0     		add	sp, sp, #8
 518              	.LCFI6:
 519              		.cfi_remember_state
 520              		.cfi_def_cfa_offset 16
 521              		@ sp needed
 522 0040 70BD     		pop	{r4, r5, r6, pc}
 523              	.LVL49:
 524              	.L41:
 525              	.LCFI7:
 526              		.cfi_restore_state
 104:Core/Src/flash.c ****     return (-1);
 527              		.loc 1 104 5 is_stmt 1 view .LVU134
 528 0042 FFF7FEFF 		bl	HAL_FLASH_Lock
 529              	.LVL50:
 105:Core/Src/flash.c ****   }
 530              		.loc 1 105 5 view .LVU135
 105:Core/Src/flash.c ****   }
 531              		.loc 1 105 12 is_stmt 0 view .LVU136
 532 0046 4FF0FF30 		mov	r0, #-1
 533 004a F8E7     		b	.L37
 534              	.L43:
 535              		.align	2
 536              	.L42:
 537 004c 00200240 		.word	1073881088
 538 0050 00000000 		.word	.LANCHOR0
 539              		.cfi_endproc
 540              	.LFE295:
 542              		.section	.text.flash_erase,"ax",%progbits
 543              		.align	1
ARM GAS  /tmp/ccSJzgEg.s 			page 15


 544              		.global	flash_erase
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	flash_erase:
 551              	.LFB298:
 131:Core/Src/flash.c **** 
 132:Core/Src/flash.c **** int flash_erase(void) {
 552              		.loc 1 132 23 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 8
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 557              	.LCFI8:
 558              		.cfi_def_cfa_offset 20
 559              		.cfi_offset 4, -20
 560              		.cfi_offset 5, -16
 561              		.cfi_offset 6, -12
 562              		.cfi_offset 7, -8
 563              		.cfi_offset 14, -4
 564 0002 83B0     		sub	sp, sp, #12
 565              	.LCFI9:
 566              		.cfi_def_cfa_offset 32
 133:Core/Src/flash.c ****   uint32_t FirstPage = 0, NbOfPages = 0, BankNumber = 0;
 567              		.loc 1 133 3 view .LVU138
 568              	.LVL51:
 134:Core/Src/flash.c ****   uint32_t PAGEError = 0;
 569              		.loc 1 134 3 view .LVU139
 570              		.loc 1 134 12 is_stmt 0 view .LVU140
 571 0004 0026     		movs	r6, #0
 572 0006 0196     		str	r6, [sp, #4]
 135:Core/Src/flash.c ****   /* __IO uint32_t data32 = 0 , MemoryProgramStatus = 0; */
 136:Core/Src/flash.c **** 
 137:Core/Src/flash.c ****   static FLASH_EraseInitTypeDef EraseInitStruct;
 573              		.loc 1 137 3 is_stmt 1 view .LVU141
 138:Core/Src/flash.c ****   uint32_t program_end = ((uint32_t )&__fini_array_end 
 574              		.loc 1 138 3 view .LVU142
 139:Core/Src/flash.c ****                   + (uint32_t)&_edata
 140:Core/Src/flash.c ****                   - (uint32_t)&_sdata); 
 575              		.loc 1 140 19 is_stmt 0 view .LVU143
 576 0008 194B     		ldr	r3, .L49
 138:Core/Src/flash.c ****   uint32_t program_end = ((uint32_t )&__fini_array_end 
 577              		.loc 1 138 12 view .LVU144
 578 000a 1A48     		ldr	r0, .L49+4
 579 000c 1A4A     		ldr	r2, .L49+8
 580 000e 9B1A     		subs	r3, r3, r2
 581 0010 1844     		add	r0, r0, r3
 582              	.LVL52:
 141:Core/Src/flash.c ****   uint32_t bottom  = (((uint32_t)program_end & ~0x7FF) + 0x800);
 583              		.loc 1 141 3 is_stmt 1 view .LVU145
 584              		.loc 1 141 46 is_stmt 0 view .LVU146
 585 0012 20F4FF60 		bic	r0, r0, #2040
 586              	.LVL53:
 587              		.loc 1 141 46 view .LVU147
 588 0016 20F00700 		bic	r0, r0, #7
 589              		.loc 1 141 12 view .LVU148
ARM GAS  /tmp/ccSJzgEg.s 			page 16


 590 001a 00F50064 		add	r4, r0, #2048
 591              	.LVL54:
 142:Core/Src/flash.c ****   uint32_t top = FLASH_END;
 592              		.loc 1 142 3 is_stmt 1 view .LVU149
 143:Core/Src/flash.c ****   
 144:Core/Src/flash.c ****   HAL_FLASH_Unlock();
 593              		.loc 1 144 3 view .LVU150
 594 001e FFF7FEFF 		bl	HAL_FLASH_Unlock
 595              	.LVL55:
 145:Core/Src/flash.c ****   /* Clear OPTVERR bit set on virgin samples */
 146:Core/Src/flash.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPTVERR); 
 596              		.loc 1 146 3 view .LVU151
 597              		.loc 1 146 3 view .LVU152
 598              		.loc 1 146 3 view .LVU153
 599              		.loc 1 146 3 view .LVU154
 600 0022 164B     		ldr	r3, .L49+12
 601 0024 4FF40042 		mov	r2, #32768
 602 0028 1A61     		str	r2, [r3, #16]
 603              		.loc 1 146 3 view .LVU155
 147:Core/Src/flash.c ****   /* Get the 1st page to erase */
 148:Core/Src/flash.c ****   FirstPage = GetPage(bottom);
 604              		.loc 1 148 3 view .LVU156
 605              		.loc 1 148 15 is_stmt 0 view .LVU157
 606 002a 2046     		mov	r0, r4
 607 002c FFF7FEFF 		bl	GetPage
 608              	.LVL56:
 609 0030 0746     		mov	r7, r0
 610              	.LVL57:
 149:Core/Src/flash.c ****   /* Get the number of pages to erase from 1st page */
 150:Core/Src/flash.c ****   NbOfPages = GetPage(top) - FirstPage + 1;
 611              		.loc 1 150 3 is_stmt 1 view .LVU158
 612              		.loc 1 150 15 is_stmt 0 view .LVU159
 613 0032 1348     		ldr	r0, .L49+16
 614              	.LVL58:
 615              		.loc 1 150 15 view .LVU160
 616 0034 FFF7FEFF 		bl	GetPage
 617              	.LVL59:
 618              		.loc 1 150 28 view .LVU161
 619 0038 C51B     		subs	r5, r0, r7
 620              		.loc 1 150 13 view .LVU162
 621 003a 0135     		adds	r5, r5, #1
 622              	.LVL60:
 151:Core/Src/flash.c ****   /* Get the bank */
 152:Core/Src/flash.c ****   BankNumber = GetBank(bottom);
 623              		.loc 1 152 3 is_stmt 1 view .LVU163
 624              		.loc 1 152 16 is_stmt 0 view .LVU164
 625 003c 2046     		mov	r0, r4
 626 003e FFF7FEFF 		bl	GetBank
 627              	.LVL61:
 153:Core/Src/flash.c ****   /* Fill EraseInit structure*/
 154:Core/Src/flash.c ****   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 628              		.loc 1 154 3 is_stmt 1 view .LVU165
 629              		.loc 1 154 31 is_stmt 0 view .LVU166
 630 0042 104B     		ldr	r3, .L49+20
 631 0044 1E60     		str	r6, [r3]
 155:Core/Src/flash.c ****   EraseInitStruct.Banks       = BankNumber;
 632              		.loc 1 155 3 is_stmt 1 view .LVU167
ARM GAS  /tmp/ccSJzgEg.s 			page 17


 633              		.loc 1 155 31 is_stmt 0 view .LVU168
 634 0046 5860     		str	r0, [r3, #4]
 156:Core/Src/flash.c ****   EraseInitStruct.Page        = FirstPage;
 635              		.loc 1 156 3 is_stmt 1 view .LVU169
 636              		.loc 1 156 31 is_stmt 0 view .LVU170
 637 0048 9F60     		str	r7, [r3, #8]
 157:Core/Src/flash.c ****   EraseInitStruct.NbPages     = NbOfPages;
 638              		.loc 1 157 3 is_stmt 1 view .LVU171
 639              		.loc 1 157 31 is_stmt 0 view .LVU172
 640 004a DD60     		str	r5, [r3, #12]
 158:Core/Src/flash.c **** 
 159:Core/Src/flash.c ****   /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cach
 160:Core/Src/flash.c ****      you have to make sure that these data are rewritten before they are accessed during code
 161:Core/Src/flash.c ****      execution. If this cannot be done safely, it is recommended to flush the caches by setting the
 162:Core/Src/flash.c ****      DCRST and ICRST bits in the FLASH_CR register. */
 163:Core/Src/flash.c ****   if (HAL_FLASHEx_Erase(&EraseInitStruct, &PAGEError) != HAL_OK) {
 641              		.loc 1 163 3 is_stmt 1 view .LVU173
 642              		.loc 1 163 7 is_stmt 0 view .LVU174
 643 004c 01A9     		add	r1, sp, #4
 644 004e 1846     		mov	r0, r3
 645              	.LVL62:
 646              		.loc 1 163 7 view .LVU175
 647 0050 FFF7FEFF 		bl	HAL_FLASHEx_Erase
 648              	.LVL63:
 649              		.loc 1 163 6 view .LVU176
 650 0054 38B9     		cbnz	r0, .L48
 164:Core/Src/flash.c ****     HAL_FLASH_Lock();
 165:Core/Src/flash.c ****     return (-1);
 166:Core/Src/flash.c ****   }
 167:Core/Src/flash.c ****   HAL_FLASH_Lock();
 651              		.loc 1 167 3 is_stmt 1 view .LVU177
 652 0056 FFF7FEFF 		bl	HAL_FLASH_Lock
 653              	.LVL64:
 168:Core/Src/flash.c ****   flash_write_init(&flash_status);
 654              		.loc 1 168 3 view .LVU178
 655 005a 0B48     		ldr	r0, .L49+24
 656 005c FFF7FEFF 		bl	flash_write_init
 657              	.LVL65:
 169:Core/Src/flash.c ****   return(0);
 658              		.loc 1 169 3 view .LVU179
 659              		.loc 1 169 9 is_stmt 0 view .LVU180
 660 0060 0020     		movs	r0, #0
 661              	.L44:
 170:Core/Src/flash.c **** } 
 662              		.loc 1 170 1 view .LVU181
 663 0062 03B0     		add	sp, sp, #12
 664              	.LCFI10:
 665              		.cfi_remember_state
 666              		.cfi_def_cfa_offset 20
 667              		@ sp needed
 668 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 669              	.LVL66:
 670              	.L48:
 671              	.LCFI11:
 672              		.cfi_restore_state
 164:Core/Src/flash.c ****     return (-1);
 673              		.loc 1 164 5 is_stmt 1 view .LVU182
ARM GAS  /tmp/ccSJzgEg.s 			page 18


 674 0066 FFF7FEFF 		bl	HAL_FLASH_Lock
 675              	.LVL67:
 165:Core/Src/flash.c ****   }
 676              		.loc 1 165 5 view .LVU183
 165:Core/Src/flash.c ****   }
 677              		.loc 1 165 12 is_stmt 0 view .LVU184
 678 006a 4FF0FF30 		mov	r0, #-1
 679 006e F8E7     		b	.L44
 680              	.L50:
 681              		.align	2
 682              	.L49:
 683 0070 00000000 		.word	__fini_array_end
 684 0074 00000000 		.word	_edata
 685 0078 00000000 		.word	_sdata
 686 007c 00200240 		.word	1073881088
 687 0080 FFFF0308 		.word	134479871
 688 0084 00000000 		.word	.LANCHOR1
 689 0088 00000000 		.word	flash_status
 690              		.cfi_endproc
 691              	.LFE298:
 693              		.section	.rodata.ef_command.str1.4,"aMS",%progbits,1
 694              		.align	2
 695              	.LC6:
 696 0000 4E4F4B0A 		.ascii	"NOK\012\015\000"
 696      0D00
 697 0006 0000     		.align	2
 698              	.LC7:
 699 0008 616C6C00 		.ascii	"all\000"
 700              		.align	2
 701              	.LC8:
 702 000c 45726173 		.ascii	"Erase Here!\012\015\000"
 702      65204865 
 702      7265210A 
 702      0D00
 703              		.section	.text.ef_command,"ax",%progbits
 704              		.align	1
 705              		.global	ef_command
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 709              		.fpu fpv4-sp-d16
 711              	ef_command:
 712              	.LVL68:
 713              	.LFB291:
  24:Core/Src/flash.c ****   if (!args) {
 714              		.loc 1 24 29 is_stmt 1 view -0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
  24:Core/Src/flash.c ****   if (!args) {
 718              		.loc 1 24 29 is_stmt 0 view .LVU186
 719 0000 08B5     		push	{r3, lr}
 720              	.LCFI12:
 721              		.cfi_def_cfa_offset 8
 722              		.cfi_offset 3, -8
 723              		.cfi_offset 14, -4
  25:Core/Src/flash.c ****     printf("NOK\n\r");
ARM GAS  /tmp/ccSJzgEg.s 			page 19


 724              		.loc 1 25 3 is_stmt 1 view .LVU187
  25:Core/Src/flash.c ****     printf("NOK\n\r");
 725              		.loc 1 25 6 is_stmt 0 view .LVU188
 726 0002 68B1     		cbz	r0, .L56
 727 0004 0146     		mov	r1, r0
  30:Core/Src/flash.c ****       flash_erase();
 728              		.loc 1 30 5 is_stmt 1 view .LVU189
  30:Core/Src/flash.c ****       flash_erase();
 729              		.loc 1 30 10 is_stmt 0 view .LVU190
 730 0006 0A48     		ldr	r0, .L57
 731              	.LVL69:
  30:Core/Src/flash.c ****       flash_erase();
 732              		.loc 1 30 10 view .LVU191
 733 0008 FFF7FEFF 		bl	strcmp
 734              	.LVL70:
  30:Core/Src/flash.c ****       flash_erase();
 735              		.loc 1 30 8 view .LVU192
 736 000c 60B9     		cbnz	r0, .L54
  31:Core/Src/flash.c ****       printf("Erase Here!\n\r");
 737              		.loc 1 31 7 is_stmt 1 view .LVU193
 738 000e FFF7FEFF 		bl	flash_erase
 739              	.LVL71:
  32:Core/Src/flash.c ****     }
 740              		.loc 1 32 7 view .LVU194
 741 0012 0848     		ldr	r0, .L57+4
 742 0014 FFF7FEFF 		bl	printf
 743              	.LVL72:
  39:Core/Src/flash.c **** }
 744              		.loc 1 39 3 view .LVU195
 745 0018 0748     		ldr	r0, .L57+8
 746 001a FFF7FEFF 		bl	printf
 747              	.LVL73:
 748              	.L51:
  40:Core/Src/flash.c **** 
 749              		.loc 1 40 1 is_stmt 0 view .LVU196
 750 001e 08BD     		pop	{r3, pc}
 751              	.LVL74:
 752              	.L56:
  26:Core/Src/flash.c ****     return;
 753              		.loc 1 26 5 is_stmt 1 view .LVU197
 754 0020 0648     		ldr	r0, .L57+12
 755              	.LVL75:
  26:Core/Src/flash.c ****     return;
 756              		.loc 1 26 5 is_stmt 0 view .LVU198
 757 0022 FFF7FEFF 		bl	printf
 758              	.LVL76:
  27:Core/Src/flash.c ****   }
 759              		.loc 1 27 5 is_stmt 1 view .LVU199
 760 0026 FAE7     		b	.L51
 761              	.L54:
  35:Core/Src/flash.c ****       return;
 762              		.loc 1 35 7 view .LVU200
 763 0028 0448     		ldr	r0, .L57+12
 764 002a FFF7FEFF 		bl	printf
 765              	.LVL77:
  36:Core/Src/flash.c ****     }
 766              		.loc 1 36 7 view .LVU201
ARM GAS  /tmp/ccSJzgEg.s 			page 20


 767 002e F6E7     		b	.L51
 768              	.L58:
 769              		.align	2
 770              	.L57:
 771 0030 08000000 		.word	.LC7
 772 0034 0C000000 		.word	.LC8
 773 0038 84000000 		.word	.LC5
 774 003c 00000000 		.word	.LC6
 775              		.cfi_endproc
 776              	.LFE291:
 778              		.section	.bss.EraseInitStruct.0,"aw",%nobits
 779              		.align	2
 780              		.set	.LANCHOR1,. + 0
 783              	EraseInitStruct.0:
 784 0000 00000000 		.space	16
 784      00000000 
 784      00000000 
 784      00000000 
 785              		.section	.bss.EraseInitStruct.1,"aw",%nobits
 786              		.align	2
 787              		.set	.LANCHOR0,. + 0
 790              	EraseInitStruct.1:
 791 0000 00000000 		.space	16
 791      00000000 
 791      00000000 
 791      00000000 
 792              		.text
 793              	.Letext0:
 794              		.file 2 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10.3-2021.07/arm-none-eabi/include/machine/_defa
 795              		.file 3 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10.3-2021.07/arm-none-eabi/include/sys/_stdint.h
 796              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 797              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 798              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 799              		.file 7 "Core/Inc/flash.h"
 800              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash_ex.h"
 801              		.file 9 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10.3-2021.07/arm-none-eabi/include/stdio.h"
 802              		.file 10 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10.3-2021.07/arm-none-eabi/include/string.h"
ARM GAS  /tmp/ccSJzgEg.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 flash.c
     /tmp/ccSJzgEg.s:18     .text.GetPage:0000000000000000 $t
     /tmp/ccSJzgEg.s:25     .text.GetPage:0000000000000000 GetPage
     /tmp/ccSJzgEg.s:81     .text.GetPage:0000000000000030 $d
     /tmp/ccSJzgEg.s:88     .text.GetBank:0000000000000000 $t
     /tmp/ccSJzgEg.s:94     .text.GetBank:0000000000000000 GetBank
     /tmp/ccSJzgEg.s:112    .rodata.flash_info_command.str1.4:0000000000000000 $d
     /tmp/ccSJzgEg.s:131    .text.flash_info_command:0000000000000000 $t
     /tmp/ccSJzgEg.s:138    .text.flash_info_command:0000000000000000 flash_info_command
     /tmp/ccSJzgEg.s:213    .text.flash_info_command:0000000000000050 $d
     /tmp/ccSJzgEg.s:224    .text.flash_write_init:0000000000000000 $t
     /tmp/ccSJzgEg.s:231    .text.flash_write_init:0000000000000000 flash_write_init
     /tmp/ccSJzgEg.s:303    .text.flash_write_init:0000000000000034 $d
     /tmp/ccSJzgEg.s:311    .text.write_raw:0000000000000000 $t
     /tmp/ccSJzgEg.s:318    .text.write_raw:0000000000000000 write_raw
     /tmp/ccSJzgEg.s:437    .text.erase_one_page:0000000000000000 $t
     /tmp/ccSJzgEg.s:444    .text.erase_one_page:0000000000000000 erase_one_page
     /tmp/ccSJzgEg.s:537    .text.erase_one_page:000000000000004c $d
     /tmp/ccSJzgEg.s:543    .text.flash_erase:0000000000000000 $t
     /tmp/ccSJzgEg.s:550    .text.flash_erase:0000000000000000 flash_erase
     /tmp/ccSJzgEg.s:683    .text.flash_erase:0000000000000070 $d
     /tmp/ccSJzgEg.s:694    .rodata.ef_command.str1.4:0000000000000000 $d
     /tmp/ccSJzgEg.s:704    .text.ef_command:0000000000000000 $t
     /tmp/ccSJzgEg.s:711    .text.ef_command:0000000000000000 ef_command
     /tmp/ccSJzgEg.s:771    .text.ef_command:0000000000000030 $d
     /tmp/ccSJzgEg.s:779    .bss.EraseInitStruct.0:0000000000000000 $d
     /tmp/ccSJzgEg.s:783    .bss.EraseInitStruct.0:0000000000000000 EraseInitStruct.0
     /tmp/ccSJzgEg.s:786    .bss.EraseInitStruct.1:0000000000000000 $d
     /tmp/ccSJzgEg.s:790    .bss.EraseInitStruct.1:0000000000000000 EraseInitStruct.1

UNDEFINED SYMBOLS
printf
flash_status
__fini_array_end
_edata
_sdata
HAL_FLASH_Unlock
HAL_FLASH_Program
HAL_FLASH_Lock
HAL_FLASHEx_Erase
strcmp
