ARM GAS  /tmp/cc9KfeNy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB140:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <string.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cc9KfeNy.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** #define MAX_BUF 20
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** UART_HandleTypeDef huart2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** void led_on(void) {
  59:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_SET);
  60:Core/Src/main.c **** }
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** void led_off(void) {
  63:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  64:Core/Src/main.c **** }
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** int print_string(uint8_t * buf) {
  67:Core/Src/main.c ****   if (buf==0) {
  68:Core/Src/main.c ****     return(-1);
  69:Core/Src/main.c ****   }
  70:Core/Src/main.c ****   else {
  71:Core/Src/main.c ****     while (*buf) {
  72:Core/Src/main.c ****       HAL_UART_Transmit(&huart2,buf,1,10);
  73:Core/Src/main.c ****       buf++;
  74:Core/Src/main.c ****     }
  75:Core/Src/main.c ****   }
  76:Core/Src/main.c ****   return(0);
  77:Core/Src/main.c **** }
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** uint8_t writechar(uint8_t data) {
  80:Core/Src/main.c ****   HAL_UART_Transmit(&huart2,&data,1,10);
  81:Core/Src/main.c ****   return(0);
  82:Core/Src/main.c **** }
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** uint8_t readchar(void) {
  86:Core/Src/main.c ****   uint8_t ch;
  87:Core/Src/main.c ****   HAL_StatusTypeDef status = 1;
  88:Core/Src/main.c ****   while (status != HAL_OK) {
ARM GAS  /tmp/cc9KfeNy.s 			page 3


  89:Core/Src/main.c ****     status=HAL_UART_Receive(&huart2, &ch, 1, 10);
  90:Core/Src/main.c ****   }
  91:Core/Src/main.c ****   return(ch);
  92:Core/Src/main.c **** }
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* USER CODE END PFP */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  97:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* USER CODE END 0 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /**
 102:Core/Src/main.c ****   * @brief  The application entry point.
 103:Core/Src/main.c ****   * @retval int
 104:Core/Src/main.c ****   */
 105:Core/Src/main.c **** int main(void)
 106:Core/Src/main.c **** {
 107:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 108:Core/Src/main.c ****   uint8_t welcome[]="Up and Running\n\r";
 109:Core/Src/main.c ****   uint8_t newline[]="\n\r";
 110:Core/Src/main.c ****   uint8_t lon[]="lon";
 111:Core/Src/main.c ****   uint8_t lof[]="lof";
 112:Core/Src/main.c ****   uint8_t prompt[]="E314> ";
 113:Core/Src/main.c ****   uint8_t success_msg[]="OK\n\r";
 114:Core/Src/main.c ****   uint8_t error_msg[]="ERR\n\r";
 115:Core/Src/main.c ****     
 116:Core/Src/main.c ****   uint8_t buf[MAX_BUF];
 117:Core/Src/main.c ****   uint8_t *p;
 118:Core/Src/main.c ****   enum {INITIALIZE, READ_CHARS, EXECUTE};
 119:Core/Src/main.c ****   int state = INITIALIZE;
 120:Core/Src/main.c ****   
 121:Core/Src/main.c ****   /* USER CODE END 1 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 126:Core/Src/main.c ****   HAL_Init();
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* USER CODE END Init */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Configure the system clock */
 133:Core/Src/main.c ****   SystemClock_Config();
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE END SysInit */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Initialize all configured peripherals */
 140:Core/Src/main.c ****   MX_GPIO_Init();
 141:Core/Src/main.c ****   MX_USART2_UART_Init();
 142:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 143:Core/Src/main.c ****   led_on();
 144:Core/Src/main.c ****   print_string(newline);
 145:Core/Src/main.c ****   print_string(welcome);
ARM GAS  /tmp/cc9KfeNy.s 			page 4


 146:Core/Src/main.c ****   /* USER CODE END 2 */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* Infinite loop */
 149:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 150:Core/Src/main.c ****   while (1)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     switch (state) {
 153:Core/Src/main.c ****     case INITIALIZE:
 154:Core/Src/main.c ****       print_string(prompt);
 155:Core/Src/main.c ****       p = buf;
 156:Core/Src/main.c ****       state = READ_CHARS;
 157:Core/Src/main.c ****       break;
 158:Core/Src/main.c ****     case READ_CHARS:
 159:Core/Src/main.c ****       *p = readchar();
 160:Core/Src/main.c ****       while (*p!='\r') {
 161:Core/Src/main.c ****         writechar(*p);
 162:Core/Src/main.c ****         p++;
 163:Core/Src/main.c ****         *p = readchar();
 164:Core/Src/main.c ****       }
 165:Core/Src/main.c ****       *p=0;
 166:Core/Src/main.c ****       state = EXECUTE;
 167:Core/Src/main.c ****       break;
 168:Core/Src/main.c ****     case EXECUTE:
 169:Core/Src/main.c ****       print_string(newline);
 170:Core/Src/main.c ****       if (!strcmp((char *)buf,(char *)lon)) {
 171:Core/Src/main.c ****         led_on();
 172:Core/Src/main.c ****         print_string(success_msg);
 173:Core/Src/main.c ****       }
 174:Core/Src/main.c ****       else if (!strcmp((char *)buf,(char *)lof)) {
 175:Core/Src/main.c ****         led_off();
 176:Core/Src/main.c ****         print_string(success_msg);
 177:Core/Src/main.c ****       }
 178:Core/Src/main.c ****       else {
 179:Core/Src/main.c ****         print_string(error_msg);
 180:Core/Src/main.c ****       }
 181:Core/Src/main.c ****       state = INITIALIZE;
 182:Core/Src/main.c ****       break;
 183:Core/Src/main.c ****     default:
 184:Core/Src/main.c ****       state = INITIALIZE;
 185:Core/Src/main.c ****     }
 186:Core/Src/main.c ****     /* USER CODE END WHILE */
 187:Core/Src/main.c ****     /* readchar(); */
 188:Core/Src/main.c ****     /* print_string(receive_msg); */
 189:Core/Src/main.c ****     
 190:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   /* USER CODE END 3 */
 193:Core/Src/main.c **** }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c ****   * @brief System Clock Configuration
 197:Core/Src/main.c ****   * @retval None
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c **** void SystemClock_Config(void)
 200:Core/Src/main.c **** {
 201:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 202:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/cc9KfeNy.s 			page 5


 203:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /** Configure LSE Drive Capability
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 208:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 209:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 210:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 213:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 214:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 215:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 216:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 224:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 232:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 242:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 243:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 248:Core/Src/main.c ****   */
 249:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 250:Core/Src/main.c ****   {
 251:Core/Src/main.c ****     Error_Handler();
 252:Core/Src/main.c ****   }
 253:Core/Src/main.c ****   /** Enable MSI Auto calibration
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c ****   HAL_RCCEx_EnableMSIPLLMode();
 256:Core/Src/main.c **** }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /**
 259:Core/Src/main.c ****   * @brief USART2 Initialization Function
ARM GAS  /tmp/cc9KfeNy.s 			page 6


 260:Core/Src/main.c ****   * @param None
 261:Core/Src/main.c ****   * @retval None
 262:Core/Src/main.c ****   */
 263:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 264:Core/Src/main.c **** {
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 273:Core/Src/main.c ****   huart2.Instance = USART2;
 274:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 275:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 276:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 277:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 278:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 279:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 280:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 281:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 282:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 283:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 284:Core/Src/main.c ****   {
 285:Core/Src/main.c ****     Error_Handler();
 286:Core/Src/main.c ****   }
 287:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** /**
 294:Core/Src/main.c ****   * @brief GPIO Initialization Function
 295:Core/Src/main.c ****   * @param None
 296:Core/Src/main.c ****   * @retval None
 297:Core/Src/main.c ****   */
 298:Core/Src/main.c **** static void MX_GPIO_Init(void)
 299:Core/Src/main.c **** {
  28              		.loc 1 299 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 300:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 300 3 view .LVU1
  42              		.loc 1 300 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
ARM GAS  /tmp/cc9KfeNy.s 			page 7


  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 303:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 303 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 303 3 view .LVU4
  52              		.loc 1 303 3 view .LVU5
  53 0010 164B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 303 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 303 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 303 3 view .LVU8
 304:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 304 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 304 3 view .LVU10
  68              		.loc 1 304 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F00102 		orr	r2, r2, #1
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 304 3 view .LVU12
  73 002c DA6C     		ldr	r2, [r3, #76]
  74 002e 02F00102 		and	r2, r2, #1
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 304 3 view .LVU13
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 304 3 view .LVU14
 305:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 305 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 305 3 view .LVU16
  83              		.loc 1 305 3 view .LVU17
  84 0036 DA6C     		ldr	r2, [r3, #76]
  85 0038 42F00202 		orr	r2, r2, #2
  86 003c DA64     		str	r2, [r3, #76]
  87              		.loc 1 305 3 view .LVU18
  88 003e DB6C     		ldr	r3, [r3, #76]
  89 0040 03F00203 		and	r3, r3, #2
  90 0044 0293     		str	r3, [sp, #8]
  91              		.loc 1 305 3 view .LVU19
  92 0046 029B     		ldr	r3, [sp, #8]
  93              	.LBE6:
  94              		.loc 1 305 3 view .LVU20
 306:Core/Src/main.c **** 
ARM GAS  /tmp/cc9KfeNy.s 			page 8


 307:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 308:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  95              		.loc 1 308 3 view .LVU21
  96 0048 094D     		ldr	r5, .L3+4
  97 004a 2246     		mov	r2, r4
  98 004c 0821     		movs	r1, #8
  99 004e 2846     		mov	r0, r5
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /*Configure GPIO pin : LD3_Pin */
 311:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD3_Pin;
 102              		.loc 1 311 3 view .LVU22
 103              		.loc 1 311 23 is_stmt 0 view .LVU23
 104 0054 0823     		movs	r3, #8
 105 0056 0393     		str	r3, [sp, #12]
 312:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 106              		.loc 1 312 3 is_stmt 1 view .LVU24
 107              		.loc 1 312 24 is_stmt 0 view .LVU25
 108 0058 0123     		movs	r3, #1
 109 005a 0493     		str	r3, [sp, #16]
 313:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 110              		.loc 1 313 3 is_stmt 1 view .LVU26
 111              		.loc 1 313 24 is_stmt 0 view .LVU27
 112 005c 0594     		str	r4, [sp, #20]
 314:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 314 3 is_stmt 1 view .LVU28
 114              		.loc 1 314 25 is_stmt 0 view .LVU29
 115 005e 0694     		str	r4, [sp, #24]
 315:Core/Src/main.c ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 315 3 is_stmt 1 view .LVU30
 117 0060 03A9     		add	r1, sp, #12
 118 0062 2846     		mov	r0, r5
 119 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL1:
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** }
 121              		.loc 1 317 1 is_stmt 0 view .LVU31
 122 0068 09B0     		add	sp, sp, #36
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 12
 125              		@ sp needed
 126 006a 30BD     		pop	{r4, r5, pc}
 127              	.L4:
 128              		.align	2
 129              	.L3:
 130 006c 00100240 		.word	1073876992
 131 0070 00040048 		.word	1207960576
 132              		.cfi_endproc
 133              	.LFE140:
 135              		.section	.text.led_on,"ax",%progbits
 136              		.align	1
 137              		.global	led_on
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc9KfeNy.s 			page 9


 143              	led_on:
 144              	.LFB132:
  58:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_SET);
 145              		.loc 1 58 19 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 08B5     		push	{r3, lr}
 150              	.LCFI3:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 3, -8
 153              		.cfi_offset 14, -4
  59:Core/Src/main.c **** }
 154              		.loc 1 59 3 view .LVU33
 155 0002 0122     		movs	r2, #1
 156 0004 0821     		movs	r1, #8
 157 0006 0248     		ldr	r0, .L7
 158 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 159              	.LVL2:
  60:Core/Src/main.c **** 
 160              		.loc 1 60 1 is_stmt 0 view .LVU34
 161 000c 08BD     		pop	{r3, pc}
 162              	.L8:
 163 000e 00BF     		.align	2
 164              	.L7:
 165 0010 00040048 		.word	1207960576
 166              		.cfi_endproc
 167              	.LFE132:
 169              		.section	.text.led_off,"ax",%progbits
 170              		.align	1
 171              		.global	led_off
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	led_off:
 178              	.LFB133:
  62:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 179              		.loc 1 62 20 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 08B5     		push	{r3, lr}
 184              	.LCFI4:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
  63:Core/Src/main.c **** }
 188              		.loc 1 63 3 view .LVU36
 189 0002 0022     		movs	r2, #0
 190 0004 0821     		movs	r1, #8
 191 0006 0248     		ldr	r0, .L11
 192 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 193              	.LVL3:
  64:Core/Src/main.c **** 
 194              		.loc 1 64 1 is_stmt 0 view .LVU37
 195 000c 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc9KfeNy.s 			page 10


 196              	.L12:
 197 000e 00BF     		.align	2
 198              	.L11:
 199 0010 00040048 		.word	1207960576
 200              		.cfi_endproc
 201              	.LFE133:
 203              		.section	.text.print_string,"ax",%progbits
 204              		.align	1
 205              		.global	print_string
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	print_string:
 212              	.LVL4:
 213              	.LFB134:
  66:Core/Src/main.c ****   if (buf==0) {
 214              		.loc 1 66 33 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
  66:Core/Src/main.c ****   if (buf==0) {
 218              		.loc 1 66 33 is_stmt 0 view .LVU39
 219 0000 10B5     		push	{r4, lr}
 220              	.LCFI5:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
  67:Core/Src/main.c ****     return(-1);
 224              		.loc 1 67 3 is_stmt 1 view .LVU40
  67:Core/Src/main.c ****     return(-1);
 225              		.loc 1 67 6 is_stmt 0 view .LVU41
 226 0002 0446     		mov	r4, r0
 227 0004 48B9     		cbnz	r0, .L15
  68:Core/Src/main.c ****   }
 228              		.loc 1 68 11 view .LVU42
 229 0006 4FF0FF30 		mov	r0, #-1
 230              	.LVL5:
  68:Core/Src/main.c ****   }
 231              		.loc 1 68 11 view .LVU43
 232 000a 0AE0     		b	.L13
 233              	.L16:
  72:Core/Src/main.c ****       buf++;
 234              		.loc 1 72 7 is_stmt 1 view .LVU44
 235 000c 0A23     		movs	r3, #10
 236 000e 0122     		movs	r2, #1
 237 0010 2146     		mov	r1, r4
 238 0012 0448     		ldr	r0, .L19
 239 0014 FFF7FEFF 		bl	HAL_UART_Transmit
 240              	.LVL6:
  73:Core/Src/main.c ****     }
 241              		.loc 1 73 7 view .LVU45
  73:Core/Src/main.c ****     }
 242              		.loc 1 73 10 is_stmt 0 view .LVU46
 243 0018 0134     		adds	r4, r4, #1
 244              	.LVL7:
 245              	.L15:
ARM GAS  /tmp/cc9KfeNy.s 			page 11


  71:Core/Src/main.c ****       HAL_UART_Transmit(&huart2,buf,1,10);
 246              		.loc 1 71 11 is_stmt 1 view .LVU47
  71:Core/Src/main.c ****       HAL_UART_Transmit(&huart2,buf,1,10);
 247              		.loc 1 71 12 is_stmt 0 view .LVU48
 248 001a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  71:Core/Src/main.c ****       HAL_UART_Transmit(&huart2,buf,1,10);
 249              		.loc 1 71 11 view .LVU49
 250 001c 002B     		cmp	r3, #0
 251 001e F5D1     		bne	.L16
  76:Core/Src/main.c **** }
 252              		.loc 1 76 9 view .LVU50
 253 0020 0020     		movs	r0, #0
 254              	.L13:
  77:Core/Src/main.c **** 
 255              		.loc 1 77 1 view .LVU51
 256 0022 10BD     		pop	{r4, pc}
 257              	.LVL8:
 258              	.L20:
  77:Core/Src/main.c **** 
 259              		.loc 1 77 1 view .LVU52
 260              		.align	2
 261              	.L19:
 262 0024 00000000 		.word	.LANCHOR0
 263              		.cfi_endproc
 264              	.LFE134:
 266              		.section	.text.writechar,"ax",%progbits
 267              		.align	1
 268              		.global	writechar
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu fpv4-sp-d16
 274              	writechar:
 275              	.LVL9:
 276              	.LFB135:
  79:Core/Src/main.c ****   HAL_UART_Transmit(&huart2,&data,1,10);
 277              		.loc 1 79 33 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 0, uses_anonymous_args = 0
  79:Core/Src/main.c ****   HAL_UART_Transmit(&huart2,&data,1,10);
 281              		.loc 1 79 33 is_stmt 0 view .LVU54
 282 0000 00B5     		push	{lr}
 283              	.LCFI6:
 284              		.cfi_def_cfa_offset 4
 285              		.cfi_offset 14, -4
 286 0002 83B0     		sub	sp, sp, #12
 287              	.LCFI7:
 288              		.cfi_def_cfa_offset 16
 289 0004 8DF80700 		strb	r0, [sp, #7]
  80:Core/Src/main.c ****   return(0);
 290              		.loc 1 80 3 is_stmt 1 view .LVU55
 291 0008 0A23     		movs	r3, #10
 292 000a 0122     		movs	r2, #1
 293 000c 0DF10701 		add	r1, sp, #7
 294 0010 0348     		ldr	r0, .L23
 295              	.LVL10:
ARM GAS  /tmp/cc9KfeNy.s 			page 12


  80:Core/Src/main.c ****   return(0);
 296              		.loc 1 80 3 is_stmt 0 view .LVU56
 297 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 298              	.LVL11:
  81:Core/Src/main.c **** }
 299              		.loc 1 81 3 is_stmt 1 view .LVU57
  82:Core/Src/main.c **** 
 300              		.loc 1 82 1 is_stmt 0 view .LVU58
 301 0016 0020     		movs	r0, #0
 302 0018 03B0     		add	sp, sp, #12
 303              	.LCFI8:
 304              		.cfi_def_cfa_offset 4
 305              		@ sp needed
 306 001a 5DF804FB 		ldr	pc, [sp], #4
 307              	.L24:
 308 001e 00BF     		.align	2
 309              	.L23:
 310 0020 00000000 		.word	.LANCHOR0
 311              		.cfi_endproc
 312              	.LFE135:
 314              		.section	.text.readchar,"ax",%progbits
 315              		.align	1
 316              		.global	readchar
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	readchar:
 323              	.LFB136:
  85:Core/Src/main.c ****   uint8_t ch;
 324              		.loc 1 85 24 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 8
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 00B5     		push	{lr}
 329              	.LCFI9:
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 14, -4
 332 0002 83B0     		sub	sp, sp, #12
 333              	.LCFI10:
 334              		.cfi_def_cfa_offset 16
  86:Core/Src/main.c ****   HAL_StatusTypeDef status = 1;
 335              		.loc 1 86 3 view .LVU60
  87:Core/Src/main.c ****   while (status != HAL_OK) {
 336              		.loc 1 87 3 view .LVU61
 337              	.LVL12:
  88:Core/Src/main.c ****     status=HAL_UART_Receive(&huart2, &ch, 1, 10);
 338              		.loc 1 88 3 view .LVU62
  87:Core/Src/main.c ****   while (status != HAL_OK) {
 339              		.loc 1 87 21 is_stmt 0 view .LVU63
 340 0004 0120     		movs	r0, #1
  88:Core/Src/main.c ****     status=HAL_UART_Receive(&huart2, &ch, 1, 10);
 341              		.loc 1 88 9 view .LVU64
 342 0006 06E0     		b	.L26
 343              	.LVL13:
 344              	.L27:
  89:Core/Src/main.c ****   }
ARM GAS  /tmp/cc9KfeNy.s 			page 13


 345              		.loc 1 89 5 is_stmt 1 view .LVU65
  89:Core/Src/main.c ****   }
 346              		.loc 1 89 12 is_stmt 0 view .LVU66
 347 0008 0A23     		movs	r3, #10
 348 000a 0122     		movs	r2, #1
 349 000c 0DF10701 		add	r1, sp, #7
 350 0010 0448     		ldr	r0, .L29
 351              	.LVL14:
  89:Core/Src/main.c ****   }
 352              		.loc 1 89 12 view .LVU67
 353 0012 FFF7FEFF 		bl	HAL_UART_Receive
 354              	.LVL15:
 355              	.L26:
  88:Core/Src/main.c ****     status=HAL_UART_Receive(&huart2, &ch, 1, 10);
 356              		.loc 1 88 9 is_stmt 1 view .LVU68
 357 0016 0028     		cmp	r0, #0
 358 0018 F6D1     		bne	.L27
  91:Core/Src/main.c **** }
 359              		.loc 1 91 3 view .LVU69
  92:Core/Src/main.c **** 
 360              		.loc 1 92 1 is_stmt 0 view .LVU70
 361 001a 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 362              	.LVL16:
  92:Core/Src/main.c **** 
 363              		.loc 1 92 1 view .LVU71
 364 001e 03B0     		add	sp, sp, #12
 365              	.LCFI11:
 366              		.cfi_def_cfa_offset 4
 367              		@ sp needed
 368 0020 5DF804FB 		ldr	pc, [sp], #4
 369              	.L30:
 370              		.align	2
 371              	.L29:
 372 0024 00000000 		.word	.LANCHOR0
 373              		.cfi_endproc
 374              	.LFE136:
 376              		.section	.text.Error_Handler,"ax",%progbits
 377              		.align	1
 378              		.global	Error_Handler
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv4-sp-d16
 384              	Error_Handler:
 385              	.LFB141:
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /* USER CODE END 4 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** /**
 324:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 325:Core/Src/main.c ****   * @retval None
 326:Core/Src/main.c ****   */
 327:Core/Src/main.c **** void Error_Handler(void)
 328:Core/Src/main.c **** {
 386              		.loc 1 328 1 is_stmt 1 view -0
ARM GAS  /tmp/cc9KfeNy.s 			page 14


 387              		.cfi_startproc
 388              		@ Volatile: function does not return.
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 329:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 330:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 331:Core/Src/main.c ****   __disable_irq();
 392              		.loc 1 331 3 view .LVU73
 393              	.LBB7:
 394              	.LBI7:
 395              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc9KfeNy.s 			page 15


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  /tmp/cc9KfeNy.s 			page 16


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
ARM GAS  /tmp/cc9KfeNy.s 			page 17


 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 396              		.loc 2 207 27 view .LVU74
 397              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 398              		.loc 2 209 3 view .LVU75
 399              		.syntax unified
 400              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 401 0000 72B6     		cpsid i
 402              	@ 0 "" 2
ARM GAS  /tmp/cc9KfeNy.s 			page 18


 403              		.thumb
 404              		.syntax unified
 405              	.L32:
 406              	.LBE8:
 407              	.LBE7:
 332:Core/Src/main.c ****   while (1)
 408              		.loc 1 332 3 discriminator 1 view .LVU76
 333:Core/Src/main.c ****   {
 334:Core/Src/main.c ****   }
 409              		.loc 1 334 3 discriminator 1 view .LVU77
 332:Core/Src/main.c ****   while (1)
 410              		.loc 1 332 9 discriminator 1 view .LVU78
 411 0002 FEE7     		b	.L32
 412              		.cfi_endproc
 413              	.LFE141:
 415              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 416              		.align	1
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 420              		.fpu fpv4-sp-d16
 422              	MX_USART2_UART_Init:
 423              	.LFB139:
 264:Core/Src/main.c **** 
 424              		.loc 1 264 1 view -0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428 0000 08B5     		push	{r3, lr}
 429              	.LCFI12:
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 3, -8
 432              		.cfi_offset 14, -4
 273:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 433              		.loc 1 273 3 view .LVU80
 273:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 434              		.loc 1 273 19 is_stmt 0 view .LVU81
 435 0002 0B48     		ldr	r0, .L37
 436 0004 0B4B     		ldr	r3, .L37+4
 437 0006 0360     		str	r3, [r0]
 274:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 438              		.loc 1 274 3 is_stmt 1 view .LVU82
 274:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 439              		.loc 1 274 24 is_stmt 0 view .LVU83
 440 0008 4FF41653 		mov	r3, #9600
 441 000c 4360     		str	r3, [r0, #4]
 275:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 442              		.loc 1 275 3 is_stmt 1 view .LVU84
 275:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 443              		.loc 1 275 26 is_stmt 0 view .LVU85
 444 000e 0023     		movs	r3, #0
 445 0010 8360     		str	r3, [r0, #8]
 276:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 446              		.loc 1 276 3 is_stmt 1 view .LVU86
 276:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 447              		.loc 1 276 24 is_stmt 0 view .LVU87
 448 0012 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/cc9KfeNy.s 			page 19


 277:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 449              		.loc 1 277 3 is_stmt 1 view .LVU88
 277:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 450              		.loc 1 277 22 is_stmt 0 view .LVU89
 451 0014 0361     		str	r3, [r0, #16]
 278:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 452              		.loc 1 278 3 is_stmt 1 view .LVU90
 278:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 453              		.loc 1 278 20 is_stmt 0 view .LVU91
 454 0016 0C22     		movs	r2, #12
 455 0018 4261     		str	r2, [r0, #20]
 279:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 456              		.loc 1 279 3 is_stmt 1 view .LVU92
 279:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 457              		.loc 1 279 25 is_stmt 0 view .LVU93
 458 001a 8361     		str	r3, [r0, #24]
 280:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 459              		.loc 1 280 3 is_stmt 1 view .LVU94
 280:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 460              		.loc 1 280 28 is_stmt 0 view .LVU95
 461 001c C361     		str	r3, [r0, #28]
 281:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 462              		.loc 1 281 3 is_stmt 1 view .LVU96
 281:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 463              		.loc 1 281 30 is_stmt 0 view .LVU97
 464 001e 0362     		str	r3, [r0, #32]
 282:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 465              		.loc 1 282 3 is_stmt 1 view .LVU98
 282:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 466              		.loc 1 282 38 is_stmt 0 view .LVU99
 467 0020 4362     		str	r3, [r0, #36]
 283:Core/Src/main.c ****   {
 468              		.loc 1 283 3 is_stmt 1 view .LVU100
 283:Core/Src/main.c ****   {
 469              		.loc 1 283 7 is_stmt 0 view .LVU101
 470 0022 FFF7FEFF 		bl	HAL_UART_Init
 471              	.LVL17:
 283:Core/Src/main.c ****   {
 472              		.loc 1 283 6 view .LVU102
 473 0026 00B9     		cbnz	r0, .L36
 291:Core/Src/main.c **** 
 474              		.loc 1 291 1 view .LVU103
 475 0028 08BD     		pop	{r3, pc}
 476              	.L36:
 285:Core/Src/main.c ****   }
 477              		.loc 1 285 5 is_stmt 1 view .LVU104
 478 002a FFF7FEFF 		bl	Error_Handler
 479              	.LVL18:
 480              	.L38:
 481 002e 00BF     		.align	2
 482              	.L37:
 483 0030 00000000 		.word	.LANCHOR0
 484 0034 00440040 		.word	1073759232
 485              		.cfi_endproc
 486              	.LFE139:
 488              		.section	.text.SystemClock_Config,"ax",%progbits
 489              		.align	1
ARM GAS  /tmp/cc9KfeNy.s 			page 20


 490              		.global	SystemClock_Config
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv4-sp-d16
 496              	SystemClock_Config:
 497              	.LFB138:
 200:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 498              		.loc 1 200 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 176
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 10B5     		push	{r4, lr}
 503              	.LCFI13:
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 4, -8
 506              		.cfi_offset 14, -4
 507 0002 ACB0     		sub	sp, sp, #176
 508              	.LCFI14:
 509              		.cfi_def_cfa_offset 184
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 510              		.loc 1 201 3 view .LVU106
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 511              		.loc 1 201 22 is_stmt 0 view .LVU107
 512 0004 4422     		movs	r2, #68
 513 0006 0021     		movs	r1, #0
 514 0008 1BA8     		add	r0, sp, #108
 515 000a FFF7FEFF 		bl	memset
 516              	.LVL19:
 202:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 517              		.loc 1 202 3 is_stmt 1 view .LVU108
 202:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 518              		.loc 1 202 22 is_stmt 0 view .LVU109
 519 000e 0024     		movs	r4, #0
 520 0010 1694     		str	r4, [sp, #88]
 521 0012 1794     		str	r4, [sp, #92]
 522 0014 1894     		str	r4, [sp, #96]
 523 0016 1994     		str	r4, [sp, #100]
 524 0018 1A94     		str	r4, [sp, #104]
 203:Core/Src/main.c **** 
 525              		.loc 1 203 3 is_stmt 1 view .LVU110
 203:Core/Src/main.c **** 
 526              		.loc 1 203 28 is_stmt 0 view .LVU111
 527 001a 5422     		movs	r2, #84
 528 001c 2146     		mov	r1, r4
 529 001e 01A8     		add	r0, sp, #4
 530 0020 FFF7FEFF 		bl	memset
 531              	.LVL20:
 207:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 532              		.loc 1 207 3 is_stmt 1 view .LVU112
 533 0024 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 534              	.LVL21:
 208:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 535              		.loc 1 208 3 view .LVU113
 536 0028 214A     		ldr	r2, .L49
 537 002a D2F89030 		ldr	r3, [r2, #144]
 538 002e 23F01803 		bic	r3, r3, #24
ARM GAS  /tmp/cc9KfeNy.s 			page 21


 539 0032 C2F89030 		str	r3, [r2, #144]
 212:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 540              		.loc 1 212 3 view .LVU114
 212:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 541              		.loc 1 212 36 is_stmt 0 view .LVU115
 542 0036 1423     		movs	r3, #20
 543 0038 1B93     		str	r3, [sp, #108]
 213:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 544              		.loc 1 213 3 is_stmt 1 view .LVU116
 213:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 545              		.loc 1 213 30 is_stmt 0 view .LVU117
 546 003a 0123     		movs	r3, #1
 547 003c 1D93     		str	r3, [sp, #116]
 214:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 548              		.loc 1 214 3 is_stmt 1 view .LVU118
 214:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 549              		.loc 1 214 30 is_stmt 0 view .LVU119
 550 003e 2193     		str	r3, [sp, #132]
 215:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 551              		.loc 1 215 3 is_stmt 1 view .LVU120
 215:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 552              		.loc 1 215 41 is_stmt 0 view .LVU121
 553 0040 2294     		str	r4, [sp, #136]
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 554              		.loc 1 216 3 is_stmt 1 view .LVU122
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 555              		.loc 1 216 35 is_stmt 0 view .LVU123
 556 0042 6022     		movs	r2, #96
 557 0044 2392     		str	r2, [sp, #140]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 558              		.loc 1 217 3 is_stmt 1 view .LVU124
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 559              		.loc 1 217 34 is_stmt 0 view .LVU125
 560 0046 0222     		movs	r2, #2
 561 0048 2592     		str	r2, [sp, #148]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 562              		.loc 1 218 3 is_stmt 1 view .LVU126
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 563              		.loc 1 218 35 is_stmt 0 view .LVU127
 564 004a 2693     		str	r3, [sp, #152]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 565              		.loc 1 219 3 is_stmt 1 view .LVU128
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 566              		.loc 1 219 30 is_stmt 0 view .LVU129
 567 004c 2793     		str	r3, [sp, #156]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 568              		.loc 1 220 3 is_stmt 1 view .LVU130
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 569              		.loc 1 220 30 is_stmt 0 view .LVU131
 570 004e 1023     		movs	r3, #16
 571 0050 2893     		str	r3, [sp, #160]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 572              		.loc 1 221 3 is_stmt 1 view .LVU132
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 573              		.loc 1 221 30 is_stmt 0 view .LVU133
 574 0052 0723     		movs	r3, #7
 575 0054 2993     		str	r3, [sp, #164]
ARM GAS  /tmp/cc9KfeNy.s 			page 22


 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 576              		.loc 1 222 3 is_stmt 1 view .LVU134
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 577              		.loc 1 222 30 is_stmt 0 view .LVU135
 578 0056 2A92     		str	r2, [sp, #168]
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 579              		.loc 1 223 3 is_stmt 1 view .LVU136
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 580              		.loc 1 223 30 is_stmt 0 view .LVU137
 581 0058 2B92     		str	r2, [sp, #172]
 224:Core/Src/main.c ****   {
 582              		.loc 1 224 3 is_stmt 1 view .LVU138
 224:Core/Src/main.c ****   {
 583              		.loc 1 224 7 is_stmt 0 view .LVU139
 584 005a 1BA8     		add	r0, sp, #108
 585 005c FFF7FEFF 		bl	HAL_RCC_OscConfig
 586              	.LVL22:
 224:Core/Src/main.c ****   {
 587              		.loc 1 224 6 view .LVU140
 588 0060 E8B9     		cbnz	r0, .L45
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 589              		.loc 1 230 3 is_stmt 1 view .LVU141
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 590              		.loc 1 230 31 is_stmt 0 view .LVU142
 591 0062 0F23     		movs	r3, #15
 592 0064 1693     		str	r3, [sp, #88]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 593              		.loc 1 232 3 is_stmt 1 view .LVU143
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 594              		.loc 1 232 34 is_stmt 0 view .LVU144
 595 0066 0323     		movs	r3, #3
 596 0068 1793     		str	r3, [sp, #92]
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 597              		.loc 1 233 3 is_stmt 1 view .LVU145
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 598              		.loc 1 233 35 is_stmt 0 view .LVU146
 599 006a 0023     		movs	r3, #0
 600 006c 1893     		str	r3, [sp, #96]
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 601              		.loc 1 234 3 is_stmt 1 view .LVU147
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 602              		.loc 1 234 36 is_stmt 0 view .LVU148
 603 006e 1993     		str	r3, [sp, #100]
 235:Core/Src/main.c **** 
 604              		.loc 1 235 3 is_stmt 1 view .LVU149
 235:Core/Src/main.c **** 
 605              		.loc 1 235 36 is_stmt 0 view .LVU150
 606 0070 1A93     		str	r3, [sp, #104]
 237:Core/Src/main.c ****   {
 607              		.loc 1 237 3 is_stmt 1 view .LVU151
 237:Core/Src/main.c ****   {
 608              		.loc 1 237 7 is_stmt 0 view .LVU152
 609 0072 0121     		movs	r1, #1
 610 0074 16A8     		add	r0, sp, #88
 611 0076 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 612              	.LVL23:
 237:Core/Src/main.c ****   {
ARM GAS  /tmp/cc9KfeNy.s 			page 23


 613              		.loc 1 237 6 view .LVU153
 614 007a 90B9     		cbnz	r0, .L46
 241:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 615              		.loc 1 241 3 is_stmt 1 view .LVU154
 241:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 616              		.loc 1 241 38 is_stmt 0 view .LVU155
 617 007c 0223     		movs	r3, #2
 618 007e 0193     		str	r3, [sp, #4]
 242:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 619              		.loc 1 242 3 is_stmt 1 view .LVU156
 242:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 620              		.loc 1 242 38 is_stmt 0 view .LVU157
 621 0080 0023     		movs	r3, #0
 622 0082 0A93     		str	r3, [sp, #40]
 243:Core/Src/main.c ****   {
 623              		.loc 1 243 3 is_stmt 1 view .LVU158
 243:Core/Src/main.c ****   {
 624              		.loc 1 243 7 is_stmt 0 view .LVU159
 625 0084 01A8     		add	r0, sp, #4
 626 0086 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 627              	.LVL24:
 243:Core/Src/main.c ****   {
 628              		.loc 1 243 6 view .LVU160
 629 008a 60B9     		cbnz	r0, .L47
 249:Core/Src/main.c ****   {
 630              		.loc 1 249 3 is_stmt 1 view .LVU161
 249:Core/Src/main.c ****   {
 631              		.loc 1 249 7 is_stmt 0 view .LVU162
 632 008c 4FF40070 		mov	r0, #512
 633 0090 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 634              	.LVL25:
 249:Core/Src/main.c ****   {
 635              		.loc 1 249 6 view .LVU163
 636 0094 48B9     		cbnz	r0, .L48
 255:Core/Src/main.c **** }
 637              		.loc 1 255 3 is_stmt 1 view .LVU164
 638 0096 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 639              	.LVL26:
 256:Core/Src/main.c **** 
 640              		.loc 1 256 1 is_stmt 0 view .LVU165
 641 009a 2CB0     		add	sp, sp, #176
 642              	.LCFI15:
 643              		.cfi_remember_state
 644              		.cfi_def_cfa_offset 8
 645              		@ sp needed
 646 009c 10BD     		pop	{r4, pc}
 647              	.L45:
 648              	.LCFI16:
 649              		.cfi_restore_state
 226:Core/Src/main.c ****   }
 650              		.loc 1 226 5 is_stmt 1 view .LVU166
 651 009e FFF7FEFF 		bl	Error_Handler
 652              	.LVL27:
 653              	.L46:
 239:Core/Src/main.c ****   }
 654              		.loc 1 239 5 view .LVU167
 655 00a2 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/cc9KfeNy.s 			page 24


 656              	.LVL28:
 657              	.L47:
 245:Core/Src/main.c ****   }
 658              		.loc 1 245 5 view .LVU168
 659 00a6 FFF7FEFF 		bl	Error_Handler
 660              	.LVL29:
 661              	.L48:
 251:Core/Src/main.c ****   }
 662              		.loc 1 251 5 view .LVU169
 663 00aa FFF7FEFF 		bl	Error_Handler
 664              	.LVL30:
 665              	.L50:
 666 00ae 00BF     		.align	2
 667              	.L49:
 668 00b0 00100240 		.word	1073876992
 669              		.cfi_endproc
 670              	.LFE138:
 672              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 673              		.align	2
 674              	.LC0:
 675 0000 55702061 		.ascii	"Up and Running\012\015\000"
 675      6E642052 
 675      756E6E69 
 675      6E670A0D 
 675      00
 676 0011 000000   		.align	2
 677              	.LC1:
 678 0014 0A0D00   		.ascii	"\012\015\000"
 679 0017 00       		.align	2
 680              	.LC2:
 681 0018 45333134 		.ascii	"E314> \000"
 681      3E2000
 682 001f 00       		.align	2
 683              	.LC3:
 684 0020 4F4B0A0D 		.ascii	"OK\012\015\000"
 684      00
 685 0025 000000   		.align	2
 686              	.LC4:
 687 0028 4552520A 		.ascii	"ERR\012\015\000"
 687      0D00
 688              		.section	.text.main,"ax",%progbits
 689              		.align	1
 690              		.global	main
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv4-sp-d16
 696              	main:
 697              	.LFB137:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 698              		.loc 1 106 1 view -0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 80
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702 0000 30B5     		push	{r4, r5, lr}
 703              	.LCFI17:
 704              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9KfeNy.s 			page 25


 705              		.cfi_offset 4, -12
 706              		.cfi_offset 5, -8
 707              		.cfi_offset 14, -4
 708 0002 95B0     		sub	sp, sp, #84
 709              	.LCFI18:
 710              		.cfi_def_cfa_offset 96
 108:Core/Src/main.c ****   uint8_t newline[]="\n\r";
 711              		.loc 1 108 3 view .LVU171
 108:Core/Src/main.c ****   uint8_t newline[]="\n\r";
 712              		.loc 1 108 11 is_stmt 0 view .LVU172
 713 0004 0FAC     		add	r4, sp, #60
 714 0006 334D     		ldr	r5, .L59
 715 0008 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 716 000a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 717 000c 2B68     		ldr	r3, [r5]
 718 000e 2370     		strb	r3, [r4]
 109:Core/Src/main.c ****   uint8_t lon[]="lon";
 719              		.loc 1 109 3 is_stmt 1 view .LVU173
 109:Core/Src/main.c ****   uint8_t lon[]="lon";
 720              		.loc 1 109 11 is_stmt 0 view .LVU174
 721 0010 314B     		ldr	r3, .L59+4
 722 0012 1B68     		ldr	r3, [r3]
 723 0014 ADF83830 		strh	r3, [sp, #56]	@ movhi
 724 0018 1B0C     		lsrs	r3, r3, #16
 725 001a 8DF83A30 		strb	r3, [sp, #58]
 110:Core/Src/main.c ****   uint8_t lof[]="lof";
 726              		.loc 1 110 3 is_stmt 1 view .LVU175
 110:Core/Src/main.c ****   uint8_t lof[]="lof";
 727              		.loc 1 110 11 is_stmt 0 view .LVU176
 728 001e 2F4B     		ldr	r3, .L59+8
 729 0020 0D93     		str	r3, [sp, #52]
 111:Core/Src/main.c ****   uint8_t prompt[]="E314> ";
 730              		.loc 1 111 3 is_stmt 1 view .LVU177
 111:Core/Src/main.c ****   uint8_t prompt[]="E314> ";
 731              		.loc 1 111 11 is_stmt 0 view .LVU178
 732 0022 A3F50023 		sub	r3, r3, #524288
 733 0026 0C93     		str	r3, [sp, #48]
 112:Core/Src/main.c ****   uint8_t success_msg[]="OK\n\r";
 734              		.loc 1 112 3 is_stmt 1 view .LVU179
 112:Core/Src/main.c ****   uint8_t success_msg[]="OK\n\r";
 735              		.loc 1 112 11 is_stmt 0 view .LVU180
 736 0028 2D4B     		ldr	r3, .L59+12
 737 002a 93E80300 		ldm	r3, {r0, r1}
 738 002e 0A90     		str	r0, [sp, #40]
 739 0030 ADF82C10 		strh	r1, [sp, #44]	@ movhi
 740 0034 090C     		lsrs	r1, r1, #16
 741 0036 8DF82E10 		strb	r1, [sp, #46]
 113:Core/Src/main.c ****   uint8_t error_msg[]="ERR\n\r";
 742              		.loc 1 113 3 is_stmt 1 view .LVU181
 113:Core/Src/main.c ****   uint8_t error_msg[]="ERR\n\r";
 743              		.loc 1 113 11 is_stmt 0 view .LVU182
 744 003a 2A4B     		ldr	r3, .L59+16
 745 003c 93E80300 		ldm	r3, {r0, r1}
 746 0040 0890     		str	r0, [sp, #32]
 747 0042 8DF82410 		strb	r1, [sp, #36]
 114:Core/Src/main.c ****     
 748              		.loc 1 114 3 is_stmt 1 view .LVU183
ARM GAS  /tmp/cc9KfeNy.s 			page 26


 114:Core/Src/main.c ****     
 749              		.loc 1 114 11 is_stmt 0 view .LVU184
 750 0046 284B     		ldr	r3, .L59+20
 751 0048 93E80300 		ldm	r3, {r0, r1}
 752 004c 0690     		str	r0, [sp, #24]
 753 004e ADF81C10 		strh	r1, [sp, #28]	@ movhi
 116:Core/Src/main.c ****   uint8_t *p;
 754              		.loc 1 116 3 is_stmt 1 view .LVU185
 117:Core/Src/main.c ****   enum {INITIALIZE, READ_CHARS, EXECUTE};
 755              		.loc 1 117 3 view .LVU186
 118:Core/Src/main.c ****   int state = INITIALIZE;
 756              		.loc 1 118 3 view .LVU187
 119:Core/Src/main.c ****   
 757              		.loc 1 119 3 view .LVU188
 758              	.LVL31:
 126:Core/Src/main.c **** 
 759              		.loc 1 126 3 view .LVU189
 760 0052 FFF7FEFF 		bl	HAL_Init
 761              	.LVL32:
 133:Core/Src/main.c **** 
 762              		.loc 1 133 3 view .LVU190
 763 0056 FFF7FEFF 		bl	SystemClock_Config
 764              	.LVL33:
 140:Core/Src/main.c ****   MX_USART2_UART_Init();
 765              		.loc 1 140 3 view .LVU191
 766 005a FFF7FEFF 		bl	MX_GPIO_Init
 767              	.LVL34:
 141:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 768              		.loc 1 141 3 view .LVU192
 769 005e FFF7FEFF 		bl	MX_USART2_UART_Init
 770              	.LVL35:
 143:Core/Src/main.c ****   print_string(newline);
 771              		.loc 1 143 3 view .LVU193
 772 0062 FFF7FEFF 		bl	led_on
 773              	.LVL36:
 144:Core/Src/main.c ****   print_string(welcome);
 774              		.loc 1 144 3 view .LVU194
 775 0066 0EA8     		add	r0, sp, #56
 776 0068 FFF7FEFF 		bl	print_string
 777              	.LVL37:
 145:Core/Src/main.c ****   /* USER CODE END 2 */
 778              		.loc 1 145 3 view .LVU195
 779 006c 0FA8     		add	r0, sp, #60
 780 006e FFF7FEFF 		bl	print_string
 781              	.LVL38:
 150:Core/Src/main.c ****   {
 782              		.loc 1 150 3 view .LVU196
 152:Core/Src/main.c ****     case INITIALIZE:
 783              		.loc 1 152 5 view .LVU197
 784 0072 17E0     		b	.L52
 785              	.LVL39:
 786              	.L54:
 161:Core/Src/main.c ****         p++;
 787              		.loc 1 161 9 view .LVU198
 788 0074 FFF7FEFF 		bl	writechar
 789              	.LVL40:
 162:Core/Src/main.c ****         *p = readchar();
ARM GAS  /tmp/cc9KfeNy.s 			page 27


 790              		.loc 1 162 9 view .LVU199
 163:Core/Src/main.c ****       }
 791              		.loc 1 163 9 view .LVU200
 163:Core/Src/main.c ****       }
 792              		.loc 1 163 14 is_stmt 0 view .LVU201
 793 0078 FFF7FEFF 		bl	readchar
 794              	.LVL41:
 163:Core/Src/main.c ****       }
 795              		.loc 1 163 12 view .LVU202
 796 007c 04F8010F 		strb	r0, [r4, #1]!
 797              	.LVL42:
 798              	.L53:
 160:Core/Src/main.c ****         writechar(*p);
 799              		.loc 1 160 13 is_stmt 1 view .LVU203
 160:Core/Src/main.c ****         writechar(*p);
 800              		.loc 1 160 14 is_stmt 0 view .LVU204
 801 0080 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 160:Core/Src/main.c ****         writechar(*p);
 802              		.loc 1 160 13 view .LVU205
 803 0082 0D28     		cmp	r0, #13
 804 0084 F6D1     		bne	.L54
 165:Core/Src/main.c ****       state = EXECUTE;
 805              		.loc 1 165 7 is_stmt 1 view .LVU206
 165:Core/Src/main.c ****       state = EXECUTE;
 806              		.loc 1 165 9 is_stmt 0 view .LVU207
 807 0086 0023     		movs	r3, #0
 808 0088 2370     		strb	r3, [r4]
 166:Core/Src/main.c ****       break;
 809              		.loc 1 166 7 is_stmt 1 view .LVU208
 810              	.LVL43:
 167:Core/Src/main.c ****     case EXECUTE:
 811              		.loc 1 167 7 view .LVU209
 150:Core/Src/main.c ****   {
 812              		.loc 1 150 3 view .LVU210
 152:Core/Src/main.c ****     case INITIALIZE:
 813              		.loc 1 152 5 view .LVU211
 169:Core/Src/main.c ****       if (!strcmp((char *)buf,(char *)lon)) {
 814              		.loc 1 169 7 view .LVU212
 815 008a 0EA8     		add	r0, sp, #56
 816 008c FFF7FEFF 		bl	print_string
 817              	.LVL44:
 170:Core/Src/main.c ****         led_on();
 818              		.loc 1 170 7 view .LVU213
 170:Core/Src/main.c ****         led_on();
 819              		.loc 1 170 12 is_stmt 0 view .LVU214
 820 0090 0DA9     		add	r1, sp, #52
 821 0092 01A8     		add	r0, sp, #4
 822 0094 FFF7FEFF 		bl	strcmp
 823              	.LVL45:
 170:Core/Src/main.c ****         led_on();
 824              		.loc 1 170 10 view .LVU215
 825 0098 68B9     		cbnz	r0, .L55
 171:Core/Src/main.c ****         print_string(success_msg);
 826              		.loc 1 171 9 is_stmt 1 view .LVU216
 827 009a FFF7FEFF 		bl	led_on
 828              	.LVL46:
 172:Core/Src/main.c ****       }
ARM GAS  /tmp/cc9KfeNy.s 			page 28


 829              		.loc 1 172 9 view .LVU217
 830 009e 08A8     		add	r0, sp, #32
 831 00a0 FFF7FEFF 		bl	print_string
 832              	.LVL47:
 833              	.L52:
 154:Core/Src/main.c ****       p = buf;
 834              		.loc 1 154 7 view .LVU218
 835 00a4 0AA8     		add	r0, sp, #40
 836 00a6 FFF7FEFF 		bl	print_string
 837              	.LVL48:
 155:Core/Src/main.c ****       state = READ_CHARS;
 838              		.loc 1 155 7 view .LVU219
 156:Core/Src/main.c ****       break;
 839              		.loc 1 156 7 view .LVU220
 157:Core/Src/main.c ****     case READ_CHARS:
 840              		.loc 1 157 7 view .LVU221
 150:Core/Src/main.c ****   {
 841              		.loc 1 150 3 view .LVU222
 152:Core/Src/main.c ****     case INITIALIZE:
 842              		.loc 1 152 5 view .LVU223
 159:Core/Src/main.c ****       while (*p!='\r') {
 843              		.loc 1 159 7 view .LVU224
 159:Core/Src/main.c ****       while (*p!='\r') {
 844              		.loc 1 159 12 is_stmt 0 view .LVU225
 845 00aa FFF7FEFF 		bl	readchar
 846              	.LVL49:
 159:Core/Src/main.c ****       while (*p!='\r') {
 847              		.loc 1 159 10 view .LVU226
 848 00ae 8DF80400 		strb	r0, [sp, #4]
 160:Core/Src/main.c ****         writechar(*p);
 849              		.loc 1 160 7 is_stmt 1 view .LVU227
 160:Core/Src/main.c ****         writechar(*p);
 850              		.loc 1 160 13 is_stmt 0 view .LVU228
 851 00b2 01AC     		add	r4, sp, #4
 852              	.LVL50:
 160:Core/Src/main.c ****         writechar(*p);
 853              		.loc 1 160 13 view .LVU229
 854 00b4 E4E7     		b	.L53
 855              	.LVL51:
 856              	.L55:
 174:Core/Src/main.c ****         led_off();
 857              		.loc 1 174 12 is_stmt 1 view .LVU230
 174:Core/Src/main.c ****         led_off();
 858              		.loc 1 174 17 is_stmt 0 view .LVU231
 859 00b6 0CA9     		add	r1, sp, #48
 860 00b8 01A8     		add	r0, sp, #4
 861 00ba FFF7FEFF 		bl	strcmp
 862              	.LVL52:
 174:Core/Src/main.c ****         led_off();
 863              		.loc 1 174 15 view .LVU232
 864 00be 28B9     		cbnz	r0, .L57
 175:Core/Src/main.c ****         print_string(success_msg);
 865              		.loc 1 175 9 is_stmt 1 view .LVU233
 866 00c0 FFF7FEFF 		bl	led_off
 867              	.LVL53:
 176:Core/Src/main.c ****       }
 868              		.loc 1 176 9 view .LVU234
ARM GAS  /tmp/cc9KfeNy.s 			page 29


 869 00c4 08A8     		add	r0, sp, #32
 870 00c6 FFF7FEFF 		bl	print_string
 871              	.LVL54:
 872 00ca EBE7     		b	.L52
 873              	.L57:
 179:Core/Src/main.c ****       }
 874              		.loc 1 179 9 view .LVU235
 875 00cc 06A8     		add	r0, sp, #24
 876 00ce FFF7FEFF 		bl	print_string
 877              	.LVL55:
 878 00d2 E7E7     		b	.L52
 879              	.L60:
 880              		.align	2
 881              	.L59:
 882 00d4 00000000 		.word	.LC0
 883 00d8 14000000 		.word	.LC1
 884 00dc 6C6F6E00 		.word	7237484
 885 00e0 18000000 		.word	.LC2
 886 00e4 20000000 		.word	.LC3
 887 00e8 28000000 		.word	.LC4
 888              		.cfi_endproc
 889              	.LFE137:
 891              		.global	huart2
 892              		.section	.bss.huart2,"aw",%nobits
 893              		.align	2
 894              		.set	.LANCHOR0,. + 0
 897              	huart2:
 898 0000 00000000 		.space	128
 898      00000000 
 898      00000000 
 898      00000000 
 898      00000000 
 899              		.text
 900              	.Letext0:
 901              		.file 3 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_
 902              		.file 4 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdi
 903              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 904              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 905              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 906              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 907              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 908              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 909              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 910              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 911              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 912              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 913              		.file 15 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/string.h
 914              		.file 16 "<built-in>"
ARM GAS  /tmp/cc9KfeNy.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc9KfeNy.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc9KfeNy.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc9KfeNy.s:130    .text.MX_GPIO_Init:000000000000006c $d
     /tmp/cc9KfeNy.s:136    .text.led_on:0000000000000000 $t
     /tmp/cc9KfeNy.s:143    .text.led_on:0000000000000000 led_on
     /tmp/cc9KfeNy.s:165    .text.led_on:0000000000000010 $d
     /tmp/cc9KfeNy.s:170    .text.led_off:0000000000000000 $t
     /tmp/cc9KfeNy.s:177    .text.led_off:0000000000000000 led_off
     /tmp/cc9KfeNy.s:199    .text.led_off:0000000000000010 $d
     /tmp/cc9KfeNy.s:204    .text.print_string:0000000000000000 $t
     /tmp/cc9KfeNy.s:211    .text.print_string:0000000000000000 print_string
     /tmp/cc9KfeNy.s:262    .text.print_string:0000000000000024 $d
     /tmp/cc9KfeNy.s:267    .text.writechar:0000000000000000 $t
     /tmp/cc9KfeNy.s:274    .text.writechar:0000000000000000 writechar
     /tmp/cc9KfeNy.s:310    .text.writechar:0000000000000020 $d
     /tmp/cc9KfeNy.s:315    .text.readchar:0000000000000000 $t
     /tmp/cc9KfeNy.s:322    .text.readchar:0000000000000000 readchar
     /tmp/cc9KfeNy.s:372    .text.readchar:0000000000000024 $d
     /tmp/cc9KfeNy.s:377    .text.Error_Handler:0000000000000000 $t
     /tmp/cc9KfeNy.s:384    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc9KfeNy.s:416    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc9KfeNy.s:422    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc9KfeNy.s:483    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/cc9KfeNy.s:489    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc9KfeNy.s:496    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc9KfeNy.s:668    .text.SystemClock_Config:00000000000000b0 $d
     /tmp/cc9KfeNy.s:673    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cc9KfeNy.s:689    .text.main:0000000000000000 $t
     /tmp/cc9KfeNy.s:696    .text.main:0000000000000000 main
     /tmp/cc9KfeNy.s:882    .text.main:00000000000000d4 $d
     /tmp/cc9KfeNy.s:897    .bss.huart2:0000000000000000 huart2
     /tmp/cc9KfeNy.s:893    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Transmit
HAL_UART_Receive
HAL_UART_Init
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
strcmp
