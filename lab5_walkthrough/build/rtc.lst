ARM GAS  /tmp/ccR0zSuY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"rtc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.ts_command.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 4E4F4B0A 		.ascii	"NOK\012\015\000"
  20      0D00
  21 0006 0000     		.align	2
  22              	.LC1:
  23 0008 2C00     		.ascii	",\000"
  24 000a 0000     		.align	2
  25              	.LC2:
  26 000c 4F4B0A0D 		.ascii	"OK\012\015\000"
  26      00
  27              		.section	.text.ts_command,"ax",%progbits
  28              		.align	1
  29              		.global	ts_command
  30              		.arch armv7e-m
  31              		.syntax unified
  32              		.thumb
  33              		.thumb_func
  34              		.fpu fpv4-sp-d16
  36              	ts_command:
  37              	.LVL0:
  38              	.LFB291:
  39              		.file 1 "Core/Src/rtc.c"
   1:Core/Src/rtc.c **** /* rtc.c
   2:Core/Src/rtc.c ****  * Description: 
   3:Core/Src/rtc.c ****  *
   4:Core/Src/rtc.c ****  * Author: Bryce Himebaugh 
   5:Core/Src/rtc.c ****  * Contact: bhimebau@indiana.edu
   6:Core/Src/rtc.c ****  * Date: 02.25.2021
   7:Core/Src/rtc.c ****  * Copyright (C) 2021
   8:Core/Src/rtc.c ****  *
   9:Core/Src/rtc.c ****  */
  10:Core/Src/rtc.c **** #include "main.h"
  11:Core/Src/rtc.c **** #include <stdio.h>
  12:Core/Src/rtc.c **** #include <string.h>
  13:Core/Src/rtc.c **** #include <stdlib.h>
  14:Core/Src/rtc.c **** 
  15:Core/Src/rtc.c **** extern RTC_HandleTypeDef hrtc;
  16:Core/Src/rtc.c **** 
  17:Core/Src/rtc.c **** void ts_command(char *arguments) {
ARM GAS  /tmp/ccR0zSuY.s 			page 2


  40              		.loc 1 17 34 view -0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 24
  43              		@ frame_needed = 0, uses_anonymous_args = 0
  44              		.loc 1 17 34 is_stmt 0 view .LVU1
  45 0000 10B5     		push	{r4, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 4, -8
  49              		.cfi_offset 14, -4
  50 0002 86B0     		sub	sp, sp, #24
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 32
  18:Core/Src/rtc.c ****   RTC_TimeTypeDef current_time = {0};
  53              		.loc 1 18 3 is_stmt 1 view .LVU2
  54              		.loc 1 18 19 is_stmt 0 view .LVU3
  55 0004 0023     		movs	r3, #0
  56 0006 0193     		str	r3, [sp, #4]
  57 0008 0293     		str	r3, [sp, #8]
  58 000a 0393     		str	r3, [sp, #12]
  59 000c 0493     		str	r3, [sp, #16]
  60 000e 0593     		str	r3, [sp, #20]
  19:Core/Src/rtc.c ****   char * argument;
  61              		.loc 1 19 3 is_stmt 1 view .LVU4
  20:Core/Src/rtc.c ****   int argument_count = 0;
  62              		.loc 1 20 3 view .LVU5
  63              	.LVL1:
  21:Core/Src/rtc.c ****   
  22:Core/Src/rtc.c ****   if (!arguments) {
  64              		.loc 1 22 3 view .LVU6
  65              		.loc 1 22 6 is_stmt 0 view .LVU7
  66 0010 28B1     		cbz	r0, .L15
  23:Core/Src/rtc.c ****     printf("NOK\n\r");
  24:Core/Src/rtc.c ****     return;
  25:Core/Src/rtc.c ****   }
  26:Core/Src/rtc.c ****   argument = strtok(arguments,",");
  67              		.loc 1 26 3 is_stmt 1 view .LVU8
  68              		.loc 1 26 14 is_stmt 0 view .LVU9
  69 0012 2E49     		ldr	r1, .L21
  70 0014 FFF7FEFF 		bl	strtok
  71              	.LVL2:
  27:Core/Src/rtc.c ****   if (!argument) {
  72              		.loc 1 27 3 is_stmt 1 view .LVU10
  73              		.loc 1 27 6 is_stmt 0 view .LVU11
  74 0018 28B1     		cbz	r0, .L16
  20:Core/Src/rtc.c ****   
  75              		.loc 1 20 7 view .LVU12
  76 001a 0024     		movs	r4, #0
  77 001c 15E0     		b	.L4
  78              	.LVL3:
  79              	.L15:
  23:Core/Src/rtc.c ****     printf("NOK\n\r");
  80              		.loc 1 23 5 is_stmt 1 view .LVU13
  81 001e 2C48     		ldr	r0, .L21+4
  82              	.LVL4:
  23:Core/Src/rtc.c ****     printf("NOK\n\r");
  83              		.loc 1 23 5 is_stmt 0 view .LVU14
ARM GAS  /tmp/ccR0zSuY.s 			page 3


  84 0020 FFF7FEFF 		bl	printf
  85              	.LVL5:
  24:Core/Src/rtc.c ****   }
  86              		.loc 1 24 5 is_stmt 1 view .LVU15
  87 0024 3FE0     		b	.L1
  88              	.LVL6:
  89              	.L16:
  28:Core/Src/rtc.c ****     printf("NOK\n\r");
  90              		.loc 1 28 5 view .LVU16
  91 0026 2A48     		ldr	r0, .L21+4
  92              	.LVL7:
  93              		.loc 1 28 5 is_stmt 0 view .LVU17
  94 0028 FFF7FEFF 		bl	printf
  95              	.LVL8:
  29:Core/Src/rtc.c ****     return;
  96              		.loc 1 29 5 is_stmt 1 view .LVU18
  97 002c 3BE0     		b	.L1
  98              	.LVL9:
  99              	.L19:
  30:Core/Src/rtc.c ****   }
  31:Core/Src/rtc.c ****   while (argument) {
  32:Core/Src/rtc.c ****     //    printf("%d: %s\n\r",argument_count,argument);
  33:Core/Src/rtc.c ****     switch (argument_count) {
  34:Core/Src/rtc.c ****     case 0:
  35:Core/Src/rtc.c ****       current_time.Hours = (int) strtol(argument,NULL,10);
 100              		.loc 1 35 7 view .LVU19
 101              		.loc 1 35 34 is_stmt 0 view .LVU20
 102 002e 0A22     		movs	r2, #10
 103 0030 0021     		movs	r1, #0
 104 0032 FFF7FEFF 		bl	strtol
 105              	.LVL10:
 106              		.loc 1 35 26 view .LVU21
 107 0036 C0B2     		uxtb	r0, r0
 108 0038 8DF80400 		strb	r0, [sp, #4]
  36:Core/Src/rtc.c ****       if ((current_time.Hours<0)||(current_time.Hours>23)) {
 109              		.loc 1 36 7 is_stmt 1 view .LVU22
 110              		.loc 1 36 10 is_stmt 0 view .LVU23
 111 003c 1728     		cmp	r0, #23
 112 003e 0FD8     		bhi	.L17
 113              	.L8:
  37:Core/Src/rtc.c ****         printf("NOK\n\r");
  38:Core/Src/rtc.c ****         return;
  39:Core/Src/rtc.c ****       }
  40:Core/Src/rtc.c ****       break;
  41:Core/Src/rtc.c ****     case 1:
  42:Core/Src/rtc.c ****       current_time.Minutes = (int) strtol(argument,NULL,10);
  43:Core/Src/rtc.c ****       if ((current_time.Minutes<0)||(current_time.Minutes>59)) {
  44:Core/Src/rtc.c ****         printf("NOK\n\r");
  45:Core/Src/rtc.c ****         return;
  46:Core/Src/rtc.c ****       }
  47:Core/Src/rtc.c ****       break;
  48:Core/Src/rtc.c ****     case 2:
  49:Core/Src/rtc.c ****       current_time.Seconds = (int) strtol(argument,NULL,10);
  50:Core/Src/rtc.c ****       if ((current_time.Seconds<0)||(current_time.Seconds>59)) {
  51:Core/Src/rtc.c ****         printf("NOK\n\r");
  52:Core/Src/rtc.c ****         return;
  53:Core/Src/rtc.c ****       }
ARM GAS  /tmp/ccR0zSuY.s 			page 4


  54:Core/Src/rtc.c ****       break;
  55:Core/Src/rtc.c ****     default:
  56:Core/Src/rtc.c ****       printf("NOK\n\r");
  57:Core/Src/rtc.c ****       break;
  58:Core/Src/rtc.c ****     }
  59:Core/Src/rtc.c ****     argument_count++;
 114              		.loc 1 59 5 is_stmt 1 view .LVU24
 115              		.loc 1 59 19 is_stmt 0 view .LVU25
 116 0040 0134     		adds	r4, r4, #1
 117              	.LVL11:
  60:Core/Src/rtc.c ****     argument=strtok(NULL,",");
 118              		.loc 1 60 5 is_stmt 1 view .LVU26
 119              		.loc 1 60 14 is_stmt 0 view .LVU27
 120 0042 2249     		ldr	r1, .L21
 121 0044 0020     		movs	r0, #0
 122 0046 FFF7FEFF 		bl	strtok
 123              	.LVL12:
 124              	.L4:
  31:Core/Src/rtc.c ****     //    printf("%d: %s\n\r",argument_count,argument);
 125              		.loc 1 31 9 is_stmt 1 view .LVU28
 126 004a 38B3     		cbz	r0, .L18
  33:Core/Src/rtc.c ****     case 0:
 127              		.loc 1 33 5 view .LVU29
 128 004c 012C     		cmp	r4, #1
 129 004e 0BD0     		beq	.L5
 130 0050 022C     		cmp	r4, #2
 131 0052 16D0     		beq	.L6
 132 0054 002C     		cmp	r4, #0
 133 0056 EAD0     		beq	.L19
  56:Core/Src/rtc.c ****       break;
 134              		.loc 1 56 7 view .LVU30
 135 0058 1D48     		ldr	r0, .L21+4
 136              	.LVL13:
  56:Core/Src/rtc.c ****       break;
 137              		.loc 1 56 7 is_stmt 0 view .LVU31
 138 005a FFF7FEFF 		bl	printf
 139              	.LVL14:
  57:Core/Src/rtc.c ****     }
 140              		.loc 1 57 7 is_stmt 1 view .LVU32
 141 005e EFE7     		b	.L8
 142              	.L17:
  37:Core/Src/rtc.c ****         return;
 143              		.loc 1 37 9 view .LVU33
 144 0060 1B48     		ldr	r0, .L21+4
 145 0062 FFF7FEFF 		bl	printf
 146              	.LVL15:
  38:Core/Src/rtc.c ****       }
 147              		.loc 1 38 9 view .LVU34
 148 0066 1EE0     		b	.L1
 149              	.LVL16:
 150              	.L5:
  42:Core/Src/rtc.c ****       if ((current_time.Minutes<0)||(current_time.Minutes>59)) {
 151              		.loc 1 42 7 view .LVU35
  42:Core/Src/rtc.c ****       if ((current_time.Minutes<0)||(current_time.Minutes>59)) {
 152              		.loc 1 42 36 is_stmt 0 view .LVU36
 153 0068 0A22     		movs	r2, #10
 154 006a 0021     		movs	r1, #0
ARM GAS  /tmp/ccR0zSuY.s 			page 5


 155 006c FFF7FEFF 		bl	strtol
 156              	.LVL17:
  42:Core/Src/rtc.c ****       if ((current_time.Minutes<0)||(current_time.Minutes>59)) {
 157              		.loc 1 42 28 view .LVU37
 158 0070 C0B2     		uxtb	r0, r0
 159 0072 8DF80500 		strb	r0, [sp, #5]
  43:Core/Src/rtc.c ****         printf("NOK\n\r");
 160              		.loc 1 43 7 is_stmt 1 view .LVU38
  43:Core/Src/rtc.c ****         printf("NOK\n\r");
 161              		.loc 1 43 10 is_stmt 0 view .LVU39
 162 0076 3B28     		cmp	r0, #59
 163 0078 E2D9     		bls	.L8
  44:Core/Src/rtc.c ****         return;
 164              		.loc 1 44 9 is_stmt 1 view .LVU40
 165 007a 1548     		ldr	r0, .L21+4
 166 007c FFF7FEFF 		bl	printf
 167              	.LVL18:
  45:Core/Src/rtc.c ****       }
 168              		.loc 1 45 9 view .LVU41
 169 0080 11E0     		b	.L1
 170              	.LVL19:
 171              	.L6:
  49:Core/Src/rtc.c ****       if ((current_time.Seconds<0)||(current_time.Seconds>59)) {
 172              		.loc 1 49 7 view .LVU42
  49:Core/Src/rtc.c ****       if ((current_time.Seconds<0)||(current_time.Seconds>59)) {
 173              		.loc 1 49 36 is_stmt 0 view .LVU43
 174 0082 0A22     		movs	r2, #10
 175 0084 0021     		movs	r1, #0
 176 0086 FFF7FEFF 		bl	strtol
 177              	.LVL20:
  49:Core/Src/rtc.c ****       if ((current_time.Seconds<0)||(current_time.Seconds>59)) {
 178              		.loc 1 49 28 view .LVU44
 179 008a C0B2     		uxtb	r0, r0
 180 008c 8DF80600 		strb	r0, [sp, #6]
  50:Core/Src/rtc.c ****         printf("NOK\n\r");
 181              		.loc 1 50 7 is_stmt 1 view .LVU45
  50:Core/Src/rtc.c ****         printf("NOK\n\r");
 182              		.loc 1 50 10 is_stmt 0 view .LVU46
 183 0090 3B28     		cmp	r0, #59
 184 0092 D5D9     		bls	.L8
  51:Core/Src/rtc.c ****         return;
 185              		.loc 1 51 9 is_stmt 1 view .LVU47
 186 0094 0E48     		ldr	r0, .L21+4
 187 0096 FFF7FEFF 		bl	printf
 188              	.LVL21:
  52:Core/Src/rtc.c ****       }
 189              		.loc 1 52 9 view .LVU48
 190 009a 04E0     		b	.L1
 191              	.LVL22:
 192              	.L18:
  61:Core/Src/rtc.c ****     
  62:Core/Src/rtc.c ****   }
  63:Core/Src/rtc.c ****   if (argument_count != 3) {
 193              		.loc 1 63 3 view .LVU49
 194              		.loc 1 63 6 is_stmt 0 view .LVU50
 195 009c 032C     		cmp	r4, #3
 196 009e 04D0     		beq	.L10
ARM GAS  /tmp/ccR0zSuY.s 			page 6


  64:Core/Src/rtc.c ****     printf("NOK\n\r");
 197              		.loc 1 64 5 is_stmt 1 view .LVU51
 198 00a0 0B48     		ldr	r0, .L21+4
 199              	.LVL23:
 200              		.loc 1 64 5 is_stmt 0 view .LVU52
 201 00a2 FFF7FEFF 		bl	printf
 202              	.LVL24:
  65:Core/Src/rtc.c ****     return;
 203              		.loc 1 65 5 is_stmt 1 view .LVU53
 204              	.L1:
  66:Core/Src/rtc.c ****   }
  67:Core/Src/rtc.c ****   current_time.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
  68:Core/Src/rtc.c ****   current_time.StoreOperation = RTC_STOREOPERATION_RESET;
  69:Core/Src/rtc.c ****   if (HAL_RTC_SetTime(&hrtc, &current_time, RTC_FORMAT_BIN) != HAL_OK) {
  70:Core/Src/rtc.c ****     printf("NOK\n\r");
  71:Core/Src/rtc.c ****     return;
  72:Core/Src/rtc.c ****   }
  73:Core/Src/rtc.c ****   printf("OK\n\r");
  74:Core/Src/rtc.c **** }
 205              		.loc 1 74 1 is_stmt 0 view .LVU54
 206 00a6 06B0     		add	sp, sp, #24
 207              	.LCFI2:
 208              		.cfi_remember_state
 209              		.cfi_def_cfa_offset 8
 210              		@ sp needed
 211 00a8 10BD     		pop	{r4, pc}
 212              	.LVL25:
 213              	.L10:
 214              	.LCFI3:
 215              		.cfi_restore_state
  67:Core/Src/rtc.c ****   current_time.StoreOperation = RTC_STOREOPERATION_RESET;
 216              		.loc 1 67 3 is_stmt 1 view .LVU55
  67:Core/Src/rtc.c ****   current_time.StoreOperation = RTC_STOREOPERATION_RESET;
 217              		.loc 1 67 31 is_stmt 0 view .LVU56
 218 00aa 0022     		movs	r2, #0
 219 00ac 0492     		str	r2, [sp, #16]
  68:Core/Src/rtc.c ****   if (HAL_RTC_SetTime(&hrtc, &current_time, RTC_FORMAT_BIN) != HAL_OK) {
 220              		.loc 1 68 3 is_stmt 1 view .LVU57
  68:Core/Src/rtc.c ****   if (HAL_RTC_SetTime(&hrtc, &current_time, RTC_FORMAT_BIN) != HAL_OK) {
 221              		.loc 1 68 31 is_stmt 0 view .LVU58
 222 00ae 0592     		str	r2, [sp, #20]
  69:Core/Src/rtc.c ****     printf("NOK\n\r");
 223              		.loc 1 69 3 is_stmt 1 view .LVU59
  69:Core/Src/rtc.c ****     printf("NOK\n\r");
 224              		.loc 1 69 7 is_stmt 0 view .LVU60
 225 00b0 01A9     		add	r1, sp, #4
 226 00b2 0848     		ldr	r0, .L21+8
 227              	.LVL26:
  69:Core/Src/rtc.c ****     printf("NOK\n\r");
 228              		.loc 1 69 7 view .LVU61
 229 00b4 FFF7FEFF 		bl	HAL_RTC_SetTime
 230              	.LVL27:
  69:Core/Src/rtc.c ****     printf("NOK\n\r");
 231              		.loc 1 69 6 view .LVU62
 232 00b8 18B9     		cbnz	r0, .L20
  73:Core/Src/rtc.c **** }
 233              		.loc 1 73 3 is_stmt 1 view .LVU63
ARM GAS  /tmp/ccR0zSuY.s 			page 7


 234 00ba 0748     		ldr	r0, .L21+12
 235 00bc FFF7FEFF 		bl	printf
 236              	.LVL28:
 237 00c0 F1E7     		b	.L1
 238              	.L20:
  70:Core/Src/rtc.c ****     return;
 239              		.loc 1 70 5 view .LVU64
 240 00c2 0348     		ldr	r0, .L21+4
 241 00c4 FFF7FEFF 		bl	printf
 242              	.LVL29:
  71:Core/Src/rtc.c ****   }
 243              		.loc 1 71 5 view .LVU65
 244 00c8 EDE7     		b	.L1
 245              	.L22:
 246 00ca 00BF     		.align	2
 247              	.L21:
 248 00cc 08000000 		.word	.LC1
 249 00d0 00000000 		.word	.LC0
 250 00d4 00000000 		.word	hrtc
 251 00d8 0C000000 		.word	.LC2
 252              		.cfi_endproc
 253              	.LFE291:
 255              		.section	.rodata.ds_command.str1.4,"aMS",%progbits,1
 256              		.align	2
 257              	.LC3:
 258 0000 53657420 		.ascii	"Set date real command\012\015\000"
 258      64617465 
 258      20726561 
 258      6C20636F 
 258      6D6D616E 
 259              		.align	2
 260              	.LC4:
 261 0018 41726775 		.ascii	"Arguments = %s\012\015\000"
 261      6D656E74 
 261      73203D20 
 261      25730A0D 
 261      00
 262              		.section	.text.ds_command,"ax",%progbits
 263              		.align	1
 264              		.global	ds_command
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv4-sp-d16
 270              	ds_command:
 271              	.LVL30:
 272              	.LFB292:
  75:Core/Src/rtc.c **** 
  76:Core/Src/rtc.c **** void ds_command(char *arguments) {
 273              		.loc 1 76 34 view -0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		.loc 1 76 34 is_stmt 0 view .LVU67
 278 0000 10B5     		push	{r4, lr}
 279              	.LCFI4:
 280              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccR0zSuY.s 			page 8


 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 0002 0446     		mov	r4, r0
  77:Core/Src/rtc.c ****   printf("Set date real command\n\r");
 284              		.loc 1 77 3 is_stmt 1 view .LVU68
 285 0004 0448     		ldr	r0, .L26
 286              	.LVL31:
 287              		.loc 1 77 3 is_stmt 0 view .LVU69
 288 0006 FFF7FEFF 		bl	printf
 289              	.LVL32:
  78:Core/Src/rtc.c ****   if (arguments) {
 290              		.loc 1 78 3 is_stmt 1 view .LVU70
 291              		.loc 1 78 6 is_stmt 0 view .LVU71
 292 000a 1CB1     		cbz	r4, .L23
  79:Core/Src/rtc.c ****     printf("Arguments = %s\n\r",arguments);
 293              		.loc 1 79 5 is_stmt 1 view .LVU72
 294 000c 2146     		mov	r1, r4
 295 000e 0348     		ldr	r0, .L26+4
 296 0010 FFF7FEFF 		bl	printf
 297              	.LVL33:
 298              	.L23:
  80:Core/Src/rtc.c ****   }
  81:Core/Src/rtc.c **** }
 299              		.loc 1 81 1 is_stmt 0 view .LVU73
 300 0014 10BD     		pop	{r4, pc}
 301              	.LVL34:
 302              	.L27:
 303              		.loc 1 81 1 view .LVU74
 304 0016 00BF     		.align	2
 305              	.L26:
 306 0018 00000000 		.word	.LC3
 307 001c 18000000 		.word	.LC4
 308              		.cfi_endproc
 309              	.LFE292:
 311              		.text
 312              	.Letext0:
 313              		.file 2 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_
 314              		.file 3 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdi
 315              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 316              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 317              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc.h"
 318              		.file 7 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdio.h"
 319              		.file 8 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/string.h"
 320              		.file 9 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdlib.h"
ARM GAS  /tmp/ccR0zSuY.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 rtc.c
     /tmp/ccR0zSuY.s:18     .rodata.ts_command.str1.4:0000000000000000 $d
     /tmp/ccR0zSuY.s:28     .text.ts_command:0000000000000000 $t
     /tmp/ccR0zSuY.s:36     .text.ts_command:0000000000000000 ts_command
     /tmp/ccR0zSuY.s:248    .text.ts_command:00000000000000cc $d
     /tmp/ccR0zSuY.s:256    .rodata.ds_command.str1.4:0000000000000000 $d
     /tmp/ccR0zSuY.s:263    .text.ds_command:0000000000000000 $t
     /tmp/ccR0zSuY.s:270    .text.ds_command:0000000000000000 ds_command
     /tmp/ccR0zSuY.s:306    .text.ds_command:0000000000000018 $d

UNDEFINED SYMBOLS
strtok
printf
strtol
HAL_RTC_SetTime
hrtc
