ARM GAS  /tmp/ccruOu2m.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.GetPage,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	GetPage:
  26              	.LVL0:
  27              	.LFB295:
  28              		.file 1 "Core/Src/flash.c"
   1:Core/Src/flash.c **** /* flash.c
   2:Core/Src/flash.c ****  * Description: 
   3:Core/Src/flash.c ****  *
   4:Core/Src/flash.c ****  * Author: Bryce Himebaugh 
   5:Core/Src/flash.c ****  * Contact: bhimebau@indiana.edu
   6:Core/Src/flash.c ****  * Date: 03.16.2021
   7:Core/Src/flash.c ****  * Copyright (C) 2021
   8:Core/Src/flash.c ****  *
   9:Core/Src/flash.c ****  */
  10:Core/Src/flash.c **** 
  11:Core/Src/flash.c **** #include "main.h"
  12:Core/Src/flash.c **** #include "flash.h"
  13:Core/Src/flash.c **** #include <stdio.h>
  14:Core/Src/flash.c **** #include <stdint.h>
  15:Core/Src/flash.c **** 
  16:Core/Src/flash.c **** extern int assert_failed_flag;
  17:Core/Src/flash.c **** 
  18:Core/Src/flash.c **** void report_test_status(int test_num) {
  19:Core/Src/flash.c ****   if (assert_failed_flag) {
  20:Core/Src/flash.c ****     printf("Test %d failed\n\r",test_num);
  21:Core/Src/flash.c ****     assert_failed_flag = 0;
  22:Core/Src/flash.c ****   }
  23:Core/Src/flash.c ****   else {    
  24:Core/Src/flash.c ****     printf("Test %d passed\n\r",test_num);
  25:Core/Src/flash.c ****   }
  26:Core/Src/flash.c **** }
  27:Core/Src/flash.c **** 
  28:Core/Src/flash.c **** void write_raw_test_command(char *arguments) {
  29:Core/Src/flash.c ****   char tdata[16] = {0,1,2,3,4,5,6,7,
  30:Core/Src/flash.c ****                     8,9,10,11,12,13,14,15};
ARM GAS  /tmp/ccruOu2m.s 			page 2


  31:Core/Src/flash.c ****   uint32_t * addr = (uint32_t *) 0x0803FFF0;
  32:Core/Src/flash.c ****   erase_page((uint32_t) addr);
  33:Core/Src/flash.c **** 
  34:Core/Src/flash.c ****   // Test 1, pointer to data is 0
  35:Core/Src/flash.c ****   assert_param(write_raw(0, addr)==-1);
  36:Core/Src/flash.c ****   report_test_status(1);
  37:Core/Src/flash.c **** 
  38:Core/Src/flash.c ****   // Test 2, pointer to address is 0
  39:Core/Src/flash.c ****   assert_param(write_raw((raw_t *) tdata, 0)==-1);
  40:Core/Src/flash.c ****   report_test_status(2);
  41:Core/Src/flash.c **** 
  42:Core/Src/flash.c ****   // Test 3, pointer to address is misaligned
  43:Core/Src/flash.c ****   assert_param(write_raw((raw_t *) tdata, (uint32_t *) 0x0803FFF8)==-2);
  44:Core/Src/flash.c ****   report_test_status(3);
  45:Core/Src/flash.c **** 
  46:Core/Src/flash.c ****   // Test 4, attempt to write data to an empty cell 
  47:Core/Src/flash.c ****   assert_param(write_raw((raw_t *) tdata, addr)==0);
  48:Core/Src/flash.c ****   report_test_status(4);
  49:Core/Src/flash.c **** 
  50:Core/Src/flash.c ****   // Test 5, attempt to write data to a non-erased space
  51:Core/Src/flash.c ****   assert_param(write_raw((raw_t *) tdata, addr)==-3);
  52:Core/Src/flash.c ****   report_test_status(5);
  53:Core/Src/flash.c **** 
  54:Core/Src/flash.c ****   
  55:Core/Src/flash.c **** }
  56:Core/Src/flash.c **** 
  57:Core/Src/flash.c **** /* write_raw
  58:Core/Src/flash.c **** inputs: 
  59:Core/Src/flash.c **** data: pointer to data structure 
  60:Core/Src/flash.c **** address: location to write
  61:Core/Src/flash.c **** Returns
  62:Core/Src/flash.c **** 0: success
  63:Core/Src/flash.c **** -1: failed because one or both of the pointers is 0
  64:Core/Src/flash.c **** -2: failed because address not on an 16 byte boundary 
  65:Core/Src/flash.c **** -3: failed because location not blank
  66:Core/Src/flash.c **** -4: HAL failed to program first 8 bytes
  67:Core/Src/flash.c **** -5: HAL failed to program the second 8 bytes
  68:Core/Src/flash.c **** */
  69:Core/Src/flash.c **** int write_raw(raw_t *data, uint32_t *address) {
  70:Core/Src/flash.c ****   HAL_StatusTypeDef status = 0;
  71:Core/Src/flash.c ****   
  72:Core/Src/flash.c ****   // Check to make sure that both pointers are not 0
  73:Core/Src/flash.c ****   if ((!data) || (!address)) {
  74:Core/Src/flash.c ****     return(-1); 
  75:Core/Src/flash.c ****   }
  76:Core/Src/flash.c ****    
  77:Core/Src/flash.c ****   // Check to make sure that the address is aligned on 16 byte boundary
  78:Core/Src/flash.c ****   if ((((unsigned long) address)&0x0F) != 0) {
  79:Core/Src/flash.c ****     return(-2);
  80:Core/Src/flash.c ****   }
  81:Core/Src/flash.c ****   // Check to see if location is all Fs indicating it is erased
  82:Core/Src/flash.c ****   if ((*address!=0xFFFFFFFF) ||
  83:Core/Src/flash.c ****       (*(address+1)!=0xFFFFFFFF)) {
  84:Core/Src/flash.c ****     return(-3);
  85:Core/Src/flash.c ****   }
  86:Core/Src/flash.c ****   HAL_FLASH_Unlock();
  87:Core/Src/flash.c ****   if ((status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,(uint32_t) address, data->data0))) {
ARM GAS  /tmp/ccruOu2m.s 			page 3


  88:Core/Src/flash.c ****     HAL_FLASH_Lock();
  89:Core/Src/flash.c ****     return(-4);
  90:Core/Src/flash.c ****   }
  91:Core/Src/flash.c ****   address+=2;
  92:Core/Src/flash.c ****   if ((status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,(uint32_t) address, data->data1))) {
  93:Core/Src/flash.c ****     HAL_FLASH_Lock();
  94:Core/Src/flash.c ****     return(-5);
  95:Core/Src/flash.c ****   }
  96:Core/Src/flash.c ****   HAL_FLASH_Lock();
  97:Core/Src/flash.c ****    
  98:Core/Src/flash.c ****   return(0);
  99:Core/Src/flash.c **** }
 100:Core/Src/flash.c **** 
 101:Core/Src/flash.c **** int erase_page(uint32_t Addr) {
 102:Core/Src/flash.c ****   static FLASH_EraseInitTypeDef EraseInitStruct;
 103:Core/Src/flash.c ****   uint32_t page_error;
 104:Core/Src/flash.c ****    
 105:Core/Src/flash.c ****   HAL_FLASH_Unlock();
 106:Core/Src/flash.c ****   /* Clear OPTVERR bit set on virgin samples */
 107:Core/Src/flash.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPTVERR); 
 108:Core/Src/flash.c ****   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 109:Core/Src/flash.c ****   EraseInitStruct.Banks       = GetBank(Addr);
 110:Core/Src/flash.c ****   EraseInitStruct.Page        = GetPage(Addr);
 111:Core/Src/flash.c ****   EraseInitStruct.NbPages     = 1;
 112:Core/Src/flash.c ****   if (HAL_FLASHEx_Erase(&EraseInitStruct, &page_error) != HAL_OK) {
 113:Core/Src/flash.c ****     HAL_FLASH_Lock();
 114:Core/Src/flash.c ****     return (-1);
 115:Core/Src/flash.c ****   }
 116:Core/Src/flash.c ****   HAL_FLASH_Lock();
 117:Core/Src/flash.c ****   return(0);
 118:Core/Src/flash.c **** }
 119:Core/Src/flash.c **** 
 120:Core/Src/flash.c **** uint32_t GetPage(uint32_t Addr) {
  29              		.loc 1 120 33 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 121:Core/Src/flash.c ****   uint32_t page = 0;
  34              		.loc 1 121 3 view .LVU1
 122:Core/Src/flash.c ****   
 123:Core/Src/flash.c ****   if (Addr < (FLASH_BASE + FLASH_BANK_SIZE))
  35              		.loc 1 123 3 view .LVU2
  36              		.loc 1 123 28 is_stmt 0 view .LVU3
  37 0000 0B4B     		ldr	r3, .L6
  38 0002 D3F8E025 		ldr	r2, [r3, #1504]
  39 0006 91B2     		uxth	r1, r2
  40              		.loc 1 123 26 view .LVU4
  41 0008 4FF6FF73 		movw	r3, #65535
  42 000c 9942     		cmp	r1, r3
  43 000e 0AD0     		beq	.L5
  44              		.loc 1 123 28 discriminator 1 view .LVU5
  45 0010 084B     		ldr	r3, .L6+4
  46 0012 03EA8223 		and	r3, r3, r2, lsl #10
  47              		.loc 1 123 26 discriminator 1 view .LVU6
  48 0016 03F10063 		add	r3, r3, #134217728
  49              	.L2:
ARM GAS  /tmp/ccruOu2m.s 			page 4


  50              		.loc 1 123 6 discriminator 4 view .LVU7
  51 001a 8342     		cmp	r3, r0
  52 001c 05D9     		bls	.L3
 124:Core/Src/flash.c ****   {
 125:Core/Src/flash.c ****     /* Bank 1 */
 126:Core/Src/flash.c ****     page = (Addr - FLASH_BASE) / FLASH_PAGE_SIZE;
  53              		.loc 1 126 5 is_stmt 1 view .LVU8
  54              		.loc 1 126 18 is_stmt 0 view .LVU9
  55 001e 00F17840 		add	r0, r0, #-134217728
  56              	.LVL1:
  57              		.loc 1 126 10 view .LVU10
  58 0022 C00A     		lsrs	r0, r0, #11
  59              	.LVL2:
  60              		.loc 1 126 10 view .LVU11
  61 0024 7047     		bx	lr
  62              	.LVL3:
  63              	.L5:
 123:Core/Src/flash.c ****   {
  64              		.loc 1 123 26 view .LVU12
  65 0026 044B     		ldr	r3, .L6+8
  66 0028 F7E7     		b	.L2
  67              	.L3:
 127:Core/Src/flash.c ****   }
 128:Core/Src/flash.c ****   else
 129:Core/Src/flash.c ****   {
 130:Core/Src/flash.c ****     /* Bank 2 */
 131:Core/Src/flash.c ****     page = (Addr - (FLASH_BASE + FLASH_BANK_SIZE)) / FLASH_PAGE_SIZE;
  68              		.loc 1 131 5 is_stmt 1 discriminator 4 view .LVU13
  69              		.loc 1 131 18 is_stmt 0 discriminator 4 view .LVU14
  70 002a C01A     		subs	r0, r0, r3
  71              	.LVL4:
  72              		.loc 1 131 10 discriminator 4 view .LVU15
  73 002c C00A     		lsrs	r0, r0, #11
  74              	.LVL5:
 132:Core/Src/flash.c ****   }
 133:Core/Src/flash.c ****   
 134:Core/Src/flash.c ****   return page;
  75              		.loc 1 134 3 is_stmt 1 discriminator 4 view .LVU16
 135:Core/Src/flash.c **** }
  76              		.loc 1 135 1 is_stmt 0 discriminator 4 view .LVU17
  77 002e 7047     		bx	lr
  78              	.L7:
  79              		.align	2
  80              	.L6:
  81 0030 0070FF1F 		.word	536834048
  82 0034 00FCFF03 		.word	67107840
  83 0038 00000408 		.word	134479872
  84              		.cfi_endproc
  85              	.LFE295:
  87              		.section	.text.GetBank,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	GetBank:
  95              	.LVL6:
ARM GAS  /tmp/ccruOu2m.s 			page 5


  96              	.LFB296:
 136:Core/Src/flash.c **** 
 137:Core/Src/flash.c **** uint32_t GetBank(uint32_t Addr) {
  97              		.loc 1 137 33 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 138:Core/Src/flash.c ****   return FLASH_BANK_1;
 102              		.loc 1 138 3 view .LVU19
 139:Core/Src/flash.c **** }
 103              		.loc 1 139 1 is_stmt 0 view .LVU20
 104 0000 0120     		movs	r0, #1
 105              	.LVL7:
 106              		.loc 1 139 1 view .LVU21
 107 0002 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE296:
 111              		.section	.rodata.report_test_status.str1.4,"aMS",%progbits,1
 112              		.align	2
 113              	.LC0:
 114 0000 54657374 		.ascii	"Test %d failed\012\015\000"
 114      20256420 
 114      6661696C 
 114      65640A0D 
 114      00
 115 0011 000000   		.align	2
 116              	.LC1:
 117 0014 54657374 		.ascii	"Test %d passed\012\015\000"
 117      20256420 
 117      70617373 
 117      65640A0D 
 117      00
 118              		.section	.text.report_test_status,"ax",%progbits
 119              		.align	1
 120              		.global	report_test_status
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	report_test_status:
 127              	.LVL8:
 128              	.LFB291:
  18:Core/Src/flash.c ****   if (assert_failed_flag) {
 129              		.loc 1 18 39 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
  18:Core/Src/flash.c ****   if (assert_failed_flag) {
 133              		.loc 1 18 39 is_stmt 0 view .LVU23
 134 0000 08B5     		push	{r3, lr}
 135              	.LCFI0:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 3, -8
 138              		.cfi_offset 14, -4
 139 0002 0146     		mov	r1, r0
  19:Core/Src/flash.c ****     printf("Test %d failed\n\r",test_num);
ARM GAS  /tmp/ccruOu2m.s 			page 6


 140              		.loc 1 19 3 is_stmt 1 view .LVU24
  19:Core/Src/flash.c ****     printf("Test %d failed\n\r",test_num);
 141              		.loc 1 19 7 is_stmt 0 view .LVU25
 142 0004 064B     		ldr	r3, .L13
 143 0006 1B68     		ldr	r3, [r3]
  19:Core/Src/flash.c ****     printf("Test %d failed\n\r",test_num);
 144              		.loc 1 19 6 view .LVU26
 145 0008 33B1     		cbz	r3, .L10
  20:Core/Src/flash.c ****     assert_failed_flag = 0;
 146              		.loc 1 20 5 is_stmt 1 view .LVU27
 147 000a 0648     		ldr	r0, .L13+4
 148              	.LVL9:
  20:Core/Src/flash.c ****     assert_failed_flag = 0;
 149              		.loc 1 20 5 is_stmt 0 view .LVU28
 150 000c FFF7FEFF 		bl	printf
 151              	.LVL10:
  21:Core/Src/flash.c ****   }
 152              		.loc 1 21 5 is_stmt 1 view .LVU29
  21:Core/Src/flash.c ****   }
 153              		.loc 1 21 24 is_stmt 0 view .LVU30
 154 0010 034B     		ldr	r3, .L13
 155 0012 0022     		movs	r2, #0
 156 0014 1A60     		str	r2, [r3]
 157              	.L9:
  26:Core/Src/flash.c **** 
 158              		.loc 1 26 1 view .LVU31
 159 0016 08BD     		pop	{r3, pc}
 160              	.LVL11:
 161              	.L10:
  24:Core/Src/flash.c ****   }
 162              		.loc 1 24 5 is_stmt 1 view .LVU32
 163 0018 0348     		ldr	r0, .L13+8
 164              	.LVL12:
  24:Core/Src/flash.c ****   }
 165              		.loc 1 24 5 is_stmt 0 view .LVU33
 166 001a FFF7FEFF 		bl	printf
 167              	.LVL13:
  26:Core/Src/flash.c **** 
 168              		.loc 1 26 1 view .LVU34
 169 001e FAE7     		b	.L9
 170              	.L14:
 171              		.align	2
 172              	.L13:
 173 0020 00000000 		.word	assert_failed_flag
 174 0024 00000000 		.word	.LC0
 175 0028 14000000 		.word	.LC1
 176              		.cfi_endproc
 177              	.LFE291:
 179              		.section	.text.write_raw,"ax",%progbits
 180              		.align	1
 181              		.global	write_raw
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	write_raw:
 188              	.LVL14:
ARM GAS  /tmp/ccruOu2m.s 			page 7


 189              	.LFB293:
  69:Core/Src/flash.c ****   HAL_StatusTypeDef status = 0;
 190              		.loc 1 69 47 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
  70:Core/Src/flash.c ****   
 194              		.loc 1 70 3 view .LVU36
  73:Core/Src/flash.c ****     return(-1); 
 195              		.loc 1 73 3 view .LVU37
  73:Core/Src/flash.c ****     return(-1); 
 196              		.loc 1 73 6 is_stmt 0 view .LVU38
 197 0000 68B3     		cbz	r0, .L19
  69:Core/Src/flash.c ****   HAL_StatusTypeDef status = 0;
 198              		.loc 1 69 47 discriminator 1 view .LVU39
 199 0002 38B5     		push	{r3, r4, r5, lr}
 200              	.LCFI1:
 201              		.cfi_def_cfa_offset 16
 202              		.cfi_offset 3, -16
 203              		.cfi_offset 4, -12
 204              		.cfi_offset 5, -8
 205              		.cfi_offset 14, -4
 206 0004 0C46     		mov	r4, r1
 207 0006 0546     		mov	r5, r0
  73:Core/Src/flash.c ****     return(-1); 
 208              		.loc 1 73 15 discriminator 1 view .LVU40
 209 0008 61B3     		cbz	r1, .L20
  78:Core/Src/flash.c ****     return(-2);
 210              		.loc 1 78 3 is_stmt 1 view .LVU41
  78:Core/Src/flash.c ****     return(-2);
 211              		.loc 1 78 6 is_stmt 0 view .LVU42
 212 000a 11F00F0F 		tst	r1, #15
 213 000e 2CD1     		bne	.L21
  82:Core/Src/flash.c ****       (*(address+1)!=0xFFFFFFFF)) {
 214              		.loc 1 82 3 is_stmt 1 view .LVU43
  82:Core/Src/flash.c ****       (*(address+1)!=0xFFFFFFFF)) {
 215              		.loc 1 82 8 is_stmt 0 view .LVU44
 216 0010 0B68     		ldr	r3, [r1]
  82:Core/Src/flash.c ****       (*(address+1)!=0xFFFFFFFF)) {
 217              		.loc 1 82 6 view .LVU45
 218 0012 B3F1FF3F 		cmp	r3, #-1
 219 0016 2BD1     		bne	.L22
  83:Core/Src/flash.c ****     return(-3);
 220              		.loc 1 83 8 discriminator 1 view .LVU46
 221 0018 4B68     		ldr	r3, [r1, #4]
  82:Core/Src/flash.c ****       (*(address+1)!=0xFFFFFFFF)) {
 222              		.loc 1 82 30 discriminator 1 view .LVU47
 223 001a B3F1FF3F 		cmp	r3, #-1
 224 001e 2AD1     		bne	.L23
  86:Core/Src/flash.c ****   if ((status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,(uint32_t) address, data->data0))) {
 225              		.loc 1 86 3 is_stmt 1 view .LVU48
 226 0020 FFF7FEFF 		bl	HAL_FLASH_Unlock
 227              	.LVL15:
  87:Core/Src/flash.c ****     HAL_FLASH_Lock();
 228              		.loc 1 87 3 view .LVU49
  87:Core/Src/flash.c ****     HAL_FLASH_Lock();
 229              		.loc 1 87 17 is_stmt 0 view .LVU50
ARM GAS  /tmp/ccruOu2m.s 			page 8


 230 0024 D5E90023 		ldrd	r2, [r5]
 231 0028 2146     		mov	r1, r4
 232 002a 0020     		movs	r0, #0
 233 002c FFF7FEFF 		bl	HAL_FLASH_Program
 234              	.LVL16:
  87:Core/Src/flash.c ****     HAL_FLASH_Lock();
 235              		.loc 1 87 6 view .LVU51
 236 0030 58B9     		cbnz	r0, .L28
  91:Core/Src/flash.c ****   if ((status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,(uint32_t) address, data->data1))) {
 237              		.loc 1 91 3 is_stmt 1 view .LVU52
 238              	.LVL17:
  92:Core/Src/flash.c ****     HAL_FLASH_Lock();
 239              		.loc 1 92 3 view .LVU53
  92:Core/Src/flash.c ****     HAL_FLASH_Lock();
 240              		.loc 1 92 17 is_stmt 0 view .LVU54
 241 0032 D5E90223 		ldrd	r2, [r5, #8]
 242 0036 04F10801 		add	r1, r4, #8
 243              	.LVL18:
  92:Core/Src/flash.c ****     HAL_FLASH_Lock();
 244              		.loc 1 92 17 view .LVU55
 245 003a 0020     		movs	r0, #0
 246              	.LVL19:
  92:Core/Src/flash.c ****     HAL_FLASH_Lock();
 247              		.loc 1 92 17 view .LVU56
 248 003c FFF7FEFF 		bl	HAL_FLASH_Program
 249              	.LVL20:
  92:Core/Src/flash.c ****     HAL_FLASH_Lock();
 250              		.loc 1 92 6 view .LVU57
 251 0040 40B9     		cbnz	r0, .L29
  96:Core/Src/flash.c ****    
 252              		.loc 1 96 3 is_stmt 1 view .LVU58
 253 0042 FFF7FEFF 		bl	HAL_FLASH_Lock
 254              	.LVL21:
  98:Core/Src/flash.c **** }
 255              		.loc 1 98 3 view .LVU59
  98:Core/Src/flash.c **** }
 256              		.loc 1 98 9 is_stmt 0 view .LVU60
 257 0046 0020     		movs	r0, #0
 258              	.LVL22:
 259              	.L15:
  99:Core/Src/flash.c **** 
 260              		.loc 1 99 1 view .LVU61
 261 0048 38BD     		pop	{r3, r4, r5, pc}
 262              	.LVL23:
 263              	.L28:
  88:Core/Src/flash.c ****     return(-4);
 264              		.loc 1 88 5 is_stmt 1 view .LVU62
 265 004a FFF7FEFF 		bl	HAL_FLASH_Lock
 266              	.LVL24:
  89:Core/Src/flash.c ****   }
 267              		.loc 1 89 5 view .LVU63
  89:Core/Src/flash.c ****   }
 268              		.loc 1 89 11 is_stmt 0 view .LVU64
 269 004e 6FF00300 		mvn	r0, #3
 270 0052 F9E7     		b	.L15
 271              	.LVL25:
 272              	.L29:
ARM GAS  /tmp/ccruOu2m.s 			page 9


  93:Core/Src/flash.c ****     return(-5);
 273              		.loc 1 93 5 is_stmt 1 view .LVU65
 274 0054 FFF7FEFF 		bl	HAL_FLASH_Lock
 275              	.LVL26:
  94:Core/Src/flash.c ****   }
 276              		.loc 1 94 5 view .LVU66
  94:Core/Src/flash.c ****   }
 277              		.loc 1 94 11 is_stmt 0 view .LVU67
 278 0058 6FF00400 		mvn	r0, #4
 279 005c F4E7     		b	.L15
 280              	.LVL27:
 281              	.L19:
 282              	.LCFI2:
 283              		.cfi_def_cfa_offset 0
 284              		.cfi_restore 3
 285              		.cfi_restore 4
 286              		.cfi_restore 5
 287              		.cfi_restore 14
  74:Core/Src/flash.c ****   }
 288              		.loc 1 74 11 view .LVU68
 289 005e 4FF0FF30 		mov	r0, #-1
 290              	.LVL28:
  99:Core/Src/flash.c **** 
 291              		.loc 1 99 1 view .LVU69
 292 0062 7047     		bx	lr
 293              	.LVL29:
 294              	.L20:
 295              	.LCFI3:
 296              		.cfi_def_cfa_offset 16
 297              		.cfi_offset 3, -16
 298              		.cfi_offset 4, -12
 299              		.cfi_offset 5, -8
 300              		.cfi_offset 14, -4
  74:Core/Src/flash.c ****   }
 301              		.loc 1 74 11 view .LVU70
 302 0064 4FF0FF30 		mov	r0, #-1
 303              	.LVL30:
  74:Core/Src/flash.c ****   }
 304              		.loc 1 74 11 view .LVU71
 305 0068 EEE7     		b	.L15
 306              	.LVL31:
 307              	.L21:
  79:Core/Src/flash.c ****   }
 308              		.loc 1 79 11 view .LVU72
 309 006a 6FF00100 		mvn	r0, #1
 310              	.LVL32:
  79:Core/Src/flash.c ****   }
 311              		.loc 1 79 11 view .LVU73
 312 006e EBE7     		b	.L15
 313              	.LVL33:
 314              	.L22:
  84:Core/Src/flash.c ****   }
 315              		.loc 1 84 11 view .LVU74
 316 0070 6FF00200 		mvn	r0, #2
 317              	.LVL34:
  84:Core/Src/flash.c ****   }
 318              		.loc 1 84 11 view .LVU75
ARM GAS  /tmp/ccruOu2m.s 			page 10


 319 0074 E8E7     		b	.L15
 320              	.LVL35:
 321              	.L23:
  84:Core/Src/flash.c ****   }
 322              		.loc 1 84 11 view .LVU76
 323 0076 6FF00200 		mvn	r0, #2
 324              	.LVL36:
  84:Core/Src/flash.c ****   }
 325              		.loc 1 84 11 view .LVU77
 326 007a E5E7     		b	.L15
 327              		.cfi_endproc
 328              	.LFE293:
 330              		.section	.text.erase_page,"ax",%progbits
 331              		.align	1
 332              		.global	erase_page
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv4-sp-d16
 338              	erase_page:
 339              	.LVL37:
 340              	.LFB294:
 101:Core/Src/flash.c ****   static FLASH_EraseInitTypeDef EraseInitStruct;
 341              		.loc 1 101 31 is_stmt 1 view -0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 101:Core/Src/flash.c ****   static FLASH_EraseInitTypeDef EraseInitStruct;
 345              		.loc 1 101 31 is_stmt 0 view .LVU79
 346 0000 30B5     		push	{r4, r5, lr}
 347              	.LCFI4:
 348              		.cfi_def_cfa_offset 12
 349              		.cfi_offset 4, -12
 350              		.cfi_offset 5, -8
 351              		.cfi_offset 14, -4
 352 0002 83B0     		sub	sp, sp, #12
 353              	.LCFI5:
 354              		.cfi_def_cfa_offset 24
 355 0004 0546     		mov	r5, r0
 102:Core/Src/flash.c ****   uint32_t page_error;
 356              		.loc 1 102 3 is_stmt 1 view .LVU80
 103:Core/Src/flash.c ****    
 357              		.loc 1 103 3 view .LVU81
 105:Core/Src/flash.c ****   /* Clear OPTVERR bit set on virgin samples */
 358              		.loc 1 105 3 view .LVU82
 359 0006 FFF7FEFF 		bl	HAL_FLASH_Unlock
 360              	.LVL38:
 107:Core/Src/flash.c ****   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 361              		.loc 1 107 3 view .LVU83
 107:Core/Src/flash.c ****   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 362              		.loc 1 107 3 view .LVU84
 107:Core/Src/flash.c ****   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 363              		.loc 1 107 3 view .LVU85
 107:Core/Src/flash.c ****   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 364              		.loc 1 107 3 view .LVU86
 365 000a 104B     		ldr	r3, .L35
 366 000c 4FF40042 		mov	r2, #32768
ARM GAS  /tmp/ccruOu2m.s 			page 11


 367 0010 1A61     		str	r2, [r3, #16]
 107:Core/Src/flash.c ****   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 368              		.loc 1 107 3 view .LVU87
 108:Core/Src/flash.c ****   EraseInitStruct.Banks       = GetBank(Addr);
 369              		.loc 1 108 3 view .LVU88
 108:Core/Src/flash.c ****   EraseInitStruct.Banks       = GetBank(Addr);
 370              		.loc 1 108 31 is_stmt 0 view .LVU89
 371 0012 0F4C     		ldr	r4, .L35+4
 372 0014 0023     		movs	r3, #0
 373 0016 2360     		str	r3, [r4]
 109:Core/Src/flash.c ****   EraseInitStruct.Page        = GetPage(Addr);
 374              		.loc 1 109 3 is_stmt 1 view .LVU90
 109:Core/Src/flash.c ****   EraseInitStruct.Page        = GetPage(Addr);
 375              		.loc 1 109 33 is_stmt 0 view .LVU91
 376 0018 2846     		mov	r0, r5
 377 001a FFF7FEFF 		bl	GetBank
 378              	.LVL39:
 109:Core/Src/flash.c ****   EraseInitStruct.Page        = GetPage(Addr);
 379              		.loc 1 109 31 view .LVU92
 380 001e 6060     		str	r0, [r4, #4]
 110:Core/Src/flash.c ****   EraseInitStruct.NbPages     = 1;
 381              		.loc 1 110 3 is_stmt 1 view .LVU93
 110:Core/Src/flash.c ****   EraseInitStruct.NbPages     = 1;
 382              		.loc 1 110 33 is_stmt 0 view .LVU94
 383 0020 2846     		mov	r0, r5
 384 0022 FFF7FEFF 		bl	GetPage
 385              	.LVL40:
 110:Core/Src/flash.c ****   EraseInitStruct.NbPages     = 1;
 386              		.loc 1 110 31 view .LVU95
 387 0026 A060     		str	r0, [r4, #8]
 111:Core/Src/flash.c ****   if (HAL_FLASHEx_Erase(&EraseInitStruct, &page_error) != HAL_OK) {
 388              		.loc 1 111 3 is_stmt 1 view .LVU96
 111:Core/Src/flash.c ****   if (HAL_FLASHEx_Erase(&EraseInitStruct, &page_error) != HAL_OK) {
 389              		.loc 1 111 31 is_stmt 0 view .LVU97
 390 0028 0123     		movs	r3, #1
 391 002a E360     		str	r3, [r4, #12]
 112:Core/Src/flash.c ****     HAL_FLASH_Lock();
 392              		.loc 1 112 3 is_stmt 1 view .LVU98
 112:Core/Src/flash.c ****     HAL_FLASH_Lock();
 393              		.loc 1 112 7 is_stmt 0 view .LVU99
 394 002c 01A9     		add	r1, sp, #4
 395 002e 2046     		mov	r0, r4
 396 0030 FFF7FEFF 		bl	HAL_FLASHEx_Erase
 397              	.LVL41:
 112:Core/Src/flash.c ****     HAL_FLASH_Lock();
 398              		.loc 1 112 6 view .LVU100
 399 0034 20B9     		cbnz	r0, .L34
 116:Core/Src/flash.c ****   return(0);
 400              		.loc 1 116 3 is_stmt 1 view .LVU101
 401 0036 FFF7FEFF 		bl	HAL_FLASH_Lock
 402              	.LVL42:
 117:Core/Src/flash.c **** }
 403              		.loc 1 117 3 view .LVU102
 117:Core/Src/flash.c **** }
 404              		.loc 1 117 9 is_stmt 0 view .LVU103
 405 003a 0020     		movs	r0, #0
 406              	.L30:
ARM GAS  /tmp/ccruOu2m.s 			page 12


 118:Core/Src/flash.c **** 
 407              		.loc 1 118 1 view .LVU104
 408 003c 03B0     		add	sp, sp, #12
 409              	.LCFI6:
 410              		.cfi_remember_state
 411              		.cfi_def_cfa_offset 12
 412              		@ sp needed
 413 003e 30BD     		pop	{r4, r5, pc}
 414              	.LVL43:
 415              	.L34:
 416              	.LCFI7:
 417              		.cfi_restore_state
 113:Core/Src/flash.c ****     return (-1);
 418              		.loc 1 113 5 is_stmt 1 view .LVU105
 419 0040 FFF7FEFF 		bl	HAL_FLASH_Lock
 420              	.LVL44:
 114:Core/Src/flash.c ****   }
 421              		.loc 1 114 5 view .LVU106
 114:Core/Src/flash.c ****   }
 422              		.loc 1 114 12 is_stmt 0 view .LVU107
 423 0044 4FF0FF30 		mov	r0, #-1
 424 0048 F8E7     		b	.L30
 425              	.L36:
 426 004a 00BF     		.align	2
 427              	.L35:
 428 004c 00200240 		.word	1073881088
 429 0050 00000000 		.word	.LANCHOR0
 430              		.cfi_endproc
 431              	.LFE294:
 433              		.section	.rodata.write_raw_test_command.str1.4,"aMS",%progbits,1
 434              		.align	2
 435              	.LC3:
 436 0000 436F7265 		.ascii	"Core/Src/flash.c\000"
 436      2F537263 
 436      2F666C61 
 436      73682E63 
 436      00
 437              		.section	.text.write_raw_test_command,"ax",%progbits
 438              		.align	1
 439              		.global	write_raw_test_command
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	write_raw_test_command:
 446              	.LVL45:
 447              	.LFB292:
  28:Core/Src/flash.c ****   char tdata[16] = {0,1,2,3,4,5,6,7,
 448              		.loc 1 28 46 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 16
 451              		@ frame_needed = 0, uses_anonymous_args = 0
  28:Core/Src/flash.c ****   char tdata[16] = {0,1,2,3,4,5,6,7,
 452              		.loc 1 28 46 is_stmt 0 view .LVU109
 453 0000 10B5     		push	{r4, lr}
 454              	.LCFI8:
 455              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccruOu2m.s 			page 13


 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
 458 0002 84B0     		sub	sp, sp, #16
 459              	.LCFI9:
 460              		.cfi_def_cfa_offset 24
  29:Core/Src/flash.c ****                     8,9,10,11,12,13,14,15};
 461              		.loc 1 29 3 is_stmt 1 view .LVU110
  29:Core/Src/flash.c ****                     8,9,10,11,12,13,14,15};
 462              		.loc 1 29 8 is_stmt 0 view .LVU111
 463 0004 294B     		ldr	r3, .L49
 464 0006 0FCB     		ldm	r3, {r0, r1, r2, r3}
 465              	.LVL46:
  29:Core/Src/flash.c ****                     8,9,10,11,12,13,14,15};
 466              		.loc 1 29 8 view .LVU112
 467 0008 04AC     		add	r4, sp, #16
 468 000a 04E90F00 		stmdb	r4, {r0, r1, r2, r3}
  31:Core/Src/flash.c ****   erase_page((uint32_t) addr);
 469              		.loc 1 31 3 is_stmt 1 view .LVU113
 470              	.LVL47:
  32:Core/Src/flash.c **** 
 471              		.loc 1 32 3 view .LVU114
 472 000e 284C     		ldr	r4, .L49+4
 473 0010 2046     		mov	r0, r4
 474 0012 FFF7FEFF 		bl	erase_page
 475              	.LVL48:
  35:Core/Src/flash.c ****   report_test_status(1);
 476              		.loc 1 35 3 view .LVU115
 477 0016 2146     		mov	r1, r4
 478 0018 0020     		movs	r0, #0
 479 001a FFF7FEFF 		bl	write_raw
 480              	.LVL49:
 481 001e B0F1FF3F 		cmp	r0, #-1
 482 0022 2AD1     		bne	.L44
 483              	.L38:
  36:Core/Src/flash.c **** 
 484              		.loc 1 36 3 view .LVU116
 485 0024 0120     		movs	r0, #1
 486 0026 FFF7FEFF 		bl	report_test_status
 487              	.LVL50:
  39:Core/Src/flash.c ****   report_test_status(2);
 488              		.loc 1 39 3 view .LVU117
 489 002a 0021     		movs	r1, #0
 490 002c 6846     		mov	r0, sp
 491 002e FFF7FEFF 		bl	write_raw
 492              	.LVL51:
 493 0032 B0F1FF3F 		cmp	r0, #-1
 494 0036 25D1     		bne	.L45
 495              	.L39:
  40:Core/Src/flash.c **** 
 496              		.loc 1 40 3 view .LVU118
 497 0038 0220     		movs	r0, #2
 498 003a FFF7FEFF 		bl	report_test_status
 499              	.LVL52:
  43:Core/Src/flash.c ****   report_test_status(3);
 500              		.loc 1 43 3 view .LVU119
 501 003e 1D49     		ldr	r1, .L49+8
 502 0040 6846     		mov	r0, sp
ARM GAS  /tmp/ccruOu2m.s 			page 14


 503 0042 FFF7FEFF 		bl	write_raw
 504              	.LVL53:
 505 0046 10F1020F 		cmn	r0, #2
 506 004a 20D1     		bne	.L46
 507              	.L40:
  44:Core/Src/flash.c **** 
 508              		.loc 1 44 3 view .LVU120
 509 004c 0320     		movs	r0, #3
 510 004e FFF7FEFF 		bl	report_test_status
 511              	.LVL54:
  47:Core/Src/flash.c ****   report_test_status(4);
 512              		.loc 1 47 3 view .LVU121
 513 0052 1749     		ldr	r1, .L49+4
 514 0054 6846     		mov	r0, sp
 515 0056 FFF7FEFF 		bl	write_raw
 516              	.LVL55:
 517 005a E8B9     		cbnz	r0, .L47
 518              	.L41:
  48:Core/Src/flash.c **** 
 519              		.loc 1 48 3 view .LVU122
 520 005c 0420     		movs	r0, #4
 521 005e FFF7FEFF 		bl	report_test_status
 522              	.LVL56:
  51:Core/Src/flash.c ****   report_test_status(5);
 523              		.loc 1 51 3 view .LVU123
 524 0062 1349     		ldr	r1, .L49+4
 525 0064 6846     		mov	r0, sp
 526 0066 FFF7FEFF 		bl	write_raw
 527              	.LVL57:
 528 006a 10F1030F 		cmn	r0, #3
 529 006e 18D1     		bne	.L48
 530              	.L42:
  52:Core/Src/flash.c **** 
 531              		.loc 1 52 3 view .LVU124
 532 0070 0520     		movs	r0, #5
 533 0072 FFF7FEFF 		bl	report_test_status
 534              	.LVL58:
  55:Core/Src/flash.c **** 
 535              		.loc 1 55 1 is_stmt 0 view .LVU125
 536 0076 04B0     		add	sp, sp, #16
 537              	.LCFI10:
 538              		.cfi_remember_state
 539              		.cfi_def_cfa_offset 8
 540              		@ sp needed
 541 0078 10BD     		pop	{r4, pc}
 542              	.L44:
 543              	.LCFI11:
 544              		.cfi_restore_state
  35:Core/Src/flash.c ****   report_test_status(1);
 545              		.loc 1 35 3 discriminator 1 view .LVU126
 546 007a 2321     		movs	r1, #35
 547 007c 0E48     		ldr	r0, .L49+12
 548 007e FFF7FEFF 		bl	assert_failed
 549              	.LVL59:
 550 0082 CFE7     		b	.L38
 551              	.L45:
  39:Core/Src/flash.c ****   report_test_status(2);
ARM GAS  /tmp/ccruOu2m.s 			page 15


 552              		.loc 1 39 3 discriminator 1 view .LVU127
 553 0084 2721     		movs	r1, #39
 554 0086 0C48     		ldr	r0, .L49+12
 555 0088 FFF7FEFF 		bl	assert_failed
 556              	.LVL60:
 557 008c D4E7     		b	.L39
 558              	.L46:
  43:Core/Src/flash.c ****   report_test_status(3);
 559              		.loc 1 43 3 discriminator 1 view .LVU128
 560 008e 2B21     		movs	r1, #43
 561 0090 0948     		ldr	r0, .L49+12
 562 0092 FFF7FEFF 		bl	assert_failed
 563              	.LVL61:
 564 0096 D9E7     		b	.L40
 565              	.L47:
  47:Core/Src/flash.c ****   report_test_status(4);
 566              		.loc 1 47 3 discriminator 1 view .LVU129
 567 0098 2F21     		movs	r1, #47
 568 009a 0748     		ldr	r0, .L49+12
 569 009c FFF7FEFF 		bl	assert_failed
 570              	.LVL62:
 571 00a0 DCE7     		b	.L41
 572              	.L48:
  51:Core/Src/flash.c ****   report_test_status(5);
 573              		.loc 1 51 3 discriminator 1 view .LVU130
 574 00a2 3321     		movs	r1, #51
 575 00a4 0448     		ldr	r0, .L49+12
 576 00a6 FFF7FEFF 		bl	assert_failed
 577              	.LVL63:
 578 00aa E1E7     		b	.L42
 579              	.L50:
 580              		.align	2
 581              	.L49:
 582 00ac 00000000 		.word	.LANCHOR1
 583 00b0 F0FF0308 		.word	134479856
 584 00b4 F8FF0308 		.word	134479864
 585 00b8 00000000 		.word	.LC3
 586              		.cfi_endproc
 587              	.LFE292:
 589              		.section	.rodata
 590              		.align	2
 591              		.set	.LANCHOR1,. + 0
 592              	.LC2:
 593 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 593      04050607 
 593      08090A0B 
 593      0C
 594 000d 0D0E0F   		.ascii	"\015\016\017"
 595              		.section	.bss.EraseInitStruct.0,"aw",%nobits
 596              		.align	2
 597              		.set	.LANCHOR0,. + 0
 600              	EraseInitStruct.0:
 601 0000 00000000 		.space	16
 601      00000000 
 601      00000000 
 601      00000000 
 602              		.text
ARM GAS  /tmp/ccruOu2m.s 			page 16


 603              	.Letext0:
 604              		.file 2 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_
 605              		.file 3 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdi
 606              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 607              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 608              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 609              		.file 7 "Core/Inc/flash.h"
 610              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash_ex.h"
 611              		.file 9 "Core/Inc/stm32l4xx_hal_conf.h"
 612              		.file 10 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdio.h"
ARM GAS  /tmp/ccruOu2m.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 flash.c
     /tmp/ccruOu2m.s:18     .text.GetPage:0000000000000000 $t
     /tmp/ccruOu2m.s:25     .text.GetPage:0000000000000000 GetPage
     /tmp/ccruOu2m.s:81     .text.GetPage:0000000000000030 $d
     /tmp/ccruOu2m.s:88     .text.GetBank:0000000000000000 $t
     /tmp/ccruOu2m.s:94     .text.GetBank:0000000000000000 GetBank
     /tmp/ccruOu2m.s:112    .rodata.report_test_status.str1.4:0000000000000000 $d
     /tmp/ccruOu2m.s:119    .text.report_test_status:0000000000000000 $t
     /tmp/ccruOu2m.s:126    .text.report_test_status:0000000000000000 report_test_status
     /tmp/ccruOu2m.s:173    .text.report_test_status:0000000000000020 $d
     /tmp/ccruOu2m.s:180    .text.write_raw:0000000000000000 $t
     /tmp/ccruOu2m.s:187    .text.write_raw:0000000000000000 write_raw
     /tmp/ccruOu2m.s:331    .text.erase_page:0000000000000000 $t
     /tmp/ccruOu2m.s:338    .text.erase_page:0000000000000000 erase_page
     /tmp/ccruOu2m.s:428    .text.erase_page:000000000000004c $d
     /tmp/ccruOu2m.s:434    .rodata.write_raw_test_command.str1.4:0000000000000000 $d
     /tmp/ccruOu2m.s:438    .text.write_raw_test_command:0000000000000000 $t
     /tmp/ccruOu2m.s:445    .text.write_raw_test_command:0000000000000000 write_raw_test_command
     /tmp/ccruOu2m.s:582    .text.write_raw_test_command:00000000000000ac $d
     /tmp/ccruOu2m.s:590    .rodata:0000000000000000 $d
     /tmp/ccruOu2m.s:596    .bss.EraseInitStruct.0:0000000000000000 $d
     /tmp/ccruOu2m.s:600    .bss.EraseInitStruct.0:0000000000000000 EraseInitStruct.0

UNDEFINED SYMBOLS
printf
assert_failed_flag
HAL_FLASH_Unlock
HAL_FLASH_Program
HAL_FLASH_Lock
HAL_FLASHEx_Erase
assert_failed
