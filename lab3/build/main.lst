ARM GAS  /tmp/ccVvGxMz.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.help_command.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC0:
  22 0000 0D0A4176 		.ascii	"\015\012Available Commands:\012\015\000"
  22      61696C61 
  22      626C6520 
  22      436F6D6D 
  22      616E6473 
  23              		.align	2
  24              	.LC1:
  25 0018 6C6F6E0A 		.ascii	"lon\012\015\000"
  25      0D00
  26 001e 0000     		.align	2
  27              	.LC2:
  28 0020 6C6F660A 		.ascii	"lof\012\015\000"
  28      0D00
  29 0026 0000     		.align	2
  30              	.LC3:
  31 0028 74657374 		.ascii	"test\012\015\000"
  31      0A0D00
  32              		.section	.text.help_command,"ax",%progbits
  33              		.align	1
  34              		.global	help_command
  35              		.syntax unified
  36              		.thumb
  37              		.thumb_func
  39              	help_command:
  40              	.LVL0:
  41              	.LFB358:
  42              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
ARM GAS  /tmp/ccVvGxMz.s 			page 2


  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdlib.h>
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include "stm32l4xx_ll_usart.h"
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <retarget.h>
  29:Core/Src/main.c **** #include <command.h>
  30:Core/Src/main.c **** #include "queue.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** queue_t rx_queue;
  54:Core/Src/main.c **** int led_on = 0;
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** void help_command(char *args);
  64:Core/Src/main.c **** void lof_command();
  65:Core/Src/main.c **** void lon_command();
  66:Core/Src/main.c **** void test_command(char *args);
ARM GAS  /tmp/ccVvGxMz.s 			page 3


  67:Core/Src/main.c **** int parse_command (uint8_t *line, uint8_t **command, uint8_t **args);
  68:Core/Src/main.c **** int execute_command(uint8_t * line);
  69:Core/Src/main.c **** /* USER CODE END PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  72:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  73:Core/Src/main.c **** command_t commands[] = {
  74:Core/Src/main.c ****   {"help",help_command},
  75:Core/Src/main.c ****   {"lof",lof_command},
  76:Core/Src/main.c ****   {"lon",lon_command},
  77:Core/Src/main.c ****   {"test",test_command},
  78:Core/Src/main.c ****   {0,0}
  79:Core/Src/main.c **** };
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /**
  85:Core/Src/main.c ****   * @brief  The application entry point.
  86:Core/Src/main.c ****   * @retval int
  87:Core/Src/main.c ****   */
  88:Core/Src/main.c **** int main(void)
  89:Core/Src/main.c **** {
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Core/Src/main.c ****   HAL_Init();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 100:Core/Src/main.c ****   uint8_t command_line[QUEUE_SIZE];
 101:Core/Src/main.c ****   uint8_t ch;
 102:Core/Src/main.c ****   int n = 0;
 103:Core/Src/main.c ****   /* USER CODE END Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Configure the system clock */
 106:Core/Src/main.c ****   SystemClock_Config();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Initialize all configured peripherals */
 113:Core/Src/main.c ****   MX_GPIO_Init();
 114:Core/Src/main.c ****   MX_USART2_UART_Init();
 115:Core/Src/main.c ****  
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c ****   RetargetInit(&huart2);
 118:Core/Src/main.c ****   LL_USART_EnableIT_RXNE(USART2); 
 119:Core/Src/main.c ****   printf("\r\nSystem Running\n\r");
 120:Core/Src/main.c ****   printf("\r\nSTM$");
 121:Core/Src/main.c ****   /* USER CODE END 2 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Infinite loop */
ARM GAS  /tmp/ccVvGxMz.s 			page 4


 124:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 125:Core/Src/main.c ****   while (1)
 126:Core/Src/main.c ****   {
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     if ((ch = dequeue(&rx_queue))) {
 129:Core/Src/main.c ****       putchar(ch);
 130:Core/Src/main.c ****       command_line[n] = ch;
 131:Core/Src/main.c ****       if(ch == '\r' || ch == '\n'){
 132:Core/Src/main.c **** 	command_line[n] = '\0'; //end of string
 133:Core/Src/main.c ****       	if(!execute_command(command_line)){
 134:Core/Src/main.c **** 	  printf("\r\nOK");
 135:Core/Src/main.c **** 	}else{
 136:Core/Src/main.c **** 	  printf("\r\nNOK");
 137:Core/Src/main.c **** 	}
 138:Core/Src/main.c **** 	n = 0;
 139:Core/Src/main.c **** 	printf("\r\nSTM$");
 140:Core/Src/main.c ****       }else{
 141:Core/Src/main.c **** 	n++;
 142:Core/Src/main.c ****       }
 143:Core/Src/main.c ****       
 144:Core/Src/main.c ****     }
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c ****    
 147:Core/Src/main.c ****     
 148:Core/Src/main.c ****     /* USER CODE END WHILE */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 151:Core/Src/main.c ****   
 152:Core/Src/main.c ****   /* USER CODE END 3 */
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****   * @brief System Clock Configuration
 157:Core/Src/main.c ****   * @retval None
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** void SystemClock_Config(void)
 160:Core/Src/main.c **** {
 161:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 162:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 165:Core/Src/main.c ****   */
 166:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 167:Core/Src/main.c ****   {
 168:Core/Src/main.c ****     Error_Handler();
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c ****   /** Configure LSE Drive Capability
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 173:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 174:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 175:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 178:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 179:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 180:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
ARM GAS  /tmp/ccVvGxMz.s 			page 5


 181:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_10;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c ****   /** Enable MSI Auto calibration
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c ****   HAL_RCCEx_EnableMSIPLLMode();
 203:Core/Src/main.c **** }
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** /**
 206:Core/Src/main.c ****   * @brief USART2 Initialization Function
 207:Core/Src/main.c ****   * @param None
 208:Core/Src/main.c ****   * @retval None
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 211:Core/Src/main.c **** {
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 220:Core/Src/main.c ****   huart2.Instance = USART2;
 221:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 222:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 223:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 224:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 225:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 226:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 227:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 228:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 229:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 230:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 235:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** }
ARM GAS  /tmp/ccVvGxMz.s 			page 6


 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /**
 240:Core/Src/main.c ****   * @brief GPIO Initialization Function
 241:Core/Src/main.c ****   * @param None
 242:Core/Src/main.c ****   * @retval None
 243:Core/Src/main.c ****   */
 244:Core/Src/main.c **** static void MX_GPIO_Init(void)
 245:Core/Src/main.c **** {
 246:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 249:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 250:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 251:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 254:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /*Configure GPIO pin : LD3_Pin */
 257:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD3_Pin;
 258:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 259:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 260:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 261:Core/Src/main.c ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** }
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 266:Core/Src/main.c **** int execute_command(uint8_t * line) {
 267:Core/Src/main.c ****   uint8_t *cmd;
 268:Core/Src/main.c ****   uint8_t *arg;
 269:Core/Src/main.c ****   command_t *p = commands;
 270:Core/Src/main.c ****   int success = 0;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   if (!line) {
 273:Core/Src/main.c ****     return (-1); // Passed a bad pointer 
 274:Core/Src/main.c ****   }
 275:Core/Src/main.c ****   if (parse_command(line,&cmd,&arg) == -1) {
 276:Core/Src/main.c ****     printf("Error with parse command\n\r");
 277:Core/Src/main.c ****     return (-1);
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c ****   while (p->cmd_string) {
 280:Core/Src/main.c ****     if (!strcmp(p->cmd_string,(char *) cmd)) {
 281:Core/Src/main.c ****       if (!p->cmd_function) {
 282:Core/Src/main.c ****         return (-1);
 283:Core/Src/main.c ****       }
 284:Core/Src/main.c ****       (*p->cmd_function)((char *)arg);            // Run the command with the passed arguments
 285:Core/Src/main.c ****       success = 1;
 286:Core/Src/main.c ****       break;
 287:Core/Src/main.c ****     }
 288:Core/Src/main.c ****     p++;
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c ****   if (success) {
 291:Core/Src/main.c ****     return (0);
 292:Core/Src/main.c ****   }
 293:Core/Src/main.c ****   else {
 294:Core/Src/main.c ****     return (-1);
ARM GAS  /tmp/ccVvGxMz.s 			page 7


 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c **** int parse_command (uint8_t *line, uint8_t **command, uint8_t **args){
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   uint8_t *line_temp;
 300:Core/Src/main.c ****   if((!line) || (!command) || (!args)){ //check for bad pointer
 301:Core/Src/main.c ****     return(-1); 
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c ****   line_temp= line;
 304:Core/Src/main.c ****   *command = line;
 305:Core/Src/main.c ****   //strcpy(line_left, line);
 306:Core/Src/main.c ****   while(*line_temp != ','){ //increment through input to find end of command
 307:Core/Src/main.c ****     if(!*line_temp){
 308:Core/Src/main.c ****       *args = '\0'; //no arguments
 309:Core/Src/main.c ****       return(0);
 310:Core/Src/main.c ****     }
 311:Core/Src/main.c ****     line_temp++;
 312:Core/Src/main.c ****   }
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   *line_temp = '\0'; //replace comma with null for end of command string
 315:Core/Src/main.c ****   *args = line_temp +1; //one char past null is beginning of arguments
 316:Core/Src/main.c ****   return 0;
 317:Core/Src/main.c **** }
 318:Core/Src/main.c **** void help_command(char *args){
  43              		.loc 1 318 30 view -0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 0, uses_anonymous_args = 0
  47              		.loc 1 318 30 is_stmt 0 view .LVU1
  48 0000 08B5     		push	{r3, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 3, -8
  52              		.cfi_offset 14, -4
 319:Core/Src/main.c ****   printf("\r\nAvailable Commands:\n\r");
  53              		.loc 1 319 3 is_stmt 1 view .LVU2
  54 0002 0648     		ldr	r0, .L3
  55              	.LVL1:
  56              		.loc 1 319 3 is_stmt 0 view .LVU3
  57 0004 FFF7FEFF 		bl	printf
  58              	.LVL2:
 320:Core/Src/main.c ****   printf("lon\n\r");
  59              		.loc 1 320 3 is_stmt 1 view .LVU4
  60 0008 0548     		ldr	r0, .L3+4
  61 000a FFF7FEFF 		bl	printf
  62              	.LVL3:
 321:Core/Src/main.c ****   printf("lof\n\r");
  63              		.loc 1 321 3 view .LVU5
  64 000e 0548     		ldr	r0, .L3+8
  65 0010 FFF7FEFF 		bl	printf
  66              	.LVL4:
 322:Core/Src/main.c ****   printf("test\n\r");
  67              		.loc 1 322 3 view .LVU6
  68 0014 0448     		ldr	r0, .L3+12
  69 0016 FFF7FEFF 		bl	printf
  70              	.LVL5:
 323:Core/Src/main.c **** }
ARM GAS  /tmp/ccVvGxMz.s 			page 8


  71              		.loc 1 323 1 is_stmt 0 view .LVU7
  72 001a 08BD     		pop	{r3, pc}
  73              	.L4:
  74              		.align	2
  75              	.L3:
  76 001c 00000000 		.word	.LC0
  77 0020 18000000 		.word	.LC1
  78 0024 20000000 		.word	.LC2
  79 0028 28000000 		.word	.LC3
  80              		.cfi_endproc
  81              	.LFE358:
  83              		.section	.text.MX_GPIO_Init,"ax",%progbits
  84              		.align	1
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  89              	MX_GPIO_Init:
  90              	.LFB355:
 245:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  91              		.loc 1 245 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 32
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 30B5     		push	{r4, r5, lr}
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 12
  98              		.cfi_offset 4, -12
  99              		.cfi_offset 5, -8
 100              		.cfi_offset 14, -4
 101 0002 89B0     		sub	sp, sp, #36
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 48
 246:Core/Src/main.c **** 
 104              		.loc 1 246 3 view .LVU9
 246:Core/Src/main.c **** 
 105              		.loc 1 246 20 is_stmt 0 view .LVU10
 106 0004 0024     		movs	r4, #0
 107 0006 0394     		str	r4, [sp, #12]
 108 0008 0494     		str	r4, [sp, #16]
 109 000a 0594     		str	r4, [sp, #20]
 110 000c 0694     		str	r4, [sp, #24]
 111 000e 0794     		str	r4, [sp, #28]
 249:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 112              		.loc 1 249 3 is_stmt 1 view .LVU11
 113              	.LBB16:
 249:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 114              		.loc 1 249 3 view .LVU12
 249:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 115              		.loc 1 249 3 view .LVU13
 116 0010 164B     		ldr	r3, .L7
 117 0012 DA6C     		ldr	r2, [r3, #76]
 118 0014 42F00402 		orr	r2, r2, #4
 119 0018 DA64     		str	r2, [r3, #76]
 249:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 120              		.loc 1 249 3 view .LVU14
 121 001a DA6C     		ldr	r2, [r3, #76]
 122 001c 02F00402 		and	r2, r2, #4
ARM GAS  /tmp/ccVvGxMz.s 			page 9


 123 0020 0092     		str	r2, [sp]
 249:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 124              		.loc 1 249 3 view .LVU15
 125 0022 009A     		ldr	r2, [sp]
 126              	.LBE16:
 249:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 127              		.loc 1 249 3 view .LVU16
 250:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 128              		.loc 1 250 3 view .LVU17
 129              	.LBB17:
 250:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 130              		.loc 1 250 3 view .LVU18
 250:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 131              		.loc 1 250 3 view .LVU19
 132 0024 DA6C     		ldr	r2, [r3, #76]
 133 0026 42F00102 		orr	r2, r2, #1
 134 002a DA64     		str	r2, [r3, #76]
 250:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 135              		.loc 1 250 3 view .LVU20
 136 002c DA6C     		ldr	r2, [r3, #76]
 137 002e 02F00102 		and	r2, r2, #1
 138 0032 0192     		str	r2, [sp, #4]
 250:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 139              		.loc 1 250 3 view .LVU21
 140 0034 019A     		ldr	r2, [sp, #4]
 141              	.LBE17:
 250:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 142              		.loc 1 250 3 view .LVU22
 251:Core/Src/main.c **** 
 143              		.loc 1 251 3 view .LVU23
 144              	.LBB18:
 251:Core/Src/main.c **** 
 145              		.loc 1 251 3 view .LVU24
 251:Core/Src/main.c **** 
 146              		.loc 1 251 3 view .LVU25
 147 0036 DA6C     		ldr	r2, [r3, #76]
 148 0038 42F00202 		orr	r2, r2, #2
 149 003c DA64     		str	r2, [r3, #76]
 251:Core/Src/main.c **** 
 150              		.loc 1 251 3 view .LVU26
 151 003e DB6C     		ldr	r3, [r3, #76]
 152 0040 03F00203 		and	r3, r3, #2
 153 0044 0293     		str	r3, [sp, #8]
 251:Core/Src/main.c **** 
 154              		.loc 1 251 3 view .LVU27
 155 0046 029B     		ldr	r3, [sp, #8]
 156              	.LBE18:
 251:Core/Src/main.c **** 
 157              		.loc 1 251 3 view .LVU28
 254:Core/Src/main.c **** 
 158              		.loc 1 254 3 view .LVU29
 159 0048 094D     		ldr	r5, .L7+4
 160 004a 2246     		mov	r2, r4
 161 004c 0821     		movs	r1, #8
 162 004e 2846     		mov	r0, r5
 163 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 164              	.LVL6:
ARM GAS  /tmp/ccVvGxMz.s 			page 10


 257:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 165              		.loc 1 257 3 view .LVU30
 257:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 166              		.loc 1 257 23 is_stmt 0 view .LVU31
 167 0054 0823     		movs	r3, #8
 168 0056 0393     		str	r3, [sp, #12]
 258:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 169              		.loc 1 258 3 is_stmt 1 view .LVU32
 258:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 1 258 24 is_stmt 0 view .LVU33
 171 0058 0123     		movs	r3, #1
 172 005a 0493     		str	r3, [sp, #16]
 259:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 173              		.loc 1 259 3 is_stmt 1 view .LVU34
 259:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 174              		.loc 1 259 24 is_stmt 0 view .LVU35
 175 005c 0594     		str	r4, [sp, #20]
 260:Core/Src/main.c ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 176              		.loc 1 260 3 is_stmt 1 view .LVU36
 260:Core/Src/main.c ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 177              		.loc 1 260 25 is_stmt 0 view .LVU37
 178 005e 0694     		str	r4, [sp, #24]
 261:Core/Src/main.c **** 
 179              		.loc 1 261 3 is_stmt 1 view .LVU38
 180 0060 03A9     		add	r1, sp, #12
 181 0062 2846     		mov	r0, r5
 182 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 183              	.LVL7:
 263:Core/Src/main.c **** 
 184              		.loc 1 263 1 is_stmt 0 view .LVU39
 185 0068 09B0     		add	sp, sp, #36
 186              	.LCFI3:
 187              		.cfi_def_cfa_offset 12
 188              		@ sp needed
 189 006a 30BD     		pop	{r4, r5, pc}
 190              	.L8:
 191              		.align	2
 192              	.L7:
 193 006c 00100240 		.word	1073876992
 194 0070 00040048 		.word	1207960576
 195              		.cfi_endproc
 196              	.LFE355:
 198              		.section	.rodata.lon_command.str1.4,"aMS",%progbits,1
 199              		.align	2
 200              	.LC4:
 201 0000 0D0A4C45 		.ascii	"\015\012LED ON\012\015\000"
 201      44204F4E 
 201      0A0D00
 202 000b 00       		.align	2
 203              	.LC5:
 204 000c 0D0A4C45 		.ascii	"\015\012LED ALREADY ON\012\015\000"
 204      4420414C 
 204      52454144 
 204      59204F4E 
 204      0A0D00
 205              		.section	.text.lon_command,"ax",%progbits
 206              		.align	1
ARM GAS  /tmp/ccVvGxMz.s 			page 11


 207              		.global	lon_command
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	lon_command:
 213              	.LFB359:
 324:Core/Src/main.c **** void lon_command(){
 214              		.loc 1 324 19 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 08B5     		push	{r3, lr}
 219              	.LCFI4:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 3, -8
 222              		.cfi_offset 14, -4
 325:Core/Src/main.c ****   if(led_on == 0){
 223              		.loc 1 325 3 view .LVU41
 224              		.loc 1 325 13 is_stmt 0 view .LVU42
 225 0002 094B     		ldr	r3, .L13
 226 0004 1B68     		ldr	r3, [r3]
 227              		.loc 1 325 5 view .LVU43
 228 0006 53B9     		cbnz	r3, .L10
 326:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 229              		.loc 1 326 5 is_stmt 1 view .LVU44
 230 0008 0821     		movs	r1, #8
 231 000a 0848     		ldr	r0, .L13+4
 232 000c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 233              	.LVL8:
 327:Core/Src/main.c ****     led_on = 1;
 234              		.loc 1 327 5 view .LVU45
 235              		.loc 1 327 12 is_stmt 0 view .LVU46
 236 0010 054B     		ldr	r3, .L13
 237 0012 0122     		movs	r2, #1
 238 0014 1A60     		str	r2, [r3]
 328:Core/Src/main.c ****     printf("\r\nLED ON\n\r");
 239              		.loc 1 328 5 is_stmt 1 view .LVU47
 240 0016 0648     		ldr	r0, .L13+8
 241 0018 FFF7FEFF 		bl	printf
 242              	.LVL9:
 243              	.L9:
 329:Core/Src/main.c ****   }else{
 330:Core/Src/main.c ****     printf("\r\nLED ALREADY ON\n\r");
 331:Core/Src/main.c ****   }
 332:Core/Src/main.c **** 		
 333:Core/Src/main.c **** }
 244              		.loc 1 333 1 is_stmt 0 view .LVU48
 245 001c 08BD     		pop	{r3, pc}
 246              	.L10:
 330:Core/Src/main.c ****   }
 247              		.loc 1 330 5 is_stmt 1 view .LVU49
 248 001e 0548     		ldr	r0, .L13+12
 249 0020 FFF7FEFF 		bl	printf
 250              	.LVL10:
 251              		.loc 1 333 1 is_stmt 0 view .LVU50
 252 0024 FAE7     		b	.L9
 253              	.L14:
ARM GAS  /tmp/ccVvGxMz.s 			page 12


 254 0026 00BF     		.align	2
 255              	.L13:
 256 0028 00000000 		.word	.LANCHOR0
 257 002c 00040048 		.word	1207960576
 258 0030 00000000 		.word	.LC4
 259 0034 0C000000 		.word	.LC5
 260              		.cfi_endproc
 261              	.LFE359:
 263              		.section	.rodata.lof_command.str1.4,"aMS",%progbits,1
 264              		.align	2
 265              	.LC6:
 266 0000 0D0A4C45 		.ascii	"\015\012LED OFF\012\015\000"
 266      44204F46 
 266      460A0D00 
 267              		.align	2
 268              	.LC7:
 269 000c 0D0A4C45 		.ascii	"\015\012LED ALREADY OFF\012\015\000"
 269      4420414C 
 269      52454144 
 269      59204F46 
 269      460A0D00 
 270              		.section	.text.lof_command,"ax",%progbits
 271              		.align	1
 272              		.global	lof_command
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 277              	lof_command:
 278              	.LFB360:
 334:Core/Src/main.c **** void lof_command(){
 279              		.loc 1 334 19 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 08B5     		push	{r3, lr}
 284              	.LCFI5:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 3, -8
 287              		.cfi_offset 14, -4
 335:Core/Src/main.c ****   if(led_on == 1){
 288              		.loc 1 335 3 view .LVU52
 289              		.loc 1 335 13 is_stmt 0 view .LVU53
 290 0002 094B     		ldr	r3, .L20
 291 0004 1B68     		ldr	r3, [r3]
 292              		.loc 1 335 5 view .LVU54
 293 0006 012B     		cmp	r3, #1
 294 0008 03D0     		beq	.L19
 336:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 337:Core/Src/main.c ****     led_on = 0;
 338:Core/Src/main.c ****     printf("\r\nLED OFF\n\r");
 339:Core/Src/main.c ****   }else{
 340:Core/Src/main.c ****     printf("\r\nLED ALREADY OFF\n\r");
 295              		.loc 1 340 5 is_stmt 1 view .LVU55
 296 000a 0848     		ldr	r0, .L20+4
 297 000c FFF7FEFF 		bl	printf
 298              	.LVL11:
 299              	.L15:
ARM GAS  /tmp/ccVvGxMz.s 			page 13


 341:Core/Src/main.c ****   }
 342:Core/Src/main.c ****   
 343:Core/Src/main.c **** }
 300              		.loc 1 343 1 is_stmt 0 view .LVU56
 301 0010 08BD     		pop	{r3, pc}
 302              	.L19:
 336:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 303              		.loc 1 336 5 is_stmt 1 view .LVU57
 304 0012 0821     		movs	r1, #8
 305 0014 0648     		ldr	r0, .L20+8
 306 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 307              	.LVL12:
 337:Core/Src/main.c ****     printf("\r\nLED OFF\n\r");
 308              		.loc 1 337 5 view .LVU58
 337:Core/Src/main.c ****     printf("\r\nLED OFF\n\r");
 309              		.loc 1 337 12 is_stmt 0 view .LVU59
 310 001a 034B     		ldr	r3, .L20
 311 001c 0022     		movs	r2, #0
 312 001e 1A60     		str	r2, [r3]
 338:Core/Src/main.c ****   }else{
 313              		.loc 1 338 5 is_stmt 1 view .LVU60
 314 0020 0448     		ldr	r0, .L20+12
 315 0022 FFF7FEFF 		bl	printf
 316              	.LVL13:
 317 0026 F3E7     		b	.L15
 318              	.L21:
 319              		.align	2
 320              	.L20:
 321 0028 00000000 		.word	.LANCHOR0
 322 002c 0C000000 		.word	.LC7
 323 0030 00040048 		.word	1207960576
 324 0034 00000000 		.word	.LC6
 325              		.cfi_endproc
 326              	.LFE360:
 328              		.section	.rodata.test_command.str1.4,"aMS",%progbits,1
 329              		.align	2
 330              	.LC8:
 331 0000 0D0A7465 		.ascii	"\015\012test\012\015\000"
 331      73740A0D 
 331      00
 332 0009 000000   		.align	2
 333              	.LC9:
 334 000c 0D00     		.ascii	"\015\000"
 335              		.section	.text.test_command,"ax",%progbits
 336              		.align	1
 337              		.global	test_command
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	test_command:
 343              	.LVL14:
 344              	.LFB361:
 344:Core/Src/main.c **** void test_command(char *args){
 345              		.loc 1 344 30 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccVvGxMz.s 			page 14


 349              		.loc 1 344 30 is_stmt 0 view .LVU62
 350 0000 10B5     		push	{r4, lr}
 351              	.LCFI6:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 4, -8
 354              		.cfi_offset 14, -4
 355 0002 0446     		mov	r4, r0
 345:Core/Src/main.c ****   printf("\r\ntest\n\r");
 356              		.loc 1 345 3 is_stmt 1 view .LVU63
 357 0004 0748     		ldr	r0, .L29
 358              	.LVL15:
 359              		.loc 1 345 3 is_stmt 0 view .LVU64
 360 0006 FFF7FEFF 		bl	printf
 361              	.LVL16:
 346:Core/Src/main.c ****   while(*args!='\0'){
 362              		.loc 1 346 3 is_stmt 1 view .LVU65
 363              		.loc 1 346 8 is_stmt 0 view .LVU66
 364 000a 03E0     		b	.L23
 365              	.L24:
 347:Core/Src/main.c ****     if(*args!=','){
 348:Core/Src/main.c ****       putchar(*args);
 349:Core/Src/main.c ****     }else{
 350:Core/Src/main.c ****       printf("\r\n");
 366              		.loc 1 350 7 is_stmt 1 view .LVU67
 367 000c 0648     		ldr	r0, .L29+4
 368 000e FFF7FEFF 		bl	puts
 369              	.LVL17:
 370              	.L25:
 351:Core/Src/main.c ****     }
 352:Core/Src/main.c ****     args++;
 371              		.loc 1 352 5 view .LVU68
 372              		.loc 1 352 9 is_stmt 0 view .LVU69
 373 0012 0134     		adds	r4, r4, #1
 374              	.LVL18:
 375              	.L23:
 346:Core/Src/main.c ****     if(*args!=','){
 376              		.loc 1 346 8 is_stmt 1 view .LVU70
 346:Core/Src/main.c ****     if(*args!=','){
 377              		.loc 1 346 9 is_stmt 0 view .LVU71
 378 0014 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 346:Core/Src/main.c ****     if(*args!=','){
 379              		.loc 1 346 8 view .LVU72
 380 0016 20B1     		cbz	r0, .L28
 347:Core/Src/main.c ****     if(*args!=','){
 381              		.loc 1 347 5 is_stmt 1 view .LVU73
 347:Core/Src/main.c ****     if(*args!=','){
 382              		.loc 1 347 7 is_stmt 0 view .LVU74
 383 0018 2C28     		cmp	r0, #44
 384 001a F7D0     		beq	.L24
 348:Core/Src/main.c ****     }else{
 385              		.loc 1 348 7 is_stmt 1 view .LVU75
 386 001c FFF7FEFF 		bl	putchar
 387              	.LVL19:
 388 0020 F7E7     		b	.L25
 389              	.L28:
 353:Core/Src/main.c ****   }
 354:Core/Src/main.c **** }
ARM GAS  /tmp/ccVvGxMz.s 			page 15


 390              		.loc 1 354 1 is_stmt 0 view .LVU76
 391 0022 10BD     		pop	{r4, pc}
 392              	.LVL20:
 393              	.L30:
 394              		.loc 1 354 1 view .LVU77
 395              		.align	2
 396              	.L29:
 397 0024 00000000 		.word	.LC8
 398 0028 0C000000 		.word	.LC9
 399              		.cfi_endproc
 400              	.LFE361:
 402              		.section	.text.parse_command,"ax",%progbits
 403              		.align	1
 404              		.global	parse_command
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	parse_command:
 410              	.LVL21:
 411              	.LFB357:
 297:Core/Src/main.c **** 
 412              		.loc 1 297 69 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 299:Core/Src/main.c ****   if((!line) || (!command) || (!args)){ //check for bad pointer
 417              		.loc 1 299 3 view .LVU79
 300:Core/Src/main.c ****     return(-1); 
 418              		.loc 1 300 3 view .LVU80
 300:Core/Src/main.c ****     return(-1); 
 419              		.loc 1 300 5 is_stmt 0 view .LVU81
 420 0000 0346     		mov	r3, r0
 421 0002 88B1     		cbz	r0, .L36
 300:Core/Src/main.c ****     return(-1); 
 422              		.loc 1 300 14 discriminator 1 view .LVU82
 423 0004 99B1     		cbz	r1, .L37
 300:Core/Src/main.c ****     return(-1); 
 424              		.loc 1 300 28 discriminator 2 view .LVU83
 425 0006 AAB1     		cbz	r2, .L38
 303:Core/Src/main.c ****   *command = line;
 426              		.loc 1 303 3 is_stmt 1 view .LVU84
 427              	.LVL22:
 304:Core/Src/main.c ****   //strcpy(line_left, line);
 428              		.loc 1 304 3 view .LVU85
 304:Core/Src/main.c ****   //strcpy(line_left, line);
 429              		.loc 1 304 12 is_stmt 0 view .LVU86
 430 0008 0860     		str	r0, [r1]
 306:Core/Src/main.c ****     if(!*line_temp){
 431              		.loc 1 306 3 is_stmt 1 view .LVU87
 306:Core/Src/main.c ****     if(!*line_temp){
 432              		.loc 1 306 8 is_stmt 0 view .LVU88
 433 000a 00E0     		b	.L33
 434              	.LVL23:
 435              	.L34:
 311:Core/Src/main.c ****   }
 436              		.loc 1 311 5 is_stmt 1 view .LVU89
ARM GAS  /tmp/ccVvGxMz.s 			page 16


 311:Core/Src/main.c ****   }
 437              		.loc 1 311 14 is_stmt 0 view .LVU90
 438 000c 0133     		adds	r3, r3, #1
 439              	.LVL24:
 440              	.L33:
 306:Core/Src/main.c ****     if(!*line_temp){
 441              		.loc 1 306 8 is_stmt 1 view .LVU91
 306:Core/Src/main.c ****     if(!*line_temp){
 442              		.loc 1 306 9 is_stmt 0 view .LVU92
 443 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 306:Core/Src/main.c ****     if(!*line_temp){
 444              		.loc 1 306 8 view .LVU93
 445 0010 2C29     		cmp	r1, #44
 446 0012 04D0     		beq	.L39
 307:Core/Src/main.c ****       *args = '\0'; //no arguments
 447              		.loc 1 307 5 is_stmt 1 view .LVU94
 307:Core/Src/main.c ****       *args = '\0'; //no arguments
 448              		.loc 1 307 7 is_stmt 0 view .LVU95
 449 0014 0029     		cmp	r1, #0
 450 0016 F9D1     		bne	.L34
 308:Core/Src/main.c ****       return(0);
 451              		.loc 1 308 7 is_stmt 1 view .LVU96
 308:Core/Src/main.c ****       return(0);
 452              		.loc 1 308 13 is_stmt 0 view .LVU97
 453 0018 0020     		movs	r0, #0
 454              	.LVL25:
 308:Core/Src/main.c ****       return(0);
 455              		.loc 1 308 13 view .LVU98
 456 001a 1060     		str	r0, [r2]
 457              	.LVL26:
 309:Core/Src/main.c ****     }
 458              		.loc 1 309 7 is_stmt 1 view .LVU99
 309:Core/Src/main.c ****     }
 459              		.loc 1 309 13 is_stmt 0 view .LVU100
 460 001c 7047     		bx	lr
 461              	.LVL27:
 462              	.L39:
 314:Core/Src/main.c ****   *args = line_temp +1; //one char past null is beginning of arguments
 463              		.loc 1 314 3 is_stmt 1 view .LVU101
 314:Core/Src/main.c ****   *args = line_temp +1; //one char past null is beginning of arguments
 464              		.loc 1 314 14 is_stmt 0 view .LVU102
 465 001e 0020     		movs	r0, #0
 466              	.LVL28:
 314:Core/Src/main.c ****   *args = line_temp +1; //one char past null is beginning of arguments
 467              		.loc 1 314 14 view .LVU103
 468 0020 03F8010B 		strb	r0, [r3], #1
 469              	.LVL29:
 315:Core/Src/main.c ****   return 0;
 470              		.loc 1 315 3 is_stmt 1 view .LVU104
 315:Core/Src/main.c ****   return 0;
 471              		.loc 1 315 9 is_stmt 0 view .LVU105
 472 0024 1360     		str	r3, [r2]
 316:Core/Src/main.c **** }
 473              		.loc 1 316 3 is_stmt 1 view .LVU106
 316:Core/Src/main.c **** }
 474              		.loc 1 316 10 is_stmt 0 view .LVU107
 475 0026 7047     		bx	lr
ARM GAS  /tmp/ccVvGxMz.s 			page 17


 476              	.LVL30:
 477              	.L36:
 301:Core/Src/main.c ****   }
 478              		.loc 1 301 11 view .LVU108
 479 0028 4FF0FF30 		mov	r0, #-1
 480              	.LVL31:
 301:Core/Src/main.c ****   }
 481              		.loc 1 301 11 view .LVU109
 482 002c 7047     		bx	lr
 483              	.LVL32:
 484              	.L37:
 301:Core/Src/main.c ****   }
 485              		.loc 1 301 11 view .LVU110
 486 002e 4FF0FF30 		mov	r0, #-1
 487              	.LVL33:
 301:Core/Src/main.c ****   }
 488              		.loc 1 301 11 view .LVU111
 489 0032 7047     		bx	lr
 490              	.LVL34:
 491              	.L38:
 301:Core/Src/main.c ****   }
 492              		.loc 1 301 11 view .LVU112
 493 0034 4FF0FF30 		mov	r0, #-1
 494              	.LVL35:
 317:Core/Src/main.c **** void help_command(char *args){
 495              		.loc 1 317 1 view .LVU113
 496 0038 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE357:
 500              		.section	.rodata.execute_command.str1.4,"aMS",%progbits,1
 501              		.align	2
 502              	.LC10:
 503 0000 4572726F 		.ascii	"Error with parse command\012\015\000"
 503      72207769 
 503      74682070 
 503      61727365 
 503      20636F6D 
 504              		.section	.text.execute_command,"ax",%progbits
 505              		.align	1
 506              		.global	execute_command
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 511              	execute_command:
 512              	.LVL36:
 513              	.LFB356:
 266:Core/Src/main.c ****   uint8_t *cmd;
 514              		.loc 1 266 37 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 8
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 266:Core/Src/main.c ****   uint8_t *cmd;
 518              		.loc 1 266 37 is_stmt 0 view .LVU115
 519 0000 30B5     		push	{r4, r5, lr}
 520              	.LCFI7:
 521              		.cfi_def_cfa_offset 12
 522              		.cfi_offset 4, -12
ARM GAS  /tmp/ccVvGxMz.s 			page 18


 523              		.cfi_offset 5, -8
 524              		.cfi_offset 14, -4
 525 0002 83B0     		sub	sp, sp, #12
 526              	.LCFI8:
 527              		.cfi_def_cfa_offset 24
 267:Core/Src/main.c ****   uint8_t *arg;
 528              		.loc 1 267 3 is_stmt 1 view .LVU116
 268:Core/Src/main.c ****   command_t *p = commands;
 529              		.loc 1 268 3 view .LVU117
 269:Core/Src/main.c ****   int success = 0;
 530              		.loc 1 269 3 view .LVU118
 531              	.LVL37:
 270:Core/Src/main.c **** 
 532              		.loc 1 270 3 view .LVU119
 272:Core/Src/main.c ****     return (-1); // Passed a bad pointer 
 533              		.loc 1 272 3 view .LVU120
 272:Core/Src/main.c ****     return (-1); // Passed a bad pointer 
 534              		.loc 1 272 6 is_stmt 0 view .LVU121
 535 0004 F8B1     		cbz	r0, .L45
 275:Core/Src/main.c ****     printf("Error with parse command\n\r");
 536              		.loc 1 275 3 is_stmt 1 view .LVU122
 275:Core/Src/main.c ****     printf("Error with parse command\n\r");
 537              		.loc 1 275 7 is_stmt 0 view .LVU123
 538 0006 6A46     		mov	r2, sp
 539 0008 01A9     		add	r1, sp, #4
 540 000a FFF7FEFF 		bl	parse_command
 541              	.LVL38:
 275:Core/Src/main.c ****     printf("Error with parse command\n\r");
 542              		.loc 1 275 7 view .LVU124
 543 000e 0546     		mov	r5, r0
 275:Core/Src/main.c ****     printf("Error with parse command\n\r");
 544              		.loc 1 275 6 view .LVU125
 545 0010 B0F1FF3F 		cmp	r0, #-1
 546 0014 09D0     		beq	.L49
 269:Core/Src/main.c ****   int success = 0;
 547              		.loc 1 269 14 view .LVU126
 548 0016 0F4C     		ldr	r4, .L52
 549              	.LVL39:
 550              	.L42:
 279:Core/Src/main.c ****     if (!strcmp(p->cmd_string,(char *) cmd)) {
 551              		.loc 1 279 9 is_stmt 1 view .LVU127
 279:Core/Src/main.c ****     if (!strcmp(p->cmd_string,(char *) cmd)) {
 552              		.loc 1 279 11 is_stmt 0 view .LVU128
 553 0018 2068     		ldr	r0, [r4]
 279:Core/Src/main.c ****     if (!strcmp(p->cmd_string,(char *) cmd)) {
 554              		.loc 1 279 9 view .LVU129
 555 001a 78B1     		cbz	r0, .L50
 280:Core/Src/main.c ****       if (!p->cmd_function) {
 556              		.loc 1 280 5 is_stmt 1 view .LVU130
 280:Core/Src/main.c ****       if (!p->cmd_function) {
 557              		.loc 1 280 10 is_stmt 0 view .LVU131
 558 001c 0199     		ldr	r1, [sp, #4]
 559 001e FFF7FEFF 		bl	strcmp
 560              	.LVL40:
 280:Core/Src/main.c ****       if (!p->cmd_function) {
 561              		.loc 1 280 8 view .LVU132
 562 0022 0546     		mov	r5, r0
ARM GAS  /tmp/ccVvGxMz.s 			page 19


 563 0024 28B1     		cbz	r0, .L51
 288:Core/Src/main.c ****   }
 564              		.loc 1 288 5 is_stmt 1 view .LVU133
 288:Core/Src/main.c ****   }
 565              		.loc 1 288 6 is_stmt 0 view .LVU134
 566 0026 0834     		adds	r4, r4, #8
 567              	.LVL41:
 288:Core/Src/main.c ****   }
 568              		.loc 1 288 6 view .LVU135
 569 0028 F6E7     		b	.L42
 570              	.LVL42:
 571              	.L49:
 276:Core/Src/main.c ****     return (-1);
 572              		.loc 1 276 5 is_stmt 1 view .LVU136
 573 002a 0B48     		ldr	r0, .L52+4
 574 002c FFF7FEFF 		bl	printf
 575              	.LVL43:
 277:Core/Src/main.c ****   }
 576              		.loc 1 277 5 view .LVU137
 277:Core/Src/main.c ****   }
 577              		.loc 1 277 12 is_stmt 0 view .LVU138
 578 0030 06E0     		b	.L40
 579              	.LVL44:
 580              	.L51:
 281:Core/Src/main.c ****         return (-1);
 581              		.loc 1 281 7 is_stmt 1 view .LVU139
 281:Core/Src/main.c ****         return (-1);
 582              		.loc 1 281 13 is_stmt 0 view .LVU140
 583 0032 6368     		ldr	r3, [r4, #4]
 281:Core/Src/main.c ****         return (-1);
 584              		.loc 1 281 10 view .LVU141
 585 0034 53B1     		cbz	r3, .L47
 284:Core/Src/main.c ****       success = 1;
 586              		.loc 1 284 7 is_stmt 1 view .LVU142
 284:Core/Src/main.c ****       success = 1;
 587              		.loc 1 284 8 is_stmt 0 view .LVU143
 588 0036 0098     		ldr	r0, [sp]
 589 0038 9847     		blx	r3
 590              	.LVL45:
 285:Core/Src/main.c ****       break;
 591              		.loc 1 285 7 is_stmt 1 view .LVU144
 286:Core/Src/main.c ****     }
 592              		.loc 1 286 7 view .LVU145
 290:Core/Src/main.c ****     return (0);
 593              		.loc 1 290 3 view .LVU146
 291:Core/Src/main.c ****   }
 594              		.loc 1 291 5 view .LVU147
 291:Core/Src/main.c ****   }
 595              		.loc 1 291 12 is_stmt 0 view .LVU148
 596 003a 01E0     		b	.L40
 597              	.LVL46:
 598              	.L50:
 294:Core/Src/main.c ****   }
 599              		.loc 1 294 12 view .LVU149
 600 003c 4FF0FF35 		mov	r5, #-1
 601              	.LVL47:
 602              	.L40:
ARM GAS  /tmp/ccVvGxMz.s 			page 20


 296:Core/Src/main.c **** int parse_command (uint8_t *line, uint8_t **command, uint8_t **args){
 603              		.loc 1 296 3 view .LVU150
 604 0040 2846     		mov	r0, r5
 605 0042 03B0     		add	sp, sp, #12
 606              	.LCFI9:
 607              		.cfi_remember_state
 608              		.cfi_def_cfa_offset 12
 609              		@ sp needed
 610 0044 30BD     		pop	{r4, r5, pc}
 611              	.LVL48:
 612              	.L45:
 613              	.LCFI10:
 614              		.cfi_restore_state
 273:Core/Src/main.c ****   }
 615              		.loc 1 273 12 view .LVU151
 616 0046 4FF0FF35 		mov	r5, #-1
 617 004a F9E7     		b	.L40
 618              	.LVL49:
 619              	.L47:
 282:Core/Src/main.c ****       }
 620              		.loc 1 282 16 view .LVU152
 621 004c 4FF0FF35 		mov	r5, #-1
 622              	.LVL50:
 282:Core/Src/main.c ****       }
 623              		.loc 1 282 16 view .LVU153
 624 0050 F6E7     		b	.L40
 625              	.L53:
 626 0052 00BF     		.align	2
 627              	.L52:
 628 0054 00000000 		.word	.LANCHOR1
 629 0058 00000000 		.word	.LC10
 630              		.cfi_endproc
 631              	.LFE356:
 633              		.section	.text.Error_Handler,"ax",%progbits
 634              		.align	1
 635              		.global	Error_Handler
 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 640              	Error_Handler:
 641              	.LFB362:
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** /* USER CODE END 4 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** /**
 359:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 360:Core/Src/main.c ****   * @retval None
 361:Core/Src/main.c ****   */
 362:Core/Src/main.c **** void Error_Handler(void)
 363:Core/Src/main.c **** {
 642              		.loc 1 363 1 is_stmt 1 view -0
 643              		.cfi_startproc
 644              		@ Volatile: function does not return.
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 364:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /tmp/ccVvGxMz.s 			page 21


 365:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 366:Core/Src/main.c ****   __disable_irq();
 648              		.loc 1 366 3 view .LVU155
 649              	.LBB19:
 650              	.LBI19:
 651              		.file 2 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_g
   1:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /tmp/ccVvGxMz.s 			page 22


  52:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/ccVvGxMz.s 			page 23


 109:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  /tmp/ccVvGxMz.s 			page 24


 166:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 652              		.loc 2 207 27 view .LVU156
 653              	.LBB20:
 208:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 654              		.loc 2 209 3 view .LVU157
 655              		.syntax unified
 656              	@ 209 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.
 657 0000 72B6     		cpsid i
 658              	@ 0 "" 2
 659              		.thumb
 660              		.syntax unified
 661              	.L55:
 662              	.LBE20:
 663              	.LBE19:
 367:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccVvGxMz.s 			page 25


 664              		.loc 1 367 3 discriminator 1 view .LVU158
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****   }
 665              		.loc 1 369 3 discriminator 1 view .LVU159
 367:Core/Src/main.c ****   while (1)
 666              		.loc 1 367 9 discriminator 1 view .LVU160
 667 0002 FEE7     		b	.L55
 668              		.cfi_endproc
 669              	.LFE362:
 671              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 672              		.align	1
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 677              	MX_USART2_UART_Init:
 678              	.LFB354:
 211:Core/Src/main.c **** 
 679              		.loc 1 211 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683 0000 08B5     		push	{r3, lr}
 684              	.LCFI11:
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 3, -8
 687              		.cfi_offset 14, -4
 220:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 688              		.loc 1 220 3 view .LVU162
 220:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 689              		.loc 1 220 19 is_stmt 0 view .LVU163
 690 0002 0B48     		ldr	r0, .L60
 691 0004 0B4B     		ldr	r3, .L60+4
 692 0006 0360     		str	r3, [r0]
 221:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 693              		.loc 1 221 3 is_stmt 1 view .LVU164
 221:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 694              		.loc 1 221 24 is_stmt 0 view .LVU165
 695 0008 4FF41653 		mov	r3, #9600
 696 000c 4360     		str	r3, [r0, #4]
 222:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 697              		.loc 1 222 3 is_stmt 1 view .LVU166
 222:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 698              		.loc 1 222 26 is_stmt 0 view .LVU167
 699 000e 0023     		movs	r3, #0
 700 0010 8360     		str	r3, [r0, #8]
 223:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 701              		.loc 1 223 3 is_stmt 1 view .LVU168
 223:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 702              		.loc 1 223 24 is_stmt 0 view .LVU169
 703 0012 C360     		str	r3, [r0, #12]
 224:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 704              		.loc 1 224 3 is_stmt 1 view .LVU170
 224:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 705              		.loc 1 224 22 is_stmt 0 view .LVU171
 706 0014 0361     		str	r3, [r0, #16]
 225:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 707              		.loc 1 225 3 is_stmt 1 view .LVU172
ARM GAS  /tmp/ccVvGxMz.s 			page 26


 225:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 708              		.loc 1 225 20 is_stmt 0 view .LVU173
 709 0016 0C22     		movs	r2, #12
 710 0018 4261     		str	r2, [r0, #20]
 226:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 711              		.loc 1 226 3 is_stmt 1 view .LVU174
 226:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 712              		.loc 1 226 25 is_stmt 0 view .LVU175
 713 001a 8361     		str	r3, [r0, #24]
 227:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 714              		.loc 1 227 3 is_stmt 1 view .LVU176
 227:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 715              		.loc 1 227 28 is_stmt 0 view .LVU177
 716 001c C361     		str	r3, [r0, #28]
 228:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 717              		.loc 1 228 3 is_stmt 1 view .LVU178
 228:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 718              		.loc 1 228 30 is_stmt 0 view .LVU179
 719 001e 0362     		str	r3, [r0, #32]
 229:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 720              		.loc 1 229 3 is_stmt 1 view .LVU180
 229:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 721              		.loc 1 229 38 is_stmt 0 view .LVU181
 722 0020 4362     		str	r3, [r0, #36]
 230:Core/Src/main.c ****   {
 723              		.loc 1 230 3 is_stmt 1 view .LVU182
 230:Core/Src/main.c ****   {
 724              		.loc 1 230 7 is_stmt 0 view .LVU183
 725 0022 FFF7FEFF 		bl	HAL_UART_Init
 726              	.LVL51:
 230:Core/Src/main.c ****   {
 727              		.loc 1 230 6 view .LVU184
 728 0026 00B9     		cbnz	r0, .L59
 237:Core/Src/main.c **** 
 729              		.loc 1 237 1 view .LVU185
 730 0028 08BD     		pop	{r3, pc}
 731              	.L59:
 232:Core/Src/main.c ****   }
 732              		.loc 1 232 5 is_stmt 1 view .LVU186
 733 002a FFF7FEFF 		bl	Error_Handler
 734              	.LVL52:
 735              	.L61:
 736 002e 00BF     		.align	2
 737              	.L60:
 738 0030 00000000 		.word	.LANCHOR2
 739 0034 00440040 		.word	1073759232
 740              		.cfi_endproc
 741              	.LFE354:
 743              		.section	.text.SystemClock_Config,"ax",%progbits
 744              		.align	1
 745              		.global	SystemClock_Config
 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
 750              	SystemClock_Config:
 751              	.LFB353:
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccVvGxMz.s 			page 27


 752              		.loc 1 160 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 88
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756 0000 00B5     		push	{lr}
 757              	.LCFI12:
 758              		.cfi_def_cfa_offset 4
 759              		.cfi_offset 14, -4
 760 0002 97B0     		sub	sp, sp, #92
 761              	.LCFI13:
 762              		.cfi_def_cfa_offset 96
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 763              		.loc 1 161 3 view .LVU188
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 764              		.loc 1 161 22 is_stmt 0 view .LVU189
 765 0004 4422     		movs	r2, #68
 766 0006 0021     		movs	r1, #0
 767 0008 05A8     		add	r0, sp, #20
 768 000a FFF7FEFF 		bl	memset
 769              	.LVL53:
 162:Core/Src/main.c **** 
 770              		.loc 1 162 3 is_stmt 1 view .LVU190
 162:Core/Src/main.c **** 
 771              		.loc 1 162 22 is_stmt 0 view .LVU191
 772 000e 0023     		movs	r3, #0
 773 0010 0093     		str	r3, [sp]
 774 0012 0193     		str	r3, [sp, #4]
 775 0014 0293     		str	r3, [sp, #8]
 776 0016 0393     		str	r3, [sp, #12]
 777 0018 0493     		str	r3, [sp, #16]
 166:Core/Src/main.c ****   {
 778              		.loc 1 166 3 is_stmt 1 view .LVU192
 166:Core/Src/main.c ****   {
 779              		.loc 1 166 7 is_stmt 0 view .LVU193
 780 001a 4FF40070 		mov	r0, #512
 781 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 782              	.LVL54:
 166:Core/Src/main.c ****   {
 783              		.loc 1 166 6 view .LVU194
 784 0022 38BB     		cbnz	r0, .L67
 172:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 785              		.loc 1 172 3 is_stmt 1 view .LVU195
 786 0024 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 787              	.LVL55:
 173:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 788              		.loc 1 173 3 view .LVU196
 789 0028 154A     		ldr	r2, .L70
 790 002a D2F89030 		ldr	r3, [r2, #144]
 791 002e 23F01803 		bic	r3, r3, #24
 792 0032 C2F89030 		str	r3, [r2, #144]
 177:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 793              		.loc 1 177 3 view .LVU197
 177:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 794              		.loc 1 177 36 is_stmt 0 view .LVU198
 795 0036 1423     		movs	r3, #20
 796 0038 0593     		str	r3, [sp, #20]
 178:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
ARM GAS  /tmp/ccVvGxMz.s 			page 28


 797              		.loc 1 178 3 is_stmt 1 view .LVU199
 178:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 798              		.loc 1 178 30 is_stmt 0 view .LVU200
 799 003a 0123     		movs	r3, #1
 800 003c 0793     		str	r3, [sp, #28]
 179:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 801              		.loc 1 179 3 is_stmt 1 view .LVU201
 179:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 802              		.loc 1 179 30 is_stmt 0 view .LVU202
 803 003e 0C93     		str	r3, [sp, #48]
 180:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_10;
 804              		.loc 1 180 3 is_stmt 1 view .LVU203
 180:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_10;
 805              		.loc 1 180 41 is_stmt 0 view .LVU204
 806 0040 0023     		movs	r3, #0
 807 0042 0D93     		str	r3, [sp, #52]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 808              		.loc 1 181 3 is_stmt 1 view .LVU205
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 809              		.loc 1 181 35 is_stmt 0 view .LVU206
 810 0044 A022     		movs	r2, #160
 811 0046 0E92     		str	r2, [sp, #56]
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 812              		.loc 1 182 3 is_stmt 1 view .LVU207
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 813              		.loc 1 182 34 is_stmt 0 view .LVU208
 814 0048 1093     		str	r3, [sp, #64]
 183:Core/Src/main.c ****   {
 815              		.loc 1 183 3 is_stmt 1 view .LVU209
 183:Core/Src/main.c ****   {
 816              		.loc 1 183 7 is_stmt 0 view .LVU210
 817 004a 05A8     		add	r0, sp, #20
 818 004c FFF7FEFF 		bl	HAL_RCC_OscConfig
 819              	.LVL56:
 183:Core/Src/main.c ****   {
 820              		.loc 1 183 6 view .LVU211
 821 0050 90B9     		cbnz	r0, .L68
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 822              		.loc 1 189 3 is_stmt 1 view .LVU212
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 823              		.loc 1 189 31 is_stmt 0 view .LVU213
 824 0052 0F23     		movs	r3, #15
 825 0054 0093     		str	r3, [sp]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 826              		.loc 1 191 3 is_stmt 1 view .LVU214
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 827              		.loc 1 191 34 is_stmt 0 view .LVU215
 828 0056 0023     		movs	r3, #0
 829 0058 0193     		str	r3, [sp, #4]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 830              		.loc 1 192 3 is_stmt 1 view .LVU216
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 831              		.loc 1 192 35 is_stmt 0 view .LVU217
 832 005a 0293     		str	r3, [sp, #8]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 833              		.loc 1 193 3 is_stmt 1 view .LVU218
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccVvGxMz.s 			page 29


 834              		.loc 1 193 36 is_stmt 0 view .LVU219
 835 005c 0393     		str	r3, [sp, #12]
 194:Core/Src/main.c **** 
 836              		.loc 1 194 3 is_stmt 1 view .LVU220
 194:Core/Src/main.c **** 
 837              		.loc 1 194 36 is_stmt 0 view .LVU221
 838 005e 0493     		str	r3, [sp, #16]
 196:Core/Src/main.c ****   {
 839              		.loc 1 196 3 is_stmt 1 view .LVU222
 196:Core/Src/main.c ****   {
 840              		.loc 1 196 7 is_stmt 0 view .LVU223
 841 0060 0121     		movs	r1, #1
 842 0062 6846     		mov	r0, sp
 843 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 844              	.LVL57:
 196:Core/Src/main.c ****   {
 845              		.loc 1 196 6 view .LVU224
 846 0068 40B9     		cbnz	r0, .L69
 202:Core/Src/main.c **** }
 847              		.loc 1 202 3 is_stmt 1 view .LVU225
 848 006a FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 849              	.LVL58:
 203:Core/Src/main.c **** 
 850              		.loc 1 203 1 is_stmt 0 view .LVU226
 851 006e 17B0     		add	sp, sp, #92
 852              	.LCFI14:
 853              		.cfi_remember_state
 854              		.cfi_def_cfa_offset 4
 855              		@ sp needed
 856 0070 5DF804FB 		ldr	pc, [sp], #4
 857              	.L67:
 858              	.LCFI15:
 859              		.cfi_restore_state
 168:Core/Src/main.c ****   }
 860              		.loc 1 168 5 is_stmt 1 view .LVU227
 861 0074 FFF7FEFF 		bl	Error_Handler
 862              	.LVL59:
 863              	.L68:
 185:Core/Src/main.c ****   }
 864              		.loc 1 185 5 view .LVU228
 865 0078 FFF7FEFF 		bl	Error_Handler
 866              	.LVL60:
 867              	.L69:
 198:Core/Src/main.c ****   }
 868              		.loc 1 198 5 view .LVU229
 869 007c FFF7FEFF 		bl	Error_Handler
 870              	.LVL61:
 871              	.L71:
 872              		.align	2
 873              	.L70:
 874 0080 00100240 		.word	1073876992
 875              		.cfi_endproc
 876              	.LFE353:
 878              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 879              		.align	2
 880              	.LC11:
 881 0000 0D0A5379 		.ascii	"\015\012System Running\012\015\000"
ARM GAS  /tmp/ccVvGxMz.s 			page 30


 881      7374656D 
 881      2052756E 
 881      6E696E67 
 881      0A0D00
 882 0013 00       		.align	2
 883              	.LC12:
 884 0014 0D0A5354 		.ascii	"\015\012STM$\000"
 884      4D2400
 885 001b 00       		.align	2
 886              	.LC13:
 887 001c 0D0A4F4B 		.ascii	"\015\012OK\000"
 887      00
 888 0021 000000   		.align	2
 889              	.LC14:
 890 0024 0D0A4E4F 		.ascii	"\015\012NOK\000"
 890      4B00
 891              		.section	.text.main,"ax",%progbits
 892              		.align	1
 893              		.global	main
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 898              	main:
 899              	.LFB352:
  89:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 900              		.loc 1 89 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 32
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904 0000 30B5     		push	{r4, r5, lr}
 905              	.LCFI16:
 906              		.cfi_def_cfa_offset 12
 907              		.cfi_offset 4, -12
 908              		.cfi_offset 5, -8
 909              		.cfi_offset 14, -4
 910 0002 89B0     		sub	sp, sp, #36
 911              	.LCFI17:
 912              		.cfi_def_cfa_offset 48
  97:Core/Src/main.c **** 
 913              		.loc 1 97 3 view .LVU231
 914 0004 FFF7FEFF 		bl	HAL_Init
 915              	.LVL62:
 100:Core/Src/main.c ****   uint8_t ch;
 916              		.loc 1 100 3 view .LVU232
 101:Core/Src/main.c ****   int n = 0;
 917              		.loc 1 101 3 view .LVU233
 102:Core/Src/main.c ****   /* USER CODE END Init */
 918              		.loc 1 102 3 view .LVU234
 106:Core/Src/main.c **** 
 919              		.loc 1 106 3 view .LVU235
 920 0008 FFF7FEFF 		bl	SystemClock_Config
 921              	.LVL63:
 113:Core/Src/main.c ****   MX_USART2_UART_Init();
 922              		.loc 1 113 3 view .LVU236
 923 000c FFF7FEFF 		bl	MX_GPIO_Init
 924              	.LVL64:
 114:Core/Src/main.c ****  
ARM GAS  /tmp/ccVvGxMz.s 			page 31


 925              		.loc 1 114 3 view .LVU237
 926 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 927              	.LVL65:
 117:Core/Src/main.c ****   LL_USART_EnableIT_RXNE(USART2); 
 928              		.loc 1 117 3 view .LVU238
 929 0014 1E48     		ldr	r0, .L82
 930 0016 FFF7FEFF 		bl	RetargetInit
 931              	.LVL66:
 118:Core/Src/main.c ****   printf("\r\nSystem Running\n\r");
 932              		.loc 1 118 3 view .LVU239
 933              	.LBB21:
 934              	.LBI21:
 935              		.file 3 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/
   1:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
   2:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ******************************************************************************
   3:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @file    stm32l4xx_ll_usart.h
   4:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @author  MCD Application Team
   5:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ******************************************************************************
   7:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @attention
   8:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *
   9:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * All rights reserved.
  11:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *
  12:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * in the root directory of this software component.
  14:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *
  16:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ******************************************************************************
  17:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  18:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  19:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #ifndef STM32L4xx_LL_USART_H
  21:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define STM32L4xx_LL_USART_H
  22:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  23:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #ifdef __cplusplus
  24:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** extern "C" {
  25:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif
  26:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  27:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  28:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #include "stm32l4xx.h"
  29:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  30:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  32:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  33:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  34:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5)
  35:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  36:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL USART
  37:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  38:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  39:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  40:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  41:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  42:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
  43:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Variables USART Private Variables
  44:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
ARM GAS  /tmp/ccVvGxMz.s 			page 32


  45:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  46:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Array used to get the USART prescaler division decimal values versus @ref USART_LL_EC_PRESCALER 
  47:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** static const uint32_t USART_PRESCALER_TAB[] =
  48:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
  49:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   1UL,
  50:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   2UL,
  51:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   4UL,
  52:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   6UL,
  53:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   8UL,
  54:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   10UL,
  55:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   12UL,
  56:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   16UL,
  57:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   32UL,
  58:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   64UL,
  59:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   128UL,
  60:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   256UL
  61:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** };
  62:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
  63:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
  64:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  65:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
  66:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  67:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  68:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  69:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  70:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  71:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  72:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  73:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
  74:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
  75:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  76:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  77:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  78:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  79:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  80:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  81:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  82:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  83:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  84:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
  85:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  86:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  87:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** typedef struct
  88:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
  89:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
  90:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t PrescalerValue;            /*!< Specifies the Prescaler to compute the communication bau
  91:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PRESCA
  92:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  93:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  94:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetPrescaler().*/
  95:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
  96:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  97:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  98:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  99:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 100:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetBaudRate().*/
 101:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /tmp/ccVvGxMz.s 			page 33


 102:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
 103:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
 104:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 105:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 106:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetDataWidth().*/
 107:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 108:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
 109:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
 110:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 111:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 112:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetStopBitsLength().*/
 113:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 114:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 115:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
 116:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 117:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 118:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetParity().*/
 119:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 120:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 121:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
 122:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 123:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 124:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetTransferDirection().*/
 125:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 126:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 127:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 128:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 129:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 130:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetHWFlowCtrl().*/
 131:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 132:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 133:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 134:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 135:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 136:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetOverSampling().*/
 137:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 138:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** } LL_USART_InitTypeDef;
 139:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 140:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 141:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 142:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 143:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** typedef struct
 144:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 145:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 146:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 147:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 148:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 149:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 150:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 151:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 152:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 153:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 154:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 155:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 156:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPolarity().
 157:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 158:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /tmp/ccVvGxMz.s 			page 34


 159:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 160:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 161:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 162:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 163:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPhase().
 164:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 165:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 166:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 167:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 168:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 169:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 170:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 171:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            functions @ref LL_USART_SetLastClkPulseOutput().
 172:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 173:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 174:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 175:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 176:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 177:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 178:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 179:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 180:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 181:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 182:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 183:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 184:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 185:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 186:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 187:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 188:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 189:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 190:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error cle
 191:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error cl
 192:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_NECF                       USART_ICR_NECF                /*!< Noise error dete
 193:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error cl
 194:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 195:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 196:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_TXFECF                     USART_ICR_TXFECF              /*!< TX FIFO Empty cl
 197:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 198:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 199:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 200:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_TCBGTCF                    USART_ICR_TCBGTCF             /*!< Transmission com
 201:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 202:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 203:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS clear flag *
 204:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 205:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block cle
 206:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
 207:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_UDRCF                      USART_ICR_UDRCF               /*!< SPI Slave Underr
 208:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
 209:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 210:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 211:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 212:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 213:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 214:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 215:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
ARM GAS  /tmp/ccVvGxMz.s 			page 35


 216:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 217:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 218:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 219:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 220:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 221:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 222:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 223:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 224:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 225:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXNE_RXFNE                 USART_ISR_RXNE_RXFNE          /*!< Read data regist
 226:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 227:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXNE                       USART_ISR_RXNE                /*!< Read data regist
 228:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 229:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 230:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 231:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXE_TXFNF                  USART_ISR_TXE_TXFNF           /*!< Transmit data re
 232:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 233:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXE                        USART_ISR_TXE                 /*!< Transmit data re
 234:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 235:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 236:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 237:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 238:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 239:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 240:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
 241:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_UDR                        USART_ISR_UDR                 /*!< SPI Slave underr
 242:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
 243:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 244:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 245:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 246:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 247:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 248:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 249:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 250:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 251:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 252:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 253:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXFE                       USART_ISR_TXFE                /*!< TX FIFO empty fl
 254:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXFF                       USART_ISR_RXFF                /*!< RX FIFO full fla
 255:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 256:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 257:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TCBGT                      USART_ISR_TCBGT               /*!< Transmission com
 258:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 259:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 260:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXFT                       USART_ISR_RXFT                /*!< RX FIFO threshol
 261:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXFT                       USART_ISR_TXFT                /*!< TX FIFO threshol
 262:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 263:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 264:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 265:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 266:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 267:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 268:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 269:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 270:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 271:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 272:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
ARM GAS  /tmp/ccVvGxMz.s 			page 36


 273:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE_RXFNEIE             USART_CR1_RXNEIE_RXFNEIE      /*!< Read data regist
 274:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 275:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 276:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 277:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 278:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 279:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TXEIE_TXFNFIE              USART_CR1_TXEIE_TXFNFIE       /*!< Transmit data re
 280:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 281:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 282:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 283:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 284:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 285:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 286:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
 287:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 288:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TXFEIE                     USART_CR1_TXFEIE              /*!< TX FIFO empty in
 289:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RXFFIE                     USART_CR1_RXFFIE              /*!< RX FIFO full int
 290:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 291:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 292:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 293:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 294:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 295:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 296:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_TXFTIE                     USART_CR3_TXFTIE              /*!< TX FIFO threshol
 297:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 298:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 299:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_TCBGTIE                    USART_CR3_TCBGTIE             /*!< Transmission com
 300:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 301:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 302:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_RXFTIE                     USART_CR3_RXFTIE              /*!< RX FIFO threshol
 303:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 304:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 305:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 306:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 307:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 308:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 309:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_FIFOTHRESHOLD FIFO Threshold
 310:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 311:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 312:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_8              0x00000000U /*!< FIFO reaches 1/8 of its depth */
 313:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_4              0x00000001U /*!< FIFO reaches 1/4 of its depth */
 314:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_2              0x00000002U /*!< FIFO reaches 1/2 of its depth */
 315:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_3_4              0x00000003U /*!< FIFO reaches 3/4 of its depth */
 316:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_7_8              0x00000004U /*!< FIFO reaches 7/8 of its depth */
 317:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_8_8              0x00000005U /*!< FIFO becomes empty for TX and full
 318:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 319:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 320:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 321:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 322:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 323:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 324:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 325:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 326:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 327:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 328:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 329:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
ARM GAS  /tmp/ccVvGxMz.s 			page 37


 330:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 331:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 332:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 333:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 334:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 335:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 336:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 337:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 338:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 339:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 340:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 341:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 342:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 343:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 344:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 345:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 346:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 347:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 348:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 349:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 350:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 351:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 352:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 353:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 354:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 355:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 356:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 357:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 358:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 359:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 360:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 361:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 362:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 363:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 364:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 365:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 366:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 367:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 368:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 369:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 370:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 371:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 372:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 373:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 374:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 375:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 376:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 377:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 378:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 379:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 380:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 381:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 382:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 383:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 384:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 385:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 386:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /tmp/ccVvGxMz.s 			page 38


 387:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 388:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 389:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 390:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 391:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 392:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 393:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 394:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 395:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 396:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 397:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 398:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 399:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 400:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 401:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 402:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 403:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 404:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 405:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 406:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 407:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 408:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 409:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 410:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 411:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
 412:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PRESCALER Clock Source Prescaler
 413:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 414:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 415:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV1                 0x00000000U                                        
 416:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV2                 (USART_PRESC_PRESCALER_0)                          
 417:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV4                 (USART_PRESC_PRESCALER_1)                          
 418:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV6                 (USART_PRESC_PRESCALER_1 | USART_PRESC_PRESCALER_0)
 419:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV8                 (USART_PRESC_PRESCALER_2)                          
 420:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV10                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_0)
 421:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV12                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1)
 422:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV16                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1 
 423:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV32                (USART_PRESC_PRESCALER_3)                          
 424:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV64                (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_0)
 425:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV128               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1)
 426:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV256               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1 
 427:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 428:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 429:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 430:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 431:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
 432:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 433:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 434:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 435:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 436:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 437:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 438:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 439:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 440:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 441:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 442:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 443:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
ARM GAS  /tmp/ccVvGxMz.s 			page 39


 444:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 445:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 446:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
 447:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 448:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 449:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 450:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 451:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 452:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 453:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 454:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 455:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 456:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 457:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 458:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 459:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 460:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 461:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 462:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 463:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 464:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 465:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 466:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 467:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 468:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 469:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 470:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 471:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 472:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 473:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 474:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 475:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 476:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 477:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 478:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 479:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 480:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 481:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 482:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
 483:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 484:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 485:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 486:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 487:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 488:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 489:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 490:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 491:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 492:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 493:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 494:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 495:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 496:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 497:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 498:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 499:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 500:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
ARM GAS  /tmp/ccVvGxMz.s 			page 40


 501:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 502:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 503:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
 504:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 505:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 506:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 507:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 508:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 509:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 510:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 511:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 512:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 513:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 514:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 515:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 516:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 517:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 518:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 519:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 520:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 521:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 522:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 523:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 524:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 525:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 526:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 527:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 528:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 529:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 530:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 531:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 532:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 533:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 534:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 535:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 536:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 537:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 538:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 539:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 540:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 541:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 542:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 543:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 544:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 545:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 546:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 547:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 548:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 549:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 550:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 551:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 552:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 553:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 554:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 555:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 556:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 557:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
ARM GAS  /tmp/ccVvGxMz.s 			page 41


 558:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 559:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 560:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
 561:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 562:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 563:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 564:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 565:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 566:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 567:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 568:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 569:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 570:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 571:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 572:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 573:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 574:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 575:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 576:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 577:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 578:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 579:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Write a value in USART register
 580:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 581:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __REG__ Register to be written
 582:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 583:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 584:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 585:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 586:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 587:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 588:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Read a value in USART register
 589:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 590:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __REG__ Register to be read
 591:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Register value
 592:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 593:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 594:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 595:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 596:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 597:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 598:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 599:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 600:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 601:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 602:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 603:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 604:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 605:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 606:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
 607:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 608:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 609:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 610:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 611:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 612:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 613:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 614:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
ARM GAS  /tmp/ccVvGxMz.s 			page 42


 615:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 616:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
 617:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
 618:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 619:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 620:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
 621:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 622:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 623:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 624:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
 625:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) \
 626:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   (((((__PERIPHCLK__)/(USART_PRESCALER_TAB[(__PRESCALER__)]))*2U)\
 627:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     + ((__BAUDRATE__)/2U))/(__BAUDRATE__))
 628:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 629:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__) ((((__PERIPHCLK__)*2U)\
 630:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                                                 + ((__BAUDRATE__)/2U))/(__BAUDRATE_
 631:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
 632:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 633:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 634:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 635:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 636:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 637:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
 638:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 639:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 640:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 641:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 642:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 643:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 644:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 645:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
 646:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 647:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
 648:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
 649:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 650:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 651:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
 652:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 653:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 654:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 655:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
 656:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) \
 657:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ((((__PERIPHCLK__)/(USART_PRESCALER_TAB[(__PRESCALER__)]))\
 658:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     + ((__BAUDRATE__)/2U))/(__BAUDRATE__))
 659:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 660:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__) (((__PERIPHCLK__) + ((__BAUDRATE__)/
 661:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
 662:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 663:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 664:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 665:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 666:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 667:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 668:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 669:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 670:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 671:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
ARM GAS  /tmp/ccVvGxMz.s 			page 43


 672:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 673:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 674:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 675:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 676:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 677:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 678:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 679:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 680:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 681:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 682:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART Enable
 683:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 684:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 685:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 686:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 687:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 688:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 689:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 690:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 691:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 692:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 693:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 694:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 695:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 696:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 697:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 698:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 699:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 700:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 701:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 702:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 703:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 704:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 705:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 706:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 707:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 708:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 709:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 710:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 711:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 712:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 713:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 714:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 715:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 716:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 717:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 718:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 719:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  FIFO Mode Enable
 720:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 721:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 722:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_EnableFIFO
 723:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 724:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 725:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 726:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableFIFO(USART_TypeDef *USARTx)
 727:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 728:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_FIFOEN);
ARM GAS  /tmp/ccVvGxMz.s 			page 44


 729:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 730:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 731:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 732:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  FIFO Mode Disable
 733:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 734:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 735:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_DisableFIFO
 736:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 737:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 738:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 739:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableFIFO(USART_TypeDef *USARTx)
 740:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 741:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 742:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 743:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 744:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 745:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if FIFO Mode is enabled
 746:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 747:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 748:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_IsEnabledFIFO
 749:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 750:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 751:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 752:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledFIFO(USART_TypeDef *USARTx)
 753:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 754:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_FIFOEN) == (USART_CR1_FIFOEN)) ? 1UL : 0UL);
 755:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 756:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 757:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 758:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX FIFO Threshold
 759:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 760:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 761:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_SetTXFIFOThreshold
 762:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 763:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 764:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 765:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 766:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 767:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 768:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 769:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 770:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 771:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 772:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 773:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 774:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG, Threshold << USART_CR3_TXFTCFG_Pos);
 775:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 776:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 777:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 778:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return TX FIFO Threshold Configuration
 779:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 780:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 781:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_GetTXFIFOThreshold
 782:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 783:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 784:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 785:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
ARM GAS  /tmp/ccVvGxMz.s 			page 45


 786:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 787:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 788:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 789:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 790:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 791:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXFIFOThreshold(USART_TypeDef *USARTx)
 792:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 793:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 794:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 795:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 796:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 797:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure RX FIFO Threshold
 798:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 799:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 800:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_SetRXFIFOThreshold
 801:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 802:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 803:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 804:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 805:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 806:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 807:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 808:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 809:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 810:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 811:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 812:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 813:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_RXFTCFG, Threshold << USART_CR3_RXFTCFG_Pos);
 814:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 815:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 816:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 817:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return RX FIFO Threshold Configuration
 818:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 819:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 820:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_GetRXFIFOThreshold
 821:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 822:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 823:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 824:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 825:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 826:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 827:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 828:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 829:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 830:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXFIFOThreshold(USART_TypeDef *USARTx)
 831:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 832:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 833:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 834:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 835:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 836:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX and RX FIFOs Threshold
 837:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 838:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 839:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_ConfigFIFOsThreshold\n
 840:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          RXFTCFG       LL_USART_ConfigFIFOsThreshold
 841:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 842:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  TXThreshold This parameter can be one of the following values:
ARM GAS  /tmp/ccVvGxMz.s 			page 46


 843:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 844:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 845:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 846:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 847:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 848:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 849:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  RXThreshold This parameter can be one of the following values:
 850:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 851:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 852:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 853:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 854:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 855:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 856:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 857:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 858:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigFIFOsThreshold(USART_TypeDef *USARTx, uint32_t TXThreshold, uin
 859:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 860:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG | USART_CR3_RXFTCFG, (TXThreshold << USART_CR3_T
 861:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                     (RXThreshold << USART_CR3_RXFTCFG_Pos));
 862:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 863:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 864:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 865:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 866:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 867:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 868:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 869:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 870:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 871:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 872:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 873:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 874:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 875:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 876:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 877:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_UESM);
 878:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 879:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 880:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 881:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 882:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 883:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 884:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 885:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 886:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 887:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 888:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 889:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 890:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 891:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 892:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 893:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 894:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 895:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 896:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 897:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 898:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 899:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /tmp/ccVvGxMz.s 			page 47


 900:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 901:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 902:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 903:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 904:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 905:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 906:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 907:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR3_UCESM)
 908:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 909:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART Clock enabled in STOP Mode
 910:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is called, USART Clock is enabled while in STOP mode
 911:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_EnableClockInStopMode
 912:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 913:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 914:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 915:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableClockInStopMode(USART_TypeDef *USARTx)
 916:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 917:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_UCESM);
 918:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 919:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 920:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 921:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART clock disabled in STOP Mode
 922:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is called, USART Clock is disabled while in STOP mode
 923:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_DisableClockInStopMode
 924:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 925:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 926:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 927:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableClockInStopMode(USART_TypeDef *USARTx)
 928:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 929:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_UCESM);
 930:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 931:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 932:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 933:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if USART clock is enabled in STOP Mode
 934:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_IsClockEnabledInStopMode
 935:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 936:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 937:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 938:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsClockEnabledInStopMode(USART_TypeDef *USARTx)
 939:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 940:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_UCESM) == (USART_CR3_UCESM));
 941:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 942:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 943:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR3_UCESM */
 944:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 945:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 946:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 947:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 948:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 949:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 950:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 951:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 952:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RE);
 953:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 954:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 955:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 956:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Receiver Disable
ARM GAS  /tmp/ccVvGxMz.s 			page 48


 957:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 958:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 959:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 960:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 961:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 962:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 963:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 964:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 965:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 966:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 967:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Transmitter Enable
 968:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 969:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 970:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 971:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 972:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 973:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 974:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TE);
 975:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 976:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 977:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 978:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Transmitter Disable
 979:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 980:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 981:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 982:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 983:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 984:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 985:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 986:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 987:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 988:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 989:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 990:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         of Transmitter and Receiver
 991:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 992:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 993:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 994:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 995:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 996:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 997:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 998:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 999:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1000:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1001:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
1002:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1003:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
1004:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1005:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1006:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1007:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
1008:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
1009:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
1010:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1011:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1012:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
1013:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
ARM GAS  /tmp/ccVvGxMz.s 			page 49


1014:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
1015:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
1016:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1017:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
1018:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1019:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
1020:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1021:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1022:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1023:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
1024:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
1025:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
1026:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
1027:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
1028:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
1029:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1030:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1031:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1032:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1033:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1034:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1035:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1036:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
1037:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1038:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
1039:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1040:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1041:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1042:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
1043:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
1044:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
1045:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1046:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1047:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1048:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1049:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1050:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1051:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
1052:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1053:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
1054:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1055:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1056:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1057:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
1058:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
1059:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1060:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
1061:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
1062:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
1063:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1064:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1065:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
1066:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1067:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
1068:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1069:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1070:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /tmp/ccVvGxMz.s 			page 50


1071:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
1072:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
1073:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1074:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1075:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
1076:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
1077:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1078:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
1079:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1080:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
1081:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1082:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1083:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1084:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
1085:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
1086:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
1087:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1088:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1089:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1090:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1091:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1092:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1093:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1094:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
1095:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1096:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
1097:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1098:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1099:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1100:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
1101:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
1102:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
1103:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1104:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1105:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1106:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1107:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1108:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1109:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
1110:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1111:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
1112:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1113:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1114:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1115:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
1116:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
1117:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1118:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1119:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1120:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
1121:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1122:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_MME);
1123:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1124:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1125:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1126:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
1127:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
ARM GAS  /tmp/ccVvGxMz.s 			page 51


1128:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1129:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1130:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1131:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
1132:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1133:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
1134:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1135:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1136:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1137:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
1138:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
1139:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1140:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1141:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1142:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
1143:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1144:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
1145:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1146:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1147:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1148:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
1149:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
1150:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1151:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1152:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1153:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1154:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1155:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1156:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
1157:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1158:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
1159:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1160:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1161:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1162:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Oversampling mode
1163:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
1164:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1165:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1166:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1167:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1168:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1169:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
1170:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1171:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
1172:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1173:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1174:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1175:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
1176:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1177:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1178:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
1179:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1180:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
1181:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1182:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1183:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1184:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /tmp/ccVvGxMz.s 			page 52


1185:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
1186:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1187:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
1188:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1189:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1190:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1191:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
1192:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
1193:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1194:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1195:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
1196:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1197:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1198:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1199:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1200:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1201:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
1202:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1203:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
1204:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1205:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1206:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1207:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
1208:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1209:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1210:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
1211:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1212:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
1213:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1214:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1215:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1216:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1217:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
1218:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1219:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
1220:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1221:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1222:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1223:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
1224:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1225:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1226:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
1227:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1228:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1229:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1230:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1231:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1232:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
1233:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1234:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
1235:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1236:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1237:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1238:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
1239:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1240:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1241:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
ARM GAS  /tmp/ccVvGxMz.s 			page 53


1242:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1243:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
1244:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1245:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1246:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1247:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1248:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
1249:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1250:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
1251:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1252:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1253:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1254:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
1255:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1256:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1257:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
1258:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1259:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1260:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1261:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1262:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1263:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
1264:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1265:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
1266:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1267:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1268:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1269:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
1270:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1271:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1272:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1273:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
1274:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
1275:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
1276:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
1277:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
1278:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
1279:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1280:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
1281:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1282:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1283:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
1284:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1285:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1286:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
1287:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1288:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1289:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1290:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1291:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
1292:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1293:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
1294:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1295:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1296:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1297:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1298:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Clock source prescaler for baudrate generator and oversampling
ARM GAS  /tmp/ccVvGxMz.s 			page 54


1299:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1300:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1301:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_SetPrescaler
1302:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1303:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1304:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1305:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1306:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1307:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1308:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1309:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1310:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1311:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1312:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1313:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1314:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1315:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1316:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1317:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1318:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1319:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1320:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->PRESC, USART_PRESC_PRESCALER, (uint16_t)PrescalerValue);
1321:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1322:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1323:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1324:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve the Clock source prescaler for baudrate generator and oversampling
1325:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1326:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1327:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_GetPrescaler
1328:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1329:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1330:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1331:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1332:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1333:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1334:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1335:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1336:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1337:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1338:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1339:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1340:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1341:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1342:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1343:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetPrescaler(USART_TypeDef *USARTx)
1344:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1345:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->PRESC, USART_PRESC_PRESCALER));
1346:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1347:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1348:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
1349:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1350:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
1351:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1352:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1353:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1354:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1355:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
ARM GAS  /tmp/ccVvGxMz.s 			page 55


1356:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1357:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1358:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1359:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1360:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1361:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1362:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1363:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1364:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1365:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1366:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
1367:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1368:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1369:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1370:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1371:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1372:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1373:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1374:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1375:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1376:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1377:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1378:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1379:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1380:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1381:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1382:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1383:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1384:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1385:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN)) ? 1UL : 0UL);
1386:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1387:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1388:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1389:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1390:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1391:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1392:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1393:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1394:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1395:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1396:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1397:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1398:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1399:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
1400:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1401:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1402:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1403:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1404:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1405:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1406:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1407:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1408:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1409:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1410:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1411:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1412:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
ARM GAS  /tmp/ccVvGxMz.s 			page 56


1413:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1414:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1415:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1416:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1417:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1418:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1419:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1420:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1421:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1422:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1423:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1424:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1425:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1426:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1427:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1428:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1429:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1430:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1431:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1432:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1433:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1434:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1435:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1436:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1437:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1438:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1439:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1440:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1441:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1442:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1443:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1444:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1445:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1446:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1447:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                               uint32_t StopBits)
1448:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1449:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1450:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1451:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1452:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1453:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1454:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
1455:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1456:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1457:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1458:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1459:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1460:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1461:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1462:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1463:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1464:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1465:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1466:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1467:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1468:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1469:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
ARM GAS  /tmp/ccVvGxMz.s 			page 57


1470:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1471:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1472:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1473:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1474:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1475:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1476:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1477:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1478:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1479:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1480:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1481:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1482:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1483:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1484:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1485:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1486:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1487:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1488:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1489:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1490:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1491:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1492:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1493:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1494:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1495:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1496:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1497:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1498:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1499:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1500:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1501:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1502:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1503:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1504:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1505:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1506:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1507:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1508:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1509:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1510:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1511:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1512:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1513:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1514:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1515:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1516:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1517:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1518:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1519:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1520:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1521:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1522:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1523:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1524:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1525:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1526:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
ARM GAS  /tmp/ccVvGxMz.s 			page 58


1527:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1528:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1529:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1530:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1531:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1532:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1533:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1534:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1535:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1536:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1537:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1538:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1539:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1540:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1541:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1542:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1543:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1544:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1545:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1546:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1547:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1548:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1549:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1550:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1551:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1552:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1553:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1554:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1555:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1556:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1557:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1558:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1559:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1560:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1561:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1562:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1563:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1564:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1565:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1566:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1567:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1568:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1569:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1570:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1571:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1572:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1573:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1574:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1575:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1576:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1577:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1578:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1579:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1580:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1581:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1582:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1583:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
ARM GAS  /tmp/ccVvGxMz.s 			page 59


1584:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1585:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1586:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1587:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1588:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1589:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1590:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1591:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1592:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1593:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1594:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1595:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1596:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1597:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1598:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1599:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1600:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1601:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1602:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1603:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1604:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1605:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1606:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1607:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1608:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1609:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1610:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1611:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1612:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1613:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1614:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1615:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1616:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1617:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1618:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1619:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1620:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1621:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1622:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1623:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1624:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1625:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1626:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1627:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1628:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1629:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1630:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN)) ? 1UL : 0UL);
1631:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1632:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1633:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1634:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1635:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1636:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1637:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1638:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1639:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1640:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
ARM GAS  /tmp/ccVvGxMz.s 			page 60


1641:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1642:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1643:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1644:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1645:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1646:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1647:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1648:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1649:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1650:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1651:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1652:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1653:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1654:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1655:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1656:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1657:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1658:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1659:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1660:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1661:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1662:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1663:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1664:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1665:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1666:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1667:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1668:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1669:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1670:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1671:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1672:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1673:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1674:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1675:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1676:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1677:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1678:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1679:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1680:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1681:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1682:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1683:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1684:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1685:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1686:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1687:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1688:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1689:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1690:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1691:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1692:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1693:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1694:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1695:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1696:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
1697:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /tmp/ccVvGxMz.s 			page 61


1698:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN)) ? 1UL : 0UL);
1699:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1700:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1701:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1702:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1703:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1704:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         for wake up with address mark detection.
1705:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1706:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1707:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1708:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1709:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1710:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1711:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1712:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1713:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1714:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         value and CMF flag is set on match)
1715:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1716:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1717:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1718:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1719:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1720:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1721:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1722:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1723:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1724:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1725:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1726:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1727:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1728:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1729:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1730:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1731:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1732:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1733:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1734:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1735:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1736:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1737:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1738:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1739:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1740:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1741:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1742:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1743:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1744:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1745:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1746:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1747:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1748:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1749:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1750:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1751:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1752:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1753:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
1754:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /tmp/ccVvGxMz.s 			page 62


1755:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1756:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1757:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1758:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1759:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1760:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1761:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1762:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1763:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1764:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1765:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1766:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1767:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1768:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1769:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1770:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1771:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1772:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1773:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1774:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1775:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1776:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1777:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1778:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1779:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1780:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1781:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1782:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1783:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1784:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1785:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1786:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1787:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1788:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1789:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1790:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1791:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1792:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1793:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1794:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1795:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1796:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1797:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1798:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1799:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1800:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1801:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1802:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1803:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1804:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1805:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1806:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1807:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1808:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1809:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1810:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1811:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
ARM GAS  /tmp/ccVvGxMz.s 			page 63


1812:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1813:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1814:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1815:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1816:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1817:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1818:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1819:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1820:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1821:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1822:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1823:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1824:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
1825:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1826:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1827:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1828:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1829:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1830:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1831:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1832:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1833:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1834:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1835:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1836:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1837:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1838:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1839:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1840:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1841:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1842:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1843:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1844:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1845:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1846:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1847:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1848:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1849:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1850:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1851:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1852:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1853:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1854:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1855:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1856:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1857:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1858:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1859:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1860:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1861:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1862:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1863:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1864:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1865:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1866:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1867:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1868:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /tmp/ccVvGxMz.s 			page 64


1869:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1870:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1871:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1872:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1873:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1874:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1875:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1876:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1877:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT)) ? 1UL : 0UL);
1878:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1879:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1880:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1881:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Overrun detection
1882:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1883:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1884:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1885:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1886:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1887:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1888:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1889:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1890:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1891:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1892:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Overrun detection
1893:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
1894:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1895:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1896:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1897:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1898:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1899:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1900:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1901:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1902:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1903:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1904:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1905:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1906:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1907:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1908:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1909:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1910:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
1911:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1912:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1913:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1914:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1915:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1916:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1917:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1918:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1919:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1920:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1921:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1922:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1923:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1924:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1925:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
ARM GAS  /tmp/ccVvGxMz.s 			page 65


1926:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1927:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1928:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1929:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1930:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1931:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1932:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1933:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1934:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1935:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1936:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1937:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1938:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1939:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1940:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1941:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1942:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1943:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1944:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1945:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1946:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1947:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1948:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1949:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1950:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1951:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (Baud rate value != 0)
1952:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1953:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1954:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1955:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1956:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
1957:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1958:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1959:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1960:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1961:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1962:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1963:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1964:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1965:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1966:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1967:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1968:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1969:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1970:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
1971:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1972:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1973:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1974:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1975:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1976:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1977:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1978:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t Presc
1979:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                           uint32_t OverSampling,
1980:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                           uint32_t BaudRate)
1981:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
1982:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
ARM GAS  /tmp/ccVvGxMz.s 			page 66


1983:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                           uint32_t BaudRate)
1984:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
1985:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1986:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t usartdiv;
1987:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t brrtemp;
1988:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1989:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1990:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (PrescalerValue > LL_USART_PRESCALER_DIV256)
1991:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
1992:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* Do not overstep the size of USART_PRESCALER_TAB */
1993:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
1994:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else if (BaudRate == 0U)
1995:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
1996:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* Can Not divide per 0 */
1997:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
1998:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
1999:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2000:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
2001:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2002:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2003:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2004:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
2005:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2006:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
2007:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2008:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
2009:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2010:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     USARTx->BRR = brrtemp;
2011:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2012:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else
2013:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2014:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2015:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, (uint8_t)PrescalerValue, BaudRate
2016:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2017:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
2018:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2019:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2020:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2021:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2022:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2023:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
2024:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
2025:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
2026:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
2027:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
2028:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2029:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
2030:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
2031:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
2032:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
2033:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
2034:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
2035:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
2036:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
2037:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
2038:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
2039:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
ARM GAS  /tmp/ccVvGxMz.s 			page 67


2040:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
2041:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
2042:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
2043:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
2044:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
2045:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
2046:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
2047:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
2048:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Baud Rate
2049:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2050:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2051:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t P
2052:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                               uint32_t OverSampling)
2053:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2054:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
2055:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2056:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2057:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t usartdiv;
2058:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
2059:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2060:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t periphclkpresc = (uint32_t)(PeriphClk / (USART_PRESCALER_TAB[(uint8_t)PrescalerValue]));
2061:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2062:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2063:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   usartdiv = USARTx->BRR;
2064:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2065:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (usartdiv == 0U)
2066:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2067:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* Do not perform a division by 0 */
2068:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2069:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
2070:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2071:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
2072:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     if (usartdiv != 0U)
2073:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     {
2074:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2075:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = (periphclkpresc * 2U) / usartdiv;
2076:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2077:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
2078:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2079:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     }
2080:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2081:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else
2082:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2083:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
2084:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     {
2085:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2086:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = periphclkpresc / usartdiv;
2087:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2088:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
2089:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2090:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     }
2091:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2092:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (brrresult);
2093:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2094:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2095:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2096:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Receiver Time Out Value (expressed in nb of bits duration)
ARM GAS  /tmp/ccVvGxMz.s 			page 68


2097:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_SetRxTimeout
2098:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2099:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Timeout Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
2100:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2101:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2102:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRxTimeout(USART_TypeDef *USARTx, uint32_t Timeout)
2103:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2104:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_RTO, Timeout);
2105:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2106:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2107:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2108:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Get Receiver Time Out Value (expressed in nb of bits duration)
2109:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_GetRxTimeout
2110:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2111:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
2112:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2113:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRxTimeout(USART_TypeDef *USARTx)
2114:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2115:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_RTO));
2116:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2117:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2118:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2119:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Block Length value in reception
2120:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_SetBlockLength
2121:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2122:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  BlockLength Value between Min_Data=0x00 and Max_Data=0xFF
2123:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2124:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2125:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBlockLength(USART_TypeDef *USARTx, uint32_t BlockLength)
2126:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2127:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_BLEN, BlockLength << USART_RTOR_BLEN_Pos);
2128:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2129:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2130:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2131:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Get Block Length value in reception
2132:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_GetBlockLength
2133:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2134:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
2135:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2136:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBlockLength(USART_TypeDef *USARTx)
2137:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2138:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_BLEN) >> USART_RTOR_BLEN_Pos);
2139:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2140:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2141:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2142:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2143:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2144:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2145:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
2146:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2147:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2148:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2149:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2150:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable IrDA mode
2151:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2152:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2153:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
ARM GAS  /tmp/ccVvGxMz.s 			page 69


2154:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2155:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2156:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2157:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
2158:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2159:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
2160:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2161:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2162:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2163:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable IrDA mode
2164:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2165:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2166:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
2167:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2168:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2169:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2170:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
2171:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2172:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
2173:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2174:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2175:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2176:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
2177:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2178:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2179:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
2180:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2181:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2182:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2183:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
2184:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2185:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN)) ? 1UL : 0UL);
2186:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2187:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2188:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2189:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
2190:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2191:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2192:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
2193:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2194:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
2195:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
2196:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
2197:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2198:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2199:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
2200:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2201:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
2202:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2203:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2204:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2205:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
2206:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2207:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2208:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
2209:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2210:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/ccVvGxMz.s 			page 70


2211:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
2212:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
2213:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2214:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
2215:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2216:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
2217:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2218:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2219:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2220:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
2221:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
2222:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2223:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2224:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
2225:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2226:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
2227:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2228:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2229:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
2230:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2231:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, (uint16_t)PrescalerValue);
2232:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2233:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2234:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2235:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
2236:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
2237:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2238:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2239:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
2240:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2241:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
2242:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2243:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
2244:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2245:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
2246:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2247:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2248:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2249:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2250:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2251:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2252:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
2253:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2254:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2255:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2256:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2257:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
2258:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2259:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2260:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
2261:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2262:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2263:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2264:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
2265:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2266:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
2267:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  /tmp/ccVvGxMz.s 			page 71


2268:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2269:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2270:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
2271:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2272:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2273:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
2274:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2275:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2276:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2277:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
2278:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2279:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
2280:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2281:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2282:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2283:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
2284:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2285:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2286:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
2287:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2288:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2289:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2290:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
2291:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2292:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK)) ? 1UL : 0UL);
2293:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2294:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2295:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2296:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Smartcard mode
2297:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2298:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2299:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
2300:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2301:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2302:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2303:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
2304:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2305:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2306:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2307:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2308:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2309:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Smartcard mode
2310:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2311:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2312:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
2313:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2314:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2315:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2316:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
2317:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2318:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
2319:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2320:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2321:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2322:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
2323:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2324:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
ARM GAS  /tmp/ccVvGxMz.s 			page 72


2325:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
2326:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2327:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2328:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2329:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
2330:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2331:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN)) ? 1UL : 0UL);
2332:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2333:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2334:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2335:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
2336:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2337:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2338:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   This bit-field specifies the number of retries in transmit and receive, in Smartcard mo
2339:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         In transmission mode, it specifies the number of automatic retransmission retries, befo
2340:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         generating a transmission error (FE bit set).
2341:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         In reception mode, it specifies the number or erroneous reception trials, before genera
2342:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         reception error (RXNE and PE bits set)
2343:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_SetSmartcardAutoRetryCount
2344:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2345:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  AutoRetryCount Value between Min_Data=0 and Max_Data=7
2346:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2347:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2348:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardAutoRetryCount(USART_TypeDef *USARTx, uint32_t AutoRetryC
2349:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2350:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_SCARCNT, AutoRetryCount << USART_CR3_SCARCNT_Pos);
2351:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2352:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2353:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2354:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
2355:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2356:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2357:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_GetSmartcardAutoRetryCount
2358:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2359:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Smartcard Auto-Retry Count value (Value between Min_Data=0 and Max_Data=7)
2360:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2361:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardAutoRetryCount(USART_TypeDef *USARTx)
2362:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2363:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_SCARCNT) >> USART_CR3_SCARCNT_Pos);
2364:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2365:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2366:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2367:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
2368:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
2369:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2370:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2371:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
2372:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2373:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
2374:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2375:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2376:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
2377:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2378:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, (uint16_t)PrescalerValue);
2379:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2380:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2381:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /tmp/ccVvGxMz.s 			page 73


2382:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
2383:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
2384:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2385:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2386:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
2387:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2388:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
2389:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2390:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
2391:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2392:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
2393:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2394:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2395:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2396:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
2397:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2398:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2399:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2400:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
2401:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2402:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
2403:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2404:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2405:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
2406:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2407:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, (uint16_t)(GuardTime << USART_GTPR_GT_Pos));
2408:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2409:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2410:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2411:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
2412:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2413:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2414:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2415:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
2416:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2417:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
2418:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2419:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
2420:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2421:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_GTPR_GT_Pos);
2422:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2423:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2424:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2425:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2426:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2427:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2428:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
2429:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2430:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2431:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2432:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2433:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
2434:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2435:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2436:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
2437:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2438:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
ARM GAS  /tmp/ccVvGxMz.s 			page 74


2439:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2440:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
2441:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2442:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2443:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2444:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2445:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2446:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
2447:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2448:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2449:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
2450:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2451:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2452:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2453:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
2454:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2455:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2456:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2457:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2458:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2459:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
2460:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2461:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2462:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
2463:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2464:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2465:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2466:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
2467:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2468:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL)) ? 1UL : 0UL);
2469:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2470:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2471:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2472:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2473:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2474:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2475:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
2476:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_SPI_SLAVE Configuration functions related to SPI Slave feat
2477:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2478:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2479:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2480:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable SPI Synchronous Slave mode
2481:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2482:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2483:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_EnableSPISlave
2484:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2485:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2486:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2487:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSPISlave(USART_TypeDef *USARTx)
2488:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2489:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_SLVEN);
2490:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2491:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2492:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2493:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable SPI Synchronous Slave mode
2494:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2495:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
ARM GAS  /tmp/ccVvGxMz.s 			page 75


2496:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_DisableSPISlave
2497:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2498:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2499:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2500:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSPISlave(USART_TypeDef *USARTx)
2501:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2502:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_SLVEN);
2503:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2504:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2505:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2506:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if  SPI Synchronous Slave mode is enabled
2507:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2508:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2509:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_IsEnabledSPISlave
2510:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2511:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2512:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2513:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSPISlave(USART_TypeDef *USARTx)
2514:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2515:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_SLVEN) == (USART_CR2_SLVEN)) ? 1UL : 0UL);
2516:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2517:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2518:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2519:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable SPI Slave Selection using NSS input pin
2520:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2521:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2522:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   SPI Slave Selection depends on NSS input pin
2523:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (The slave is selected when NSS is low and deselected when NSS is high).
2524:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_EnableSPISlaveSelect
2525:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2526:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2527:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2528:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSPISlaveSelect(USART_TypeDef *USARTx)
2529:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2530:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_DIS_NSS);
2531:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2532:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2533:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2534:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable SPI Slave Selection using NSS input pin
2535:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2536:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2537:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   SPI Slave will be always selected and NSS input pin will be ignored.
2538:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_DisableSPISlaveSelect
2539:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2540:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2541:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2542:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSPISlaveSelect(USART_TypeDef *USARTx)
2543:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2544:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_DIS_NSS);
2545:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2546:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2547:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2548:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if  SPI Slave Selection depends on NSS input pin
2549:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2550:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2551:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_IsEnabledSPISlaveSelect
2552:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /tmp/ccVvGxMz.s 			page 76


2553:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2554:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2555:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSPISlaveSelect(USART_TypeDef *USARTx)
2556:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2557:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_DIS_NSS) != (USART_CR2_DIS_NSS)) ? 1UL : 0UL);
2558:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2559:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2560:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2561:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2562:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2563:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2564:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
2565:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
2566:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2567:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2568:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2569:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2570:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
2571:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2572:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2573:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
2574:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2575:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
2576:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2577:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2578:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2579:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2580:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
2581:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2582:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
2583:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2584:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2585:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2586:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
2587:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2588:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2589:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
2590:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2591:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2592:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2593:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2594:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2595:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
2596:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2597:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
2598:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2599:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2600:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2601:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable LIN mode
2602:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2603:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2604:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
2605:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2606:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2607:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2608:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
2609:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /tmp/ccVvGxMz.s 			page 77


2610:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2611:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2612:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2613:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2614:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable LIN mode
2615:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2616:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2617:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
2618:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2619:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2620:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2621:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
2622:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2623:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
2624:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2625:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2626:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2627:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
2628:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2629:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2630:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
2631:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2632:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2633:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2634:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
2635:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2636:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN)) ? 1UL : 0UL);
2637:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2638:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2639:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2640:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2641:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2642:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2643:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_DE Configuration functions related to Driver Enable feature
2644:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2645:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2646:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2647:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2648:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
2649:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2650:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2651:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_SetDEDeassertionTime
2652:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2653:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2654:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2655:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2656:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEDeassertionTime(USART_TypeDef *USARTx, uint32_t Time)
2657:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2658:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEDT, Time << USART_CR1_DEDT_Pos);
2659:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2660:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2661:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2662:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
2663:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2664:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2665:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_GetDEDeassertionTime
2666:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /tmp/ccVvGxMz.s 			page 78


2667:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2668:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2669:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEDeassertionTime(USART_TypeDef *USARTx)
2670:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2671:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEDT) >> USART_CR1_DEDT_Pos);
2672:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2673:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2674:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2675:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
2676:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2677:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2678:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_SetDEAssertionTime
2679:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2680:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2681:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2682:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2683:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEAssertionTime(USART_TypeDef *USARTx, uint32_t Time)
2684:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2685:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEAT, Time << USART_CR1_DEAT_Pos);
2686:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2687:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2688:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2689:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
2690:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2691:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2692:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_GetDEAssertionTime
2693:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2694:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2695:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2696:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEAssertionTime(USART_TypeDef *USARTx)
2697:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2698:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEAT) >> USART_CR1_DEAT_Pos);
2699:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2700:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2701:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2702:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Driver Enable (DE) Mode
2703:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2704:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2705:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_EnableDEMode
2706:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2707:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2708:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2709:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDEMode(USART_TypeDef *USARTx)
2710:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2711:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DEM);
2712:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2713:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2714:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2715:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Driver Enable (DE) Mode
2716:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2717:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2718:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_DisableDEMode
2719:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2720:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2721:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2722:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDEMode(USART_TypeDef *USARTx)
2723:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /tmp/ccVvGxMz.s 			page 79


2724:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DEM);
2725:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2726:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2727:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2728:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
2729:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2730:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2731:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_IsEnabledDEMode
2732:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2733:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2734:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2735:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDEMode(USART_TypeDef *USARTx)
2736:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2737:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM)) ? 1UL : 0UL);
2738:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2739:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2740:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2741:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select Driver Enable Polarity
2742:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2743:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2744:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_SetDESignalPolarity
2745:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2746:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
2747:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2748:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2749:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2750:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2751:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDESignalPolarity(USART_TypeDef *USARTx, uint32_t Polarity)
2752:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2753:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_DEP, Polarity);
2754:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2755:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2756:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2757:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Driver Enable Polarity
2758:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2759:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2760:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_GetDESignalPolarity
2761:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2762:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2763:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2764:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2765:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2766:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDESignalPolarity(USART_TypeDef *USARTx)
2767:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2768:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_DEP));
2769:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2770:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2771:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2772:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2773:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2774:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2775:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
2776:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2777:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2778:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2779:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2780:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
ARM GAS  /tmp/ccVvGxMz.s 			page 80


2781:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
2782:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2783:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2784:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2785:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2786:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2787:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2788:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2789:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2790:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2791:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2792:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2793:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
2794:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2795:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2796:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
2797:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
2798:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
2799:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
2800:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
2801:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2802:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2803:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2804:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
2805:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2806:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
2807:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
2808:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.
2809:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2810:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2811:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2812:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2813:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2814:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2815:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
2816:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
2817:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2818:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2819:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2820:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2821:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
2822:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
2823:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
2824:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2825:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2826:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2827:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2828:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2829:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2830:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
2831:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
2832:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2833:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
2834:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
2835:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
2836:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
2837:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
ARM GAS  /tmp/ccVvGxMz.s 			page 81


2838:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2839:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2840:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2841:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
2842:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2843:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
2844:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
2845:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.
2846:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2847:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2848:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2849:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
2850:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
2851:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2852:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2853:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2854:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
2855:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
2856:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2857:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2858:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2859:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2860:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
2861:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2862:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2863:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2864:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2865:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2866:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2867:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2868:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2869:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
2870:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
2871:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
2872:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2873:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
2874:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
2875:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
2876:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
2877:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
2878:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
2879:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2880:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2881:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2882:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
2883:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2884:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
2885:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
2886:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.
2887:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2888:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
2889:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
2890:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
2891:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2892:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2893:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2894:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /tmp/ccVvGxMz.s 			page 82


2895:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
2896:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
2897:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2898:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2899:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2900:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2901:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
2902:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2903:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2904:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2905:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2906:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2907:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2908:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2909:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
2910:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
2911:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2912:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2913:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
2914:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
2915:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
2916:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
2917:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
2918:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2919:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2920:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2921:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
2922:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2923:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
2924:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
2925:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - SCEN and IREN bits in the USART_CR3 register.
2926:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2927:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2928:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
2929:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
2930:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2931:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2932:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2933:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2934:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
2935:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
2936:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2937:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2938:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2939:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
2940:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
2941:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
2942:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2943:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2944:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2945:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2946:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2947:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2948:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2949:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2950:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
2951:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
ARM GAS  /tmp/ccVvGxMz.s 			page 83


2952:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2953:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2954:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
2955:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
2956:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
2957:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
2958:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
2959:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2960:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2961:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2962:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
2963:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2964:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
2965:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
2966:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - IREN and HDSEL bits in the USART_CR3 register.
2967:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2968:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2969:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2970:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
2971:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* Synchronous mode is activated by default */
2972:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
2973:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
2974:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2975:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2976:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2977:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2978:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
2979:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
2980:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2981:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2982:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2983:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2984:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
2985:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2986:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2987:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2988:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2989:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2990:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2991:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2992:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2993:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
2994:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
2995:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
2996:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2997:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
2998:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
2999:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
3000:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
3001:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
3002:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
3003:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3004:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3005:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3006:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
3007:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3008:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
ARM GAS  /tmp/ccVvGxMz.s 			page 84


3009:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
3010:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - SCEN and HDSEL bits in the USART_CR3 register.
3011:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3012:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
3013:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
3014:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
3015:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
3016:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3017:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3018:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3019:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
3020:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
3021:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
3022:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
3023:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
3024:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
3025:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
3026:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
3027:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
3028:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
3029:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
3030:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
3031:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
3032:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
3033:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
3034:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
3035:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
3036:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
3037:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
3038:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
3039:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
3040:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
3041:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
3042:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3043:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3044:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3045:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
3046:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3047:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
3048:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
3049:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.
3050:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3051:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
3052:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
3053:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3054:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3055:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3056:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
3057:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3058:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3059:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
3060:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
3061:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3062:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3063:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3064:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
3065:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          PE            LL_USART_IsActiveFlag_PE
ARM GAS  /tmp/ccVvGxMz.s 			page 85


3066:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3067:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3068:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3069:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
3070:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3071:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_PE) == (USART_ISR_PE)) ? 1UL : 0UL);
3072:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3073:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3074:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3075:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
3076:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          FE            LL_USART_IsActiveFlag_FE
3077:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3078:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3079:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3080:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
3081:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3082:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_FE) == (USART_ISR_FE)) ? 1UL : 0UL);
3083:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3084:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3085:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3086:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
3087:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          NE            LL_USART_IsActiveFlag_NE
3088:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3089:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3090:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3091:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
3092:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3093:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_NE) == (USART_ISR_NE)) ? 1UL : 0UL);
3094:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3095:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3096:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3097:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
3098:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          ORE           LL_USART_IsActiveFlag_ORE
3099:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3100:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3101:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3102:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
3103:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3104:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ORE) == (USART_ISR_ORE)) ? 1UL : 0UL);
3105:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3106:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3107:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3108:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
3109:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          IDLE          LL_USART_IsActiveFlag_IDLE
3110:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3111:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3112:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3113:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
3114:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3115:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_IDLE) == (USART_ISR_IDLE)) ? 1UL : 0UL);
3116:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3117:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3118:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3119:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
3120:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IsActiveFlag_RXNE  LL_USART_IsActiveFlag_RXNE_RXFNE
3121:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3122:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /tmp/ccVvGxMz.s 			page 86


3123:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register or USART RX FIFO Not Empty Flag is set or not
3124:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3125:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3126:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RXNE_RXFNE    LL_USART_IsActiveFlag_RXNE_RXFNE
3127:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3128:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3129:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3130:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE_RXFNE(USART_TypeDef *USARTx)
3131:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3132:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXNE_RXFNE) == (USART_ISR_RXNE_RXFNE)) ? 1UL : 0UL);
3133:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3134:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3135:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
3136:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3137:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
3138:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RXNE          LL_USART_IsActiveFlag_RXNE
3139:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3140:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3141:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3142:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
3143:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3144:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXNE) == (USART_ISR_RXNE)) ? 1UL : 0UL);
3145:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3146:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3147:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3148:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3149:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
3150:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TC            LL_USART_IsActiveFlag_TC
3151:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3152:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3153:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3154:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
3155:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3156:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TC) == (USART_ISR_TC)) ? 1UL : 0UL);
3157:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3158:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3159:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3160:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
3161:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IsActiveFlag_TXE  LL_USART_IsActiveFlag_TXE_TXFNF
3162:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3163:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3164:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty or USART TX FIFO Not Full Flag is set o
3165:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3166:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3167:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TXE_TXFNF     LL_USART_IsActiveFlag_TXE_TXFNF
3168:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3169:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3170:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3171:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE_TXFNF(USART_TypeDef *USARTx)
3172:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3173:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXE_TXFNF) == (USART_ISR_TXE_TXFNF)) ? 1UL : 0UL);
3174:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3175:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3176:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
3177:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3178:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty Flag is set or not
3179:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TXE           LL_USART_IsActiveFlag_TXE
ARM GAS  /tmp/ccVvGxMz.s 			page 87


3180:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3181:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3182:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3183:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
3184:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3185:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXE) == (USART_ISR_TXE)) ? 1UL : 0UL);
3186:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3187:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3188:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3189:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3190:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
3191:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3192:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3193:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          LBDF          LL_USART_IsActiveFlag_LBD
3194:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3195:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3196:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3197:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef *USARTx)
3198:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3199:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_LBDF) == (USART_ISR_LBDF)) ? 1UL : 0UL);
3200:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3201:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3202:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3203:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART CTS interrupt Flag is set or not
3204:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3205:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3206:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          CTSIF         LL_USART_IsActiveFlag_nCTS
3207:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3208:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3209:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3210:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef *USARTx)
3211:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3212:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTSIF) == (USART_ISR_CTSIF)) ? 1UL : 0UL);
3213:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3214:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3215:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3216:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
3217:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3218:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3219:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          CTS           LL_USART_IsActiveFlag_CTS
3220:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3221:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3222:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3223:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CTS(USART_TypeDef *USARTx)
3224:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3225:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTS) == (USART_ISR_CTS)) ? 1UL : 0UL);
3226:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3227:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3228:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3229:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Receiver Time Out Flag is set or not
3230:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RTOF          LL_USART_IsActiveFlag_RTO
3231:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3232:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3233:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3234:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RTO(USART_TypeDef *USARTx)
3235:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3236:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RTOF) == (USART_ISR_RTOF)) ? 1UL : 0UL);
ARM GAS  /tmp/ccVvGxMz.s 			page 88


3237:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3238:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3239:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3240:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Flag is set or not
3241:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3242:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3243:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          EOBF          LL_USART_IsActiveFlag_EOB
3244:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3245:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3246:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3247:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_EOB(USART_TypeDef *USARTx)
3248:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3249:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_EOBF) == (USART_ISR_EOBF)) ? 1UL : 0UL);
3250:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3251:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3252:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
3253:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3254:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the SPI Slave Underrun error flag is set or not
3255:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
3256:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
3257:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          UDR           LL_USART_IsActiveFlag_UDR
3258:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3259:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3260:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3261:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_UDR(USART_TypeDef *USARTx)
3262:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3263:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_UDR) == (USART_ISR_UDR)) ? 1UL : 0UL);
3264:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3265:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3266:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
3267:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3268:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Error Flag is set or not
3269:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
3270:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
3271:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          ABRE          LL_USART_IsActiveFlag_ABRE
3272:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3273:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3274:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3275:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABRE(USART_TypeDef *USARTx)
3276:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3277:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRE) == (USART_ISR_ABRE)) ? 1UL : 0UL);
3278:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3279:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3280:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3281:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Flag is set or not
3282:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
3283:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
3284:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          ABRF          LL_USART_IsActiveFlag_ABR
3285:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3286:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3287:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3288:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABR(USART_TypeDef *USARTx)
3289:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3290:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRF) == (USART_ISR_ABRF)) ? 1UL : 0UL);
3291:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3292:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3293:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /tmp/ccVvGxMz.s 			page 89


3294:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Busy Flag is set or not
3295:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          BUSY          LL_USART_IsActiveFlag_BUSY
3296:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3297:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3298:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3299:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_BUSY(USART_TypeDef *USARTx)
3300:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3301:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_BUSY) == (USART_ISR_BUSY)) ? 1UL : 0UL);
3302:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3303:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3304:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3305:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Character Match Flag is set or not
3306:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          CMF           LL_USART_IsActiveFlag_CM
3307:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3308:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3309:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3310:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CM(USART_TypeDef *USARTx)
3311:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3312:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CMF) == (USART_ISR_CMF)) ? 1UL : 0UL);
3313:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3314:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3315:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3316:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
3317:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          SBKF          LL_USART_IsActiveFlag_SBK
3318:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3319:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3320:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3321:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef *USARTx)
3322:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3323:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_SBKF) == (USART_ISR_SBKF)) ? 1UL : 0UL);
3324:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3325:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3326:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3327:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
3328:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RWU           LL_USART_IsActiveFlag_RWU
3329:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3330:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3331:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3332:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef *USARTx)
3333:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3334:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RWU) == (USART_ISR_RWU)) ? 1UL : 0UL);
3335:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3336:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3337:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3338:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from stop mode Flag is set or not
3339:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3340:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3341:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          WUF           LL_USART_IsActiveFlag_WKUP
3342:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3343:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3344:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3345:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_WKUP(USART_TypeDef *USARTx)
3346:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3347:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_WUF) == (USART_ISR_WUF)) ? 1UL : 0UL);
3348:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3349:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3350:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /tmp/ccVvGxMz.s 			page 90


3351:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Enable Acknowledge Flag is set or not
3352:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TEACK         LL_USART_IsActiveFlag_TEACK
3353:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3354:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3355:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3356:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TEACK(USART_TypeDef *USARTx)
3357:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3358:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
3359:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3360:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3361:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3362:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Receive Enable Acknowledge Flag is set or not
3363:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          REACK         LL_USART_IsActiveFlag_REACK
3364:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3365:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3366:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3367:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_REACK(USART_TypeDef *USARTx)
3368:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3369:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
3370:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3371:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3372:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3373:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3374:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART TX FIFO Empty Flag is set or not
3375:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3376:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3377:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TXFE          LL_USART_IsActiveFlag_TXFE
3378:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3379:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3380:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3381:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXFE(USART_TypeDef *USARTx)
3382:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3383:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXFE) == (USART_ISR_TXFE)) ? 1UL : 0UL);
3384:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3385:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3386:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3387:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART RX FIFO Full Flag is set or not
3388:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3389:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3390:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RXFF          LL_USART_IsActiveFlag_RXFF
3391:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3392:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3393:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3394:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXFF(USART_TypeDef *USARTx)
3395:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3396:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXFF) == (USART_ISR_RXFF)) ? 1UL : 0UL);
3397:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3398:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3399:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3400:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
3401:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
3402:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3403:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the Smartcard Transmission Complete Before Guard Time Flag is set or not
3404:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TCBGT         LL_USART_IsActiveFlag_TCBGT
3405:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3406:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3407:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /tmp/ccVvGxMz.s 			page 91


3408:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TCBGT(USART_TypeDef *USARTx)
3409:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3410:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TCBGT) == (USART_ISR_TCBGT)) ? 1UL : 0UL);
3411:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3412:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3413:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
3414:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3415:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3416:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART TX FIFO Threshold Flag is set or not
3417:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3418:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3419:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TXFT          LL_USART_IsActiveFlag_TXFT
3420:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3421:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3422:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3423:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXFT(USART_TypeDef *USARTx)
3424:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3425:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXFT) == (USART_ISR_TXFT)) ? 1UL : 0UL);
3426:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3427:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3428:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3429:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART RX FIFO Threshold Flag is set or not
3430:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3431:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3432:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RXFT          LL_USART_IsActiveFlag_RXFT
3433:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3434:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3435:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3436:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXFT(USART_TypeDef *USARTx)
3437:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3438:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXFT) == (USART_ISR_RXFT)) ? 1UL : 0UL);
3439:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3440:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3441:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3442:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3443:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Parity Error Flag
3444:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          PECF          LL_USART_ClearFlag_PE
3445:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3446:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3447:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3448:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_PE(USART_TypeDef *USARTx)
3449:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3450:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_PECF);
3451:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3452:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3453:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3454:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Framing Error Flag
3455:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          FECF          LL_USART_ClearFlag_FE
3456:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3457:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3458:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3459:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_FE(USART_TypeDef *USARTx)
3460:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3461:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_FECF);
3462:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3463:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3464:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /tmp/ccVvGxMz.s 			page 92


3465:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Noise Error detected Flag
3466:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          NECF          LL_USART_ClearFlag_NE
3467:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3468:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3469:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3470:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_NE(USART_TypeDef *USARTx)
3471:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3472:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_NECF);
3473:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3474:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3475:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3476:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear OverRun Error Flag
3477:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          ORECF         LL_USART_ClearFlag_ORE
3478:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3479:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3480:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3481:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_ORE(USART_TypeDef *USARTx)
3482:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3483:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_ORECF);
3484:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3485:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3486:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3487:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear IDLE line detected Flag
3488:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          IDLECF        LL_USART_ClearFlag_IDLE
3489:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3490:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3491:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3492:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_IDLE(USART_TypeDef *USARTx)
3493:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3494:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_IDLECF);
3495:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3496:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3497:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3498:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3499:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear TX FIFO Empty Flag
3500:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3501:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3502:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          TXFECF        LL_USART_ClearFlag_TXFE
3503:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3504:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3505:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3506:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TXFE(USART_TypeDef *USARTx)
3507:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3508:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TXFECF);
3509:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3510:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3511:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3512:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3513:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Transmission Complete Flag
3514:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          TCCF          LL_USART_ClearFlag_TC
3515:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3516:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3517:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3518:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TC(USART_TypeDef *USARTx)
3519:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3520:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TCCF);
3521:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  /tmp/ccVvGxMz.s 			page 93


3522:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3523:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
3524:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
3525:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3526:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Smartcard Transmission Complete Before Guard Time Flag
3527:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          TCBGTCF       LL_USART_ClearFlag_TCBGT
3528:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3529:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3530:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3531:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TCBGT(USART_TypeDef *USARTx)
3532:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3533:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TCBGTCF);
3534:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3535:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
3536:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3537:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3538:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear LIN Break Detection Flag
3539:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3540:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3541:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          LBDCF         LL_USART_ClearFlag_LBD
3542:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3543:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3544:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3545:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_LBD(USART_TypeDef *USARTx)
3546:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3547:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_LBDCF);
3548:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3549:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3550:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3551:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear CTS Interrupt Flag
3552:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3553:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3554:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          CTSCF         LL_USART_ClearFlag_nCTS
3555:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3556:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3557:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3558:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_nCTS(USART_TypeDef *USARTx)
3559:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3560:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CTSCF);
3561:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3562:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3563:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3564:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Receiver Time Out Flag
3565:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          RTOCF         LL_USART_ClearFlag_RTO
3566:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3567:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3568:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3569:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_RTO(USART_TypeDef *USARTx)
3570:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3571:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_RTOCF);
3572:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3573:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3574:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3575:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear End Of Block Flag
3576:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3577:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3578:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          EOBCF         LL_USART_ClearFlag_EOB
ARM GAS  /tmp/ccVvGxMz.s 			page 94


3579:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3580:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3581:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3582:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_EOB(USART_TypeDef *USARTx)
3583:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3584:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_EOBCF);
3585:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3586:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3587:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
3588:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3589:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear SPI Slave Underrun Flag
3590:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
3591:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
3592:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          UDRCF         LL_USART_ClearFlag_UDR
3593:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3594:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3595:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3596:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_UDR(USART_TypeDef *USARTx)
3597:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3598:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_UDRCF);
3599:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3600:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3601:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
3602:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3603:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Character Match Flag
3604:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          CMCF          LL_USART_ClearFlag_CM
3605:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3606:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3607:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3608:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_CM(USART_TypeDef *USARTx)
3609:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3610:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CMCF);
3611:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3612:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3613:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3614:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Wake Up from stop mode Flag
3615:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3616:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3617:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          WUCF          LL_USART_ClearFlag_WKUP
3618:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3619:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3620:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3621:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_WKUP(USART_TypeDef *USARTx)
3622:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3623:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_WUCF);
3624:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3625:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3626:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3627:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
3628:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3629:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3630:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_IT_Management IT_Management
3631:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
3632:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3633:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3634:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3635:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable IDLE Interrupt
ARM GAS  /tmp/ccVvGxMz.s 			page 95


3636:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_EnableIT_IDLE
3637:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3638:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3639:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3640:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_IDLE(USART_TypeDef *USARTx)
3641:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3642:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_IDLEIE);
3643:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3644:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3645:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3646:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
3647:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_EnableIT_RXNE  LL_USART_EnableIT_RXNE_RXFNE
3648:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3649:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3650:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable RX Not Empty and RX FIFO Not Empty Interrupt
3651:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3652:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3653:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1        RXNEIE_RXFNEIE  LL_USART_EnableIT_RXNE_RXFNE
3654:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3655:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3656:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3657:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXNE_RXFNE(USART_TypeDef *USARTx)
3658:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3659:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE_RXFNEIE);
3660:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3661:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3662:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
3663:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3664:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable RX Not Empty Interrupt
3665:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_EnableIT_RXNE
3666:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3667:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3668:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3669:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXNE(USART_TypeDef *USARTx)
 936              		.loc 3 3669 22 view .LVU240
 937              	.L73:
 938              	.LBE21:
3670:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3671:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
 939              		.loc 3 3671 3 view .LVU241
 940              	.LBB27:
 941              	.LBB22:
 942              		.loc 3 3671 3 view .LVU242
 943              		.loc 3 3671 3 view .LVU243
 944              		.loc 3 3671 3 view .LVU244
 945 001a 1E4A     		ldr	r2, .L82+4
 946              	.LVL67:
 947              	.LBB23:
 948              	.LBI23:
 210:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccVvGxMz.s 			page 96


 218:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccVvGxMz.s 			page 97


 275:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccVvGxMz.s 			page 98


 332:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccVvGxMz.s 			page 99


 389:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
ARM GAS  /tmp/ccVvGxMz.s 			page 100


 446:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
ARM GAS  /tmp/ccVvGxMz.s 			page 101


 503:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccVvGxMz.s 			page 102


 560:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccVvGxMz.s 			page 103


 617:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccVvGxMz.s 			page 104


 674:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccVvGxMz.s 			page 105


 731:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
ARM GAS  /tmp/ccVvGxMz.s 			page 106


 788:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVvGxMz.s 			page 107


 845:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
ARM GAS  /tmp/ccVvGxMz.s 			page 108


 902:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccVvGxMz.s 			page 109


 959:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
ARM GAS  /tmp/ccVvGxMz.s 			page 110


1016:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1069:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccVvGxMz.s 			page 111


1073:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
1090:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
1095:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1096:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1097:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1102:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1107:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1109:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1110:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1114:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1117:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1119:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
1121:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1122:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1124:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1129:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
ARM GAS  /tmp/ccVvGxMz.s 			page 112


1130:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1131:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1132:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1133:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1136:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1139:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1141:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
1143:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1144:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1145:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1146:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1151:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 949              		.loc 2 1151 31 view .LVU245
 950              	.LBB24:
1152:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1153:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 951              		.loc 2 1153 5 view .LVU246
1154:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1155:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 952              		.loc 2 1155 4 view .LVU247
 953              		.syntax unified
 954              	@ 1155 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc
 955 001c 52E8003F 		ldrex r3, [r2]
 956              	@ 0 "" 2
 957              	.LVL68:
1156:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 958              		.loc 2 1156 4 view .LVU248
 959              		.loc 2 1156 4 is_stmt 0 view .LVU249
 960              		.thumb
 961              		.syntax unified
 962              	.LBE24:
 963              	.LBE23:
 964              		.loc 3 3671 3 view .LVU250
 965 0020 43F02003 		orr	r3, r3, #32
 966              	.LVL69:
 967              		.loc 3 3671 3 is_stmt 1 view .LVU251
 968              	.LBB25:
 969              	.LBI25:
1157:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
1158:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1160:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  /tmp/ccVvGxMz.s 			page 113


1166:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1168:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1170:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1171:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1174:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
1175:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1176:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1177:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1178:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1185:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1187:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1188:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1189:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1191:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** }
1192:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1193:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1194:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1195:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1202:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 970              		.loc 2 1202 31 view .LVU252
 971              	.LBB26:
1203:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** {
1204:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 972              		.loc 2 1204 4 view .LVU253
1205:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h **** 
1206:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 973              		.loc 2 1206 4 view .LVU254
 974              		.syntax unified
 975              	@ 1206 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc
 976 0024 42E80031 		strex r1, r3, [r2]
 977              	@ 0 "" 2
 978              	.LVL70:
1207:/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 979              		.loc 2 1207 4 view .LVU255
 980              		.loc 2 1207 4 is_stmt 0 view .LVU256
 981              		.thumb
 982              		.syntax unified
 983              	.LBE26:
 984              	.LBE25:
ARM GAS  /tmp/ccVvGxMz.s 			page 114


 985              		.loc 3 3671 3 view .LVU257
 986 0028 0029     		cmp	r1, #0
 987 002a F6D1     		bne	.L73
 988              	.LBE22:
 989              	.LBE27:
 990              		.loc 3 3671 3 is_stmt 1 view .LVU258
 991              	.LVL71:
 119:Core/Src/main.c ****   printf("\r\nSTM$");
 992              		.loc 1 119 3 view .LVU259
 993 002c 1A48     		ldr	r0, .L82+8
 994 002e FFF7FEFF 		bl	printf
 995              	.LVL72:
 120:Core/Src/main.c ****   /* USER CODE END 2 */
 996              		.loc 1 120 3 view .LVU260
 997 0032 1A48     		ldr	r0, .L82+12
 998 0034 FFF7FEFF 		bl	printf
 999              	.LVL73:
 102:Core/Src/main.c ****   /* USER CODE END Init */
 1000              		.loc 1 102 7 is_stmt 0 view .LVU261
 1001 0038 0025     		movs	r5, #0
 1002 003a 11E0     		b	.L75
 1003              	.LVL74:
 1004              	.L76:
 132:Core/Src/main.c ****       	if(!execute_command(command_line)){
 1005              		.loc 1 132 2 is_stmt 1 view .LVU262
 132:Core/Src/main.c ****       	if(!execute_command(command_line)){
 1006              		.loc 1 132 18 is_stmt 0 view .LVU263
 1007 003c 05F12003 		add	r3, r5, #32
 1008 0040 0DEB0305 		add	r5, sp, r3
 1009              	.LVL75:
 132:Core/Src/main.c ****       	if(!execute_command(command_line)){
 1010              		.loc 1 132 18 view .LVU264
 1011 0044 0023     		movs	r3, #0
 1012              	.LVL76:
 132:Core/Src/main.c ****       	if(!execute_command(command_line)){
 1013              		.loc 1 132 18 view .LVU265
 1014 0046 05F8203C 		strb	r3, [r5, #-32]
 133:Core/Src/main.c **** 	  printf("\r\nOK");
 1015              		.loc 1 133 8 is_stmt 1 view .LVU266
 133:Core/Src/main.c **** 	  printf("\r\nOK");
 1016              		.loc 1 133 12 is_stmt 0 view .LVU267
 1017 004a 6846     		mov	r0, sp
 1018 004c FFF7FEFF 		bl	execute_command
 1019              	.LVL77:
 133:Core/Src/main.c **** 	  printf("\r\nOK");
 1020              		.loc 1 133 10 view .LVU268
 1021 0050 C8B9     		cbnz	r0, .L78
 134:Core/Src/main.c **** 	}else{
 1022              		.loc 1 134 4 is_stmt 1 view .LVU269
 1023 0052 1348     		ldr	r0, .L82+16
 1024 0054 FFF7FEFF 		bl	printf
 1025              	.LVL78:
 1026              	.L79:
 138:Core/Src/main.c **** 	printf("\r\nSTM$");
 1027              		.loc 1 138 2 view .LVU270
 139:Core/Src/main.c ****       }else{
 1028              		.loc 1 139 2 view .LVU271
ARM GAS  /tmp/ccVvGxMz.s 			page 115


 1029 0058 1048     		ldr	r0, .L82+12
 1030 005a FFF7FEFF 		bl	printf
 1031              	.LVL79:
 138:Core/Src/main.c **** 	printf("\r\nSTM$");
 1032              		.loc 1 138 4 is_stmt 0 view .LVU272
 1033 005e 0025     		movs	r5, #0
 1034              	.LVL80:
 1035              	.L75:
 125:Core/Src/main.c ****   {
 1036              		.loc 1 125 3 is_stmt 1 view .LVU273
 128:Core/Src/main.c ****       putchar(ch);
 1037              		.loc 1 128 5 view .LVU274
 128:Core/Src/main.c ****       putchar(ch);
 1038              		.loc 1 128 15 is_stmt 0 view .LVU275
 1039 0060 1048     		ldr	r0, .L82+20
 1040 0062 FFF7FEFF 		bl	dequeue
 1041              	.LVL81:
 128:Core/Src/main.c ****       putchar(ch);
 1042              		.loc 1 128 8 view .LVU276
 1043 0066 0446     		mov	r4, r0
 1044 0068 0028     		cmp	r0, #0
 1045 006a F9D0     		beq	.L75
 129:Core/Src/main.c ****       command_line[n] = ch;
 1046              		.loc 1 129 7 is_stmt 1 view .LVU277
 1047 006c FFF7FEFF 		bl	putchar
 1048              	.LVL82:
 130:Core/Src/main.c ****       if(ch == '\r' || ch == '\n'){
 1049              		.loc 1 130 7 view .LVU278
 130:Core/Src/main.c ****       if(ch == '\r' || ch == '\n'){
 1050              		.loc 1 130 23 is_stmt 0 view .LVU279
 1051 0070 05F12003 		add	r3, r5, #32
 1052 0074 6B44     		add	r3, sp, r3
 1053 0076 03F8204C 		strb	r4, [r3, #-32]
 131:Core/Src/main.c **** 	command_line[n] = '\0'; //end of string
 1054              		.loc 1 131 7 is_stmt 1 view .LVU280
 131:Core/Src/main.c **** 	command_line[n] = '\0'; //end of string
 1055              		.loc 1 131 9 is_stmt 0 view .LVU281
 1056 007a 0D2C     		cmp	r4, #13
 1057 007c DED0     		beq	.L76
 131:Core/Src/main.c **** 	command_line[n] = '\0'; //end of string
 1058              		.loc 1 131 21 discriminator 1 view .LVU282
 1059 007e 0A2C     		cmp	r4, #10
 1060 0080 DCD0     		beq	.L76
 141:Core/Src/main.c ****       }
 1061              		.loc 1 141 2 is_stmt 1 view .LVU283
 141:Core/Src/main.c ****       }
 1062              		.loc 1 141 3 is_stmt 0 view .LVU284
 1063 0082 0135     		adds	r5, r5, #1
 1064              	.LVL83:
 141:Core/Src/main.c ****       }
 1065              		.loc 1 141 3 view .LVU285
 1066 0084 ECE7     		b	.L75
 1067              	.LVL84:
 1068              	.L78:
 136:Core/Src/main.c **** 	}
 1069              		.loc 1 136 4 is_stmt 1 view .LVU286
 1070 0086 0848     		ldr	r0, .L82+24
ARM GAS  /tmp/ccVvGxMz.s 			page 116


 1071 0088 FFF7FEFF 		bl	printf
 1072              	.LVL85:
 1073 008c E4E7     		b	.L79
 1074              	.L83:
 1075 008e 00BF     		.align	2
 1076              	.L82:
 1077 0090 00000000 		.word	.LANCHOR2
 1078 0094 00440040 		.word	1073759232
 1079 0098 00000000 		.word	.LC11
 1080 009c 14000000 		.word	.LC12
 1081 00a0 1C000000 		.word	.LC13
 1082 00a4 00000000 		.word	.LANCHOR3
 1083 00a8 24000000 		.word	.LC14
 1084              		.cfi_endproc
 1085              	.LFE352:
 1087              		.global	commands
 1088              		.section	.rodata.str1.4,"aMS",%progbits,1
 1089              		.align	2
 1090              	.LC15:
 1091 0000 68656C70 		.ascii	"help\000"
 1091      00
 1092 0005 000000   		.align	2
 1093              	.LC16:
 1094 0008 6C6F6600 		.ascii	"lof\000"
 1095              		.align	2
 1096              	.LC17:
 1097 000c 6C6F6E00 		.ascii	"lon\000"
 1098              		.align	2
 1099              	.LC18:
 1100 0010 74657374 		.ascii	"test\000"
 1100      00
 1101              		.global	led_on
 1102              		.global	rx_queue
 1103              		.global	huart2
 1104              		.section	.bss.huart2,"aw",%nobits
 1105              		.align	2
 1106              		.set	.LANCHOR2,. + 0
 1109              	huart2:
 1110 0000 00000000 		.space	132
 1110      00000000 
 1110      00000000 
 1110      00000000 
 1110      00000000 
 1111              		.section	.bss.led_on,"aw",%nobits
 1112              		.align	2
 1113              		.set	.LANCHOR0,. + 0
 1116              	led_on:
 1117 0000 00000000 		.space	4
 1118              		.section	.bss.rx_queue,"aw",%nobits
 1119              		.align	2
 1120              		.set	.LANCHOR3,. + 0
 1123              	rx_queue:
 1124 0000 00000000 		.space	40
 1124      00000000 
 1124      00000000 
 1124      00000000 
 1124      00000000 
ARM GAS  /tmp/ccVvGxMz.s 			page 117


 1125              		.section	.data.commands,"aw"
 1126              		.align	2
 1127              		.set	.LANCHOR1,. + 0
 1130              	commands:
 1131 0000 00000000 		.word	.LC15
 1132 0004 00000000 		.word	help_command
 1133 0008 08000000 		.word	.LC16
 1134 000c 00000000 		.word	lof_command
 1135 0010 0C000000 		.word	.LC17
 1136 0014 00000000 		.word	lon_command
 1137 0018 10000000 		.word	.LC18
 1138 001c 00000000 		.word	test_command
 1139 0020 00000000 		.word	0
 1140 0024 00000000 		.word	0
 1141              		.text
 1142              	.Letext0:
 1143              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1144              		.file 5 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1145              		.file 6 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/CMSIS/Device/ST/STM32
 1146              		.file 7 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/
 1147              		.file 8 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/
 1148              		.file 9 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver/
 1149              		.file 10 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver
 1150              		.file 11 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver
 1151              		.file 12 "Core/Inc/command.h"
 1152              		.file 13 "Core/Inc/queue.h"
 1153              		.file 14 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 1154              		.file 15 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/string.h"
 1155              		.file 16 "<built-in>"
 1156              		.file 17 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver
 1157              		.file 18 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver
 1158              		.file 19 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver
 1159              		.file 20 "/home/barnecle/STM32Cube/Repository/STM32Cube_FW_L4_V1.17.1/Drivers/STM32L4xx_HAL_Driver
 1160              		.file 21 "Core/Inc/retarget.h"
ARM GAS  /tmp/ccVvGxMz.s 			page 118


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccVvGxMz.s:20     .rodata.help_command.str1.4:0000000000000000 $d
     /tmp/ccVvGxMz.s:33     .text.help_command:0000000000000000 $t
     /tmp/ccVvGxMz.s:39     .text.help_command:0000000000000000 help_command
     /tmp/ccVvGxMz.s:76     .text.help_command:000000000000001c $d
     /tmp/ccVvGxMz.s:84     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccVvGxMz.s:89     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccVvGxMz.s:193    .text.MX_GPIO_Init:000000000000006c $d
     /tmp/ccVvGxMz.s:199    .rodata.lon_command.str1.4:0000000000000000 $d
     /tmp/ccVvGxMz.s:206    .text.lon_command:0000000000000000 $t
     /tmp/ccVvGxMz.s:212    .text.lon_command:0000000000000000 lon_command
     /tmp/ccVvGxMz.s:256    .text.lon_command:0000000000000028 $d
     /tmp/ccVvGxMz.s:264    .rodata.lof_command.str1.4:0000000000000000 $d
     /tmp/ccVvGxMz.s:271    .text.lof_command:0000000000000000 $t
     /tmp/ccVvGxMz.s:277    .text.lof_command:0000000000000000 lof_command
     /tmp/ccVvGxMz.s:321    .text.lof_command:0000000000000028 $d
     /tmp/ccVvGxMz.s:329    .rodata.test_command.str1.4:0000000000000000 $d
     /tmp/ccVvGxMz.s:336    .text.test_command:0000000000000000 $t
     /tmp/ccVvGxMz.s:342    .text.test_command:0000000000000000 test_command
     /tmp/ccVvGxMz.s:397    .text.test_command:0000000000000024 $d
     /tmp/ccVvGxMz.s:403    .text.parse_command:0000000000000000 $t
     /tmp/ccVvGxMz.s:409    .text.parse_command:0000000000000000 parse_command
     /tmp/ccVvGxMz.s:501    .rodata.execute_command.str1.4:0000000000000000 $d
     /tmp/ccVvGxMz.s:505    .text.execute_command:0000000000000000 $t
     /tmp/ccVvGxMz.s:511    .text.execute_command:0000000000000000 execute_command
     /tmp/ccVvGxMz.s:628    .text.execute_command:0000000000000054 $d
     /tmp/ccVvGxMz.s:634    .text.Error_Handler:0000000000000000 $t
     /tmp/ccVvGxMz.s:640    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccVvGxMz.s:672    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccVvGxMz.s:677    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccVvGxMz.s:738    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccVvGxMz.s:744    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccVvGxMz.s:750    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccVvGxMz.s:874    .text.SystemClock_Config:0000000000000080 $d
     /tmp/ccVvGxMz.s:879    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccVvGxMz.s:892    .text.main:0000000000000000 $t
     /tmp/ccVvGxMz.s:898    .text.main:0000000000000000 main
     /tmp/ccVvGxMz.s:1077   .text.main:0000000000000090 $d
     /tmp/ccVvGxMz.s:1130   .data.commands:0000000000000000 commands
     /tmp/ccVvGxMz.s:1089   .rodata.str1.4:0000000000000000 $d
     /tmp/ccVvGxMz.s:1116   .bss.led_on:0000000000000000 led_on
     /tmp/ccVvGxMz.s:1123   .bss.rx_queue:0000000000000000 rx_queue
     /tmp/ccVvGxMz.s:1109   .bss.huart2:0000000000000000 huart2
     /tmp/ccVvGxMz.s:1105   .bss.huart2:0000000000000000 $d
     /tmp/ccVvGxMz.s:1112   .bss.led_on:0000000000000000 $d
     /tmp/ccVvGxMz.s:1119   .bss.rx_queue:0000000000000000 $d
     /tmp/ccVvGxMz.s:1126   .data.commands:0000000000000000 $d

UNDEFINED SYMBOLS
printf
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_TogglePin
puts
putchar
strcmp
ARM GAS  /tmp/ccVvGxMz.s 			page 119


HAL_UART_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
RetargetInit
dequeue
