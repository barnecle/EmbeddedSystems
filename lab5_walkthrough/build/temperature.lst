ARM GAS  /tmp/ccwlDUMz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"temperature.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.read_temp,"ax",%progbits
  18              		.align	1
  19              		.global	read_temp
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	read_temp:
  27              	.LFB292:
  28              		.file 1 "Core/Src/temperature.c"
   1:Core/Src/temperature.c **** /* temperature.c
   2:Core/Src/temperature.c ****  * Description: STM32L432KC Temperture Read Function 
   3:Core/Src/temperature.c ****  *
   4:Core/Src/temperature.c ****  * Author: Bryce Himebaugh 
   5:Core/Src/temperature.c ****  * Contact: bhimebau@indiana.edu
   6:Core/Src/temperature.c ****  * Date: 04.20.2019
   7:Core/Src/temperature.c ****  * Copyright (C) 2019
   8:Core/Src/temperature.c ****  *
   9:Core/Src/temperature.c ****  */
  10:Core/Src/temperature.c **** 
  11:Core/Src/temperature.c **** #include "main.h"
  12:Core/Src/temperature.c **** #include <string.h>
  13:Core/Src/temperature.c **** #include <stdio.h>
  14:Core/Src/temperature.c **** #include "temperature.h"
  15:Core/Src/temperature.c **** #include "battery.h"
  16:Core/Src/temperature.c **** 
  17:Core/Src/temperature.c **** extern ADC_HandleTypeDef hadc1;
  18:Core/Src/temperature.c **** 
  19:Core/Src/temperature.c **** 
  20:Core/Src/temperature.c **** void temp_command(char *arguments) {
  21:Core/Src/temperature.c ****   if (arguments) {
  22:Core/Src/temperature.c ****     printf("NOK\n\r");
  23:Core/Src/temperature.c ****   }
  24:Core/Src/temperature.c ****   else {
  25:Core/Src/temperature.c ****     printf("%d\n\r",(int)read_temp());
  26:Core/Src/temperature.c ****     printf("OK\n\r");
  27:Core/Src/temperature.c ****   }
  28:Core/Src/temperature.c **** }
  29:Core/Src/temperature.c **** 
  30:Core/Src/temperature.c **** uint32_t read_temp(void) {
ARM GAS  /tmp/ccwlDUMz.s 			page 2


  29              		.loc 1 30 26 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  31:Core/Src/temperature.c ****   static uint32_t first_time_up = 1;
  40              		.loc 1 31 3 view .LVU1
  32:Core/Src/temperature.c ****   static ADC_ChannelConfTypeDef sConfig = {0};
  41              		.loc 1 32 3 view .LVU2
  33:Core/Src/temperature.c ****   uint32_t rawTemp;
  42              		.loc 1 33 3 view .LVU3
  34:Core/Src/temperature.c ****   uint32_t vref;
  43              		.loc 1 34 3 view .LVU4
  35:Core/Src/temperature.c ****   
  36:Core/Src/temperature.c ****     
  37:Core/Src/temperature.c ****   if (first_time_up) {
  44              		.loc 1 37 3 view .LVU5
  45              		.loc 1 37 7 is_stmt 0 view .LVU6
  46 0002 234B     		ldr	r3, .L7
  47 0004 1B68     		ldr	r3, [r3]
  48              		.loc 1 37 6 view .LVU7
  49 0006 6BB1     		cbz	r3, .L2
  38:Core/Src/temperature.c ****     sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
  50              		.loc 1 38 5 is_stmt 1 view .LVU8
  51              		.loc 1 38 21 is_stmt 0 view .LVU9
  52 0008 224B     		ldr	r3, .L7+4
  53 000a 234A     		ldr	r2, .L7+8
  54 000c 1A60     		str	r2, [r3]
  39:Core/Src/temperature.c ****     sConfig.Rank = ADC_REGULAR_RANK_1;
  55              		.loc 1 39 5 is_stmt 1 view .LVU10
  56              		.loc 1 39 18 is_stmt 0 view .LVU11
  57 000e 0622     		movs	r2, #6
  58 0010 5A60     		str	r2, [r3, #4]
  40:Core/Src/temperature.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_47CYCLES_5;
  59              		.loc 1 40 5 is_stmt 1 view .LVU12
  60              		.loc 1 40 26 is_stmt 0 view .LVU13
  61 0012 0422     		movs	r2, #4
  62 0014 9A60     		str	r2, [r3, #8]
  41:Core/Src/temperature.c ****     sConfig.SingleDiff = ADC_SINGLE_ENDED;
  63              		.loc 1 41 5 is_stmt 1 view .LVU14
  64              		.loc 1 41 24 is_stmt 0 view .LVU15
  65 0016 7F21     		movs	r1, #127
  66 0018 D960     		str	r1, [r3, #12]
  42:Core/Src/temperature.c ****     sConfig.OffsetNumber = ADC_OFFSET_NONE;
  67              		.loc 1 42 5 is_stmt 1 view .LVU16
  68              		.loc 1 42 26 is_stmt 0 view .LVU17
  69 001a 1A61     		str	r2, [r3, #16]
  43:Core/Src/temperature.c ****     sConfig.Offset = 0;
  70              		.loc 1 43 5 is_stmt 1 view .LVU18
  71              		.loc 1 43 20 is_stmt 0 view .LVU19
  72 001c 0022     		movs	r2, #0
ARM GAS  /tmp/ccwlDUMz.s 			page 3


  73 001e 5A61     		str	r2, [r3, #20]
  44:Core/Src/temperature.c ****     first_time_up = 0;
  74              		.loc 1 44 5 is_stmt 1 view .LVU20
  75              		.loc 1 44 19 is_stmt 0 view .LVU21
  76 0020 1B4B     		ldr	r3, .L7
  77 0022 1A60     		str	r2, [r3]
  78              	.L2:
  45:Core/Src/temperature.c ****   }
  46:Core/Src/temperature.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
  79              		.loc 1 46 3 is_stmt 1 view .LVU22
  80              		.loc 1 46 16 is_stmt 0 view .LVU23
  81 0024 1B49     		ldr	r1, .L7+4
  82 0026 0623     		movs	r3, #6
  83 0028 4B60     		str	r3, [r1, #4]
  47:Core/Src/temperature.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
  84              		.loc 1 47 3 is_stmt 1 view .LVU24
  85              		.loc 1 47 7 is_stmt 0 view .LVU25
  86 002a 1C48     		ldr	r0, .L7+12
  87 002c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  88              	.LVL0:
  89              		.loc 1 47 6 view .LVU26
  90 0030 58BB     		cbnz	r0, .L6
  91              	.L4:
  48:Core/Src/temperature.c ****       Error_Handler();
  49:Core/Src/temperature.c ****   }
  50:Core/Src/temperature.c ****   while (HAL_ADCEx_Calibration_Start(&hadc1,ADC_SINGLE_ENDED) != HAL_OK);   // Calibrate the A2D
  92              		.loc 1 50 73 is_stmt 1 discriminator 1 view .LVU27
  93              		.loc 1 50 9 discriminator 1 view .LVU28
  94              		.loc 1 50 10 is_stmt 0 discriminator 1 view .LVU29
  95 0032 7F21     		movs	r1, #127
  96 0034 1948     		ldr	r0, .L7+12
  97 0036 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
  98              	.LVL1:
  99              		.loc 1 50 9 discriminator 1 view .LVU30
 100 003a 0028     		cmp	r0, #0
 101 003c F9D1     		bne	.L4
  51:Core/Src/temperature.c ****   HAL_ADC_Start(&hadc1); 
 102              		.loc 1 51 3 is_stmt 1 view .LVU31
 103 003e 174D     		ldr	r5, .L7+12
 104 0040 2846     		mov	r0, r5
 105 0042 FFF7FEFF 		bl	HAL_ADC_Start
 106              	.LVL2:
  52:Core/Src/temperature.c ****   HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 107              		.loc 1 52 3 view .LVU32
 108 0046 4FF0FF31 		mov	r1, #-1
 109 004a 2846     		mov	r0, r5
 110 004c FFF7FEFF 		bl	HAL_ADC_PollForConversion
 111              	.LVL3:
  53:Core/Src/temperature.c ****   rawTemp = HAL_ADC_GetValue(&hadc1);
 112              		.loc 1 53 3 view .LVU33
 113              		.loc 1 53 13 is_stmt 0 view .LVU34
 114 0050 2846     		mov	r0, r5
 115 0052 FFF7FEFF 		bl	HAL_ADC_GetValue
 116              	.LVL4:
 117 0056 0446     		mov	r4, r0
 118              	.LVL5:
  54:Core/Src/temperature.c ****   HAL_ADC_Stop(&hadc1);
ARM GAS  /tmp/ccwlDUMz.s 			page 4


 119              		.loc 1 54 3 is_stmt 1 view .LVU35
 120 0058 2846     		mov	r0, r5
 121              	.LVL6:
 122              		.loc 1 54 3 is_stmt 0 view .LVU36
 123 005a FFF7FEFF 		bl	HAL_ADC_Stop
 124              	.LVL7:
  55:Core/Src/temperature.c ****   vref = read_vrefint();
 125              		.loc 1 55 3 is_stmt 1 view .LVU37
 126              		.loc 1 55 10 is_stmt 0 view .LVU38
 127 005e FFF7FEFF 		bl	read_vrefint
 128              	.LVL8:
  56:Core/Src/temperature.c ****   return (__HAL_ADC_CALC_TEMPERATURE(vref,
 129              		.loc 1 56 3 is_stmt 1 view .LVU39
 130              		.loc 1 56 11 is_stmt 0 view .LVU40
 131 0062 04FB00F0 		mul	r0, r4, r0
 132              	.LVL9:
 133              		.loc 1 56 11 view .LVU41
 134 0066 0E4C     		ldr	r4, .L7+16
 135              	.LVL10:
 136              		.loc 1 56 11 view .LVU42
 137 0068 A4FB0030 		umull	r3, r0, r4, r0
 138 006c 0D4B     		ldr	r3, .L7+20
 139 006e B3F8A820 		ldrh	r2, [r3, #168]
 140 0072 C2EB9010 		rsb	r0, r2, r0, lsr #6
 141 0076 6421     		movs	r1, #100
 142 0078 01FB00F0 		mul	r0, r1, r0
 143 007c B3F8CA30 		ldrh	r3, [r3, #202]
 144 0080 9B1A     		subs	r3, r3, r2
 145 0082 90FBF3F0 		sdiv	r0, r0, r3
  57:Core/Src/temperature.c ****                                      rawTemp,
  58:Core/Src/temperature.c ****                                      ADC_RESOLUTION_12B));
  59:Core/Src/temperature.c **** }
 146              		.loc 1 59 1 view .LVU43
 147 0086 1E30     		adds	r0, r0, #30
 148 0088 38BD     		pop	{r3, r4, r5, pc}
 149              	.L6:
  48:Core/Src/temperature.c ****   }
 150              		.loc 1 48 7 is_stmt 1 view .LVU44
 151 008a FFF7FEFF 		bl	Error_Handler
 152              	.LVL11:
 153 008e D0E7     		b	.L4
 154              	.L8:
 155              		.align	2
 156              	.L7:
 157 0090 00000000 		.word	.LANCHOR0
 158 0094 00000000 		.word	.LANCHOR1
 159 0098 000052C7 		.word	-950927360
 160 009c 00000000 		.word	hadc1
 161 00a0 F1197605 		.word	91625969
 162 00a4 0075FF1F 		.word	536835328
 163              		.cfi_endproc
 164              	.LFE292:
 166              		.section	.rodata.temp_command.str1.4,"aMS",%progbits,1
 167              		.align	2
 168              	.LC0:
 169 0000 4E4F4B0A 		.ascii	"NOK\012\015\000"
 169      0D00
ARM GAS  /tmp/ccwlDUMz.s 			page 5


 170 0006 0000     		.align	2
 171              	.LC1:
 172 0008 25640A0D 		.ascii	"%d\012\015\000"
 172      00
 173 000d 000000   		.align	2
 174              	.LC2:
 175 0010 4F4B0A0D 		.ascii	"OK\012\015\000"
 175      00
 176              		.section	.text.temp_command,"ax",%progbits
 177              		.align	1
 178              		.global	temp_command
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv4-sp-d16
 184              	temp_command:
 185              	.LVL12:
 186              	.LFB291:
  20:Core/Src/temperature.c ****   if (arguments) {
 187              		.loc 1 20 36 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
  20:Core/Src/temperature.c ****   if (arguments) {
 191              		.loc 1 20 36 is_stmt 0 view .LVU46
 192 0000 08B5     		push	{r3, lr}
 193              	.LCFI1:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 3, -8
 196              		.cfi_offset 14, -4
  21:Core/Src/temperature.c ****     printf("NOK\n\r");
 197              		.loc 1 21 3 is_stmt 1 view .LVU47
  21:Core/Src/temperature.c ****     printf("NOK\n\r");
 198              		.loc 1 21 6 is_stmt 0 view .LVU48
 199 0002 18B1     		cbz	r0, .L10
  22:Core/Src/temperature.c ****   }
 200              		.loc 1 22 5 is_stmt 1 view .LVU49
 201 0004 0648     		ldr	r0, .L13
 202              	.LVL13:
  22:Core/Src/temperature.c ****   }
 203              		.loc 1 22 5 is_stmt 0 view .LVU50
 204 0006 FFF7FEFF 		bl	printf
 205              	.LVL14:
 206              	.L9:
  28:Core/Src/temperature.c **** 
 207              		.loc 1 28 1 view .LVU51
 208 000a 08BD     		pop	{r3, pc}
 209              	.LVL15:
 210              	.L10:
  25:Core/Src/temperature.c ****     printf("OK\n\r");
 211              		.loc 1 25 5 is_stmt 1 view .LVU52
  25:Core/Src/temperature.c ****     printf("OK\n\r");
 212              		.loc 1 25 26 is_stmt 0 view .LVU53
 213 000c FFF7FEFF 		bl	read_temp
 214              	.LVL16:
  25:Core/Src/temperature.c ****     printf("OK\n\r");
 215              		.loc 1 25 26 view .LVU54
ARM GAS  /tmp/ccwlDUMz.s 			page 6


 216 0010 0146     		mov	r1, r0
  25:Core/Src/temperature.c ****     printf("OK\n\r");
 217              		.loc 1 25 5 view .LVU55
 218 0012 0448     		ldr	r0, .L13+4
 219 0014 FFF7FEFF 		bl	printf
 220              	.LVL17:
  26:Core/Src/temperature.c ****   }
 221              		.loc 1 26 5 is_stmt 1 view .LVU56
 222 0018 0348     		ldr	r0, .L13+8
 223 001a FFF7FEFF 		bl	printf
 224              	.LVL18:
  28:Core/Src/temperature.c **** 
 225              		.loc 1 28 1 is_stmt 0 view .LVU57
 226 001e F4E7     		b	.L9
 227              	.L14:
 228              		.align	2
 229              	.L13:
 230 0020 00000000 		.word	.LC0
 231 0024 08000000 		.word	.LC1
 232 0028 10000000 		.word	.LC2
 233              		.cfi_endproc
 234              	.LFE291:
 236              		.section	.bss.sConfig.0,"aw",%nobits
 237              		.align	2
 238              		.set	.LANCHOR1,. + 0
 241              	sConfig.0:
 242 0000 00000000 		.space	24
 242      00000000 
 242      00000000 
 242      00000000 
 242      00000000 
 243              		.section	.data.first_time_up.1,"aw"
 244              		.align	2
 245              		.set	.LANCHOR0,. + 0
 248              	first_time_up.1:
 249 0000 01000000 		.word	1
 250              		.text
 251              	.Letext0:
 252              		.file 2 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_
 253              		.file 3 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdi
 254              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 255              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 256              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 257              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 258              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 259              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 260              		.file 10 "Core/Inc/battery.h"
 261              		.file 11 "Core/Inc/main.h"
 262              		.file 12 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdio.h"
ARM GAS  /tmp/ccwlDUMz.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 temperature.c
     /tmp/ccwlDUMz.s:18     .text.read_temp:0000000000000000 $t
     /tmp/ccwlDUMz.s:26     .text.read_temp:0000000000000000 read_temp
     /tmp/ccwlDUMz.s:157    .text.read_temp:0000000000000090 $d
     /tmp/ccwlDUMz.s:167    .rodata.temp_command.str1.4:0000000000000000 $d
     /tmp/ccwlDUMz.s:177    .text.temp_command:0000000000000000 $t
     /tmp/ccwlDUMz.s:184    .text.temp_command:0000000000000000 temp_command
     /tmp/ccwlDUMz.s:230    .text.temp_command:0000000000000020 $d
     /tmp/ccwlDUMz.s:237    .bss.sConfig.0:0000000000000000 $d
     /tmp/ccwlDUMz.s:241    .bss.sConfig.0:0000000000000000 sConfig.0
     /tmp/ccwlDUMz.s:244    .data.first_time_up.1:0000000000000000 $d
     /tmp/ccwlDUMz.s:248    .data.first_time_up.1:0000000000000000 first_time_up.1

UNDEFINED SYMBOLS
HAL_ADC_ConfigChannel
HAL_ADCEx_Calibration_Start
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
read_vrefint
Error_Handler
hadc1
printf
