ARM GAS  /tmp/cc8fmbDk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_Init:
  27              	.LFB132:
  28              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
ARM GAS  /tmp/cc8fmbDk.s 			page 2


  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ==================================
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
ARM GAS  /tmp/cc8fmbDk.s 			page 3


  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
ARM GAS  /tmp/cc8fmbDk.s 			page 4


 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
ARM GAS  /tmp/cc8fmbDk.s 			page 5


 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
ARM GAS  /tmp/cc8fmbDk.s 			page 6


 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  29              		.loc 1 313 1
  30              		.cfi_startproc
ARM GAS  /tmp/cc8fmbDk.s 			page 7


  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 315 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 317 12
  50 000e 0123     		movs	r3, #1
  51 0010 40E0     		b	.L3
  52              	.L2:
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 331 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 5B6F     		ldr	r3, [r3, #116]
  56              		.loc 1 331 6
  57 0016 002B     		cmp	r3, #0
  58 0018 06D1     		bne	.L4
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  59              		.loc 1 334 17
  60 001a 7B68     		ldr	r3, [r7, #4]
  61 001c 0022     		movs	r2, #0
  62 001e 83F87020 		strb	r2, [r3, #112]
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc8fmbDk.s 			page 8


 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  63              		.loc 1 348 5
  64 0022 7868     		ldr	r0, [r7, #4]
  65 0024 FFF7FEFF 		bl	HAL_UART_MspInit
  66              	.L4:
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  67              		.loc 1 352 17
  68 0028 7B68     		ldr	r3, [r7, #4]
  69 002a 2422     		movs	r2, #36
  70 002c 5A67     		str	r2, [r3, #116]
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  71              		.loc 1 354 3
  72 002e 7B68     		ldr	r3, [r7, #4]
  73 0030 1B68     		ldr	r3, [r3]
  74 0032 1A68     		ldr	r2, [r3]
  75 0034 7B68     		ldr	r3, [r7, #4]
  76 0036 1B68     		ldr	r3, [r3]
  77 0038 22F00102 		bic	r2, r2, #1
  78 003c 1A60     		str	r2, [r3]
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  79              		.loc 1 357 7
  80 003e 7868     		ldr	r0, [r7, #4]
  81 0040 FFF7FEFF 		bl	UART_SetConfig
  82 0044 0346     		mov	r3, r0
  83              		.loc 1 357 6
  84 0046 012B     		cmp	r3, #1
  85 0048 01D1     		bne	.L5
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  86              		.loc 1 359 12
  87 004a 0123     		movs	r3, #1
  88 004c 22E0     		b	.L3
  89              	.L5:
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  90              		.loc 1 362 26
  91 004e 7B68     		ldr	r3, [r7, #4]
  92 0050 5B6A     		ldr	r3, [r3, #36]
  93              		.loc 1 362 6
  94 0052 002B     		cmp	r3, #0
  95 0054 02D0     		beq	.L6
ARM GAS  /tmp/cc8fmbDk.s 			page 9


 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  96              		.loc 1 364 5
  97 0056 7868     		ldr	r0, [r7, #4]
  98 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
  99              	.L6:
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 100              		.loc 1 370 3
 101 005c 7B68     		ldr	r3, [r7, #4]
 102 005e 1B68     		ldr	r3, [r3]
 103 0060 5A68     		ldr	r2, [r3, #4]
 104 0062 7B68     		ldr	r3, [r7, #4]
 105 0064 1B68     		ldr	r3, [r3]
 106 0066 22F49042 		bic	r2, r2, #18432
 107 006a 5A60     		str	r2, [r3, #4]
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 108              		.loc 1 371 3
 109 006c 7B68     		ldr	r3, [r7, #4]
 110 006e 1B68     		ldr	r3, [r3]
 111 0070 9A68     		ldr	r2, [r3, #8]
 112 0072 7B68     		ldr	r3, [r7, #4]
 113 0074 1B68     		ldr	r3, [r3]
 114 0076 22F02A02 		bic	r2, r2, #42
 115 007a 9A60     		str	r2, [r3, #8]
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 116              		.loc 1 373 3
 117 007c 7B68     		ldr	r3, [r7, #4]
 118 007e 1B68     		ldr	r3, [r3]
 119 0080 1A68     		ldr	r2, [r3]
 120 0082 7B68     		ldr	r3, [r7, #4]
 121 0084 1B68     		ldr	r3, [r3]
 122 0086 42F00102 		orr	r2, r2, #1
 123 008a 1A60     		str	r2, [r3]
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 124              		.loc 1 376 11
 125 008c 7868     		ldr	r0, [r7, #4]
 126 008e FFF7FEFF 		bl	UART_CheckIdleState
 127 0092 0346     		mov	r3, r0
 128              	.L3:
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 129              		.loc 1 377 1
 130 0094 1846     		mov	r0, r3
 131 0096 0837     		adds	r7, r7, #8
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 8
 134 0098 BD46     		mov	sp, r7
 135              	.LCFI4:
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
ARM GAS  /tmp/cc8fmbDk.s 			page 10


 138 009a 80BD     		pop	{r7, pc}
 139              		.cfi_endproc
 140              	.LFE132:
 142              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 143              		.align	1
 144              		.global	HAL_HalfDuplex_Init
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	HAL_HalfDuplex_Init:
 151              	.LFB133:
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 152              		.loc 1 386 1
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              	.LCFI5:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 82B0     		sub	sp, sp, #8
 162              	.LCFI6:
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              	.LCFI7:
 166              		.cfi_def_cfa_register 7
 167 0006 7860     		str	r0, [r7, #4]
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 168              		.loc 1 388 6
 169 0008 7B68     		ldr	r3, [r7, #4]
 170 000a 002B     		cmp	r3, #0
 171 000c 01D1     		bne	.L8
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 172              		.loc 1 390 12
 173 000e 0123     		movs	r3, #1
 174 0010 48E0     		b	.L9
 175              	.L8:
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 176              		.loc 1 396 12
 177 0012 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 11


 178 0014 5B6F     		ldr	r3, [r3, #116]
 179              		.loc 1 396 6
 180 0016 002B     		cmp	r3, #0
 181 0018 06D1     		bne	.L10
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 182              		.loc 1 399 17
 183 001a 7B68     		ldr	r3, [r7, #4]
 184 001c 0022     		movs	r2, #0
 185 001e 83F87020 		strb	r2, [r3, #112]
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 186              		.loc 1 413 5
 187 0022 7868     		ldr	r0, [r7, #4]
 188 0024 FFF7FEFF 		bl	HAL_UART_MspInit
 189              	.L10:
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 190              		.loc 1 417 17
 191 0028 7B68     		ldr	r3, [r7, #4]
 192 002a 2422     		movs	r2, #36
 193 002c 5A67     		str	r2, [r3, #116]
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 194              		.loc 1 419 3
 195 002e 7B68     		ldr	r3, [r7, #4]
 196 0030 1B68     		ldr	r3, [r3]
 197 0032 1A68     		ldr	r2, [r3]
 198 0034 7B68     		ldr	r3, [r7, #4]
 199 0036 1B68     		ldr	r3, [r3]
 200 0038 22F00102 		bic	r2, r2, #1
 201 003c 1A60     		str	r2, [r3]
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 202              		.loc 1 422 7
 203 003e 7868     		ldr	r0, [r7, #4]
 204 0040 FFF7FEFF 		bl	UART_SetConfig
 205 0044 0346     		mov	r3, r0
 206              		.loc 1 422 6
 207 0046 012B     		cmp	r3, #1
 208 0048 01D1     		bne	.L11
ARM GAS  /tmp/cc8fmbDk.s 			page 12


 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 209              		.loc 1 424 12
 210 004a 0123     		movs	r3, #1
 211 004c 2AE0     		b	.L9
 212              	.L11:
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 213              		.loc 1 427 26
 214 004e 7B68     		ldr	r3, [r7, #4]
 215 0050 5B6A     		ldr	r3, [r3, #36]
 216              		.loc 1 427 6
 217 0052 002B     		cmp	r3, #0
 218 0054 02D0     		beq	.L12
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 219              		.loc 1 429 5
 220 0056 7868     		ldr	r0, [r7, #4]
 221 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
 222              	.L12:
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 223              		.loc 1 435 3
 224 005c 7B68     		ldr	r3, [r7, #4]
 225 005e 1B68     		ldr	r3, [r3]
 226 0060 5A68     		ldr	r2, [r3, #4]
 227 0062 7B68     		ldr	r3, [r7, #4]
 228 0064 1B68     		ldr	r3, [r3]
 229 0066 22F49042 		bic	r2, r2, #18432
 230 006a 5A60     		str	r2, [r3, #4]
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 231              		.loc 1 436 3
 232 006c 7B68     		ldr	r3, [r7, #4]
 233 006e 1B68     		ldr	r3, [r3]
 234 0070 9A68     		ldr	r2, [r3, #8]
 235 0072 7B68     		ldr	r3, [r7, #4]
 236 0074 1B68     		ldr	r3, [r3]
 237 0076 22F02202 		bic	r2, r2, #34
 238 007a 9A60     		str	r2, [r3, #8]
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 239              		.loc 1 439 3
 240 007c 7B68     		ldr	r3, [r7, #4]
 241 007e 1B68     		ldr	r3, [r3]
 242 0080 9A68     		ldr	r2, [r3, #8]
 243 0082 7B68     		ldr	r3, [r7, #4]
 244 0084 1B68     		ldr	r3, [r3]
 245 0086 42F00802 		orr	r2, r2, #8
 246 008a 9A60     		str	r2, [r3, #8]
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
ARM GAS  /tmp/cc8fmbDk.s 			page 13


 247              		.loc 1 441 3
 248 008c 7B68     		ldr	r3, [r7, #4]
 249 008e 1B68     		ldr	r3, [r3]
 250 0090 1A68     		ldr	r2, [r3]
 251 0092 7B68     		ldr	r3, [r7, #4]
 252 0094 1B68     		ldr	r3, [r3]
 253 0096 42F00102 		orr	r2, r2, #1
 254 009a 1A60     		str	r2, [r3]
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 255              		.loc 1 444 11
 256 009c 7868     		ldr	r0, [r7, #4]
 257 009e FFF7FEFF 		bl	UART_CheckIdleState
 258 00a2 0346     		mov	r3, r0
 259              	.L9:
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 260              		.loc 1 445 1
 261 00a4 1846     		mov	r0, r3
 262 00a6 0837     		adds	r7, r7, #8
 263              	.LCFI8:
 264              		.cfi_def_cfa_offset 8
 265 00a8 BD46     		mov	sp, r7
 266              	.LCFI9:
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 00aa 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE133:
 273              		.section	.text.HAL_LIN_Init,"ax",%progbits
 274              		.align	1
 275              		.global	HAL_LIN_Init
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	HAL_LIN_Init:
 282              	.LFB134:
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 283              		.loc 1 459 1
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cc8fmbDk.s 			page 14


 288              	.LCFI10:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0002 82B0     		sub	sp, sp, #8
 293              	.LCFI11:
 294              		.cfi_def_cfa_offset 16
 295 0004 00AF     		add	r7, sp, #0
 296              	.LCFI12:
 297              		.cfi_def_cfa_register 7
 298 0006 7860     		str	r0, [r7, #4]
 299 0008 3960     		str	r1, [r7]
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 300              		.loc 1 461 6
 301 000a 7B68     		ldr	r3, [r7, #4]
 302 000c 002B     		cmp	r3, #0
 303 000e 01D1     		bne	.L14
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 304              		.loc 1 463 12
 305 0010 0123     		movs	r3, #1
 306 0012 5FE0     		b	.L15
 307              	.L14:
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 308              		.loc 1 472 18
 309 0014 7B68     		ldr	r3, [r7, #4]
 310 0016 DB69     		ldr	r3, [r3, #28]
 311              		.loc 1 472 6
 312 0018 B3F5004F 		cmp	r3, #32768
 313 001c 01D1     		bne	.L16
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 314              		.loc 1 474 12
 315 001e 0123     		movs	r3, #1
 316 0020 58E0     		b	.L15
 317              	.L16:
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 318              		.loc 1 477 18
 319 0022 7B68     		ldr	r3, [r7, #4]
 320 0024 9B68     		ldr	r3, [r3, #8]
 321              		.loc 1 477 6
 322 0026 002B     		cmp	r3, #0
 323 0028 01D0     		beq	.L17
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 324              		.loc 1 479 12
ARM GAS  /tmp/cc8fmbDk.s 			page 15


 325 002a 0123     		movs	r3, #1
 326 002c 52E0     		b	.L15
 327              	.L17:
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 328              		.loc 1 482 12
 329 002e 7B68     		ldr	r3, [r7, #4]
 330 0030 5B6F     		ldr	r3, [r3, #116]
 331              		.loc 1 482 6
 332 0032 002B     		cmp	r3, #0
 333 0034 06D1     		bne	.L18
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 334              		.loc 1 485 17
 335 0036 7B68     		ldr	r3, [r7, #4]
 336 0038 0022     		movs	r2, #0
 337 003a 83F87020 		strb	r2, [r3, #112]
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 338              		.loc 1 499 5
 339 003e 7868     		ldr	r0, [r7, #4]
 340 0040 FFF7FEFF 		bl	HAL_UART_MspInit
 341              	.L18:
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 342              		.loc 1 503 17
 343 0044 7B68     		ldr	r3, [r7, #4]
 344 0046 2422     		movs	r2, #36
 345 0048 5A67     		str	r2, [r3, #116]
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 346              		.loc 1 505 3
 347 004a 7B68     		ldr	r3, [r7, #4]
 348 004c 1B68     		ldr	r3, [r3]
 349 004e 1A68     		ldr	r2, [r3]
 350 0050 7B68     		ldr	r3, [r7, #4]
 351 0052 1B68     		ldr	r3, [r3]
 352 0054 22F00102 		bic	r2, r2, #1
 353 0058 1A60     		str	r2, [r3]
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
ARM GAS  /tmp/cc8fmbDk.s 			page 16


 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 354              		.loc 1 508 7
 355 005a 7868     		ldr	r0, [r7, #4]
 356 005c FFF7FEFF 		bl	UART_SetConfig
 357 0060 0346     		mov	r3, r0
 358              		.loc 1 508 6
 359 0062 012B     		cmp	r3, #1
 360 0064 01D1     		bne	.L19
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 361              		.loc 1 510 12
 362 0066 0123     		movs	r3, #1
 363 0068 34E0     		b	.L15
 364              	.L19:
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 365              		.loc 1 513 26
 366 006a 7B68     		ldr	r3, [r7, #4]
 367 006c 5B6A     		ldr	r3, [r3, #36]
 368              		.loc 1 513 6
 369 006e 002B     		cmp	r3, #0
 370 0070 02D0     		beq	.L20
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 371              		.loc 1 515 5
 372 0072 7868     		ldr	r0, [r7, #4]
 373 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 374              	.L20:
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 375              		.loc 1 521 3
 376 0078 7B68     		ldr	r3, [r7, #4]
 377 007a 1B68     		ldr	r3, [r3]
 378 007c 5A68     		ldr	r2, [r3, #4]
 379 007e 7B68     		ldr	r3, [r7, #4]
 380 0080 1B68     		ldr	r3, [r3]
 381 0082 22F40062 		bic	r2, r2, #2048
 382 0086 5A60     		str	r2, [r3, #4]
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 383              		.loc 1 522 3
 384 0088 7B68     		ldr	r3, [r7, #4]
 385 008a 1B68     		ldr	r3, [r3]
 386 008c 9A68     		ldr	r2, [r3, #8]
 387 008e 7B68     		ldr	r3, [r7, #4]
 388 0090 1B68     		ldr	r3, [r3]
 389 0092 22F02A02 		bic	r2, r2, #42
 390 0096 9A60     		str	r2, [r3, #8]
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 391              		.loc 1 525 3
 392 0098 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 17


 393 009a 1B68     		ldr	r3, [r3]
 394 009c 5A68     		ldr	r2, [r3, #4]
 395 009e 7B68     		ldr	r3, [r7, #4]
 396 00a0 1B68     		ldr	r3, [r3]
 397 00a2 42F48042 		orr	r2, r2, #16384
 398 00a6 5A60     		str	r2, [r3, #4]
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 399              		.loc 1 528 3
 400 00a8 7B68     		ldr	r3, [r7, #4]
 401 00aa 1B68     		ldr	r3, [r3]
 402 00ac 5B68     		ldr	r3, [r3, #4]
 403 00ae 23F02001 		bic	r1, r3, #32
 404 00b2 7B68     		ldr	r3, [r7, #4]
 405 00b4 1B68     		ldr	r3, [r3]
 406 00b6 3A68     		ldr	r2, [r7]
 407 00b8 0A43     		orrs	r2, r2, r1
 408 00ba 5A60     		str	r2, [r3, #4]
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 409              		.loc 1 530 3
 410 00bc 7B68     		ldr	r3, [r7, #4]
 411 00be 1B68     		ldr	r3, [r3]
 412 00c0 1A68     		ldr	r2, [r3]
 413 00c2 7B68     		ldr	r3, [r7, #4]
 414 00c4 1B68     		ldr	r3, [r3]
 415 00c6 42F00102 		orr	r2, r2, #1
 416 00ca 1A60     		str	r2, [r3]
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 417              		.loc 1 533 11
 418 00cc 7868     		ldr	r0, [r7, #4]
 419 00ce FFF7FEFF 		bl	UART_CheckIdleState
 420 00d2 0346     		mov	r3, r0
 421              	.L15:
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 422              		.loc 1 534 1
 423 00d4 1846     		mov	r0, r3
 424 00d6 0837     		adds	r7, r7, #8
 425              	.LCFI13:
 426              		.cfi_def_cfa_offset 8
 427 00d8 BD46     		mov	sp, r7
 428              	.LCFI14:
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 00da 80BD     		pop	{r7, pc}
 432              		.cfi_endproc
 433              	.LFE134:
 435              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 436              		.align	1
 437              		.global	HAL_MultiProcessor_Init
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc8fmbDk.s 			page 18


 443              	HAL_MultiProcessor_Init:
 444              	.LFB135:
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 445              		.loc 1 556 1
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 80B5     		push	{r7, lr}
 450              	.LCFI15:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 84B0     		sub	sp, sp, #16
 455              	.LCFI16:
 456              		.cfi_def_cfa_offset 24
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI17:
 459              		.cfi_def_cfa_register 7
 460 0006 F860     		str	r0, [r7, #12]
 461 0008 0B46     		mov	r3, r1
 462 000a 7A60     		str	r2, [r7, #4]
 463 000c FB72     		strb	r3, [r7, #11]
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 464              		.loc 1 558 6
 465 000e FB68     		ldr	r3, [r7, #12]
 466 0010 002B     		cmp	r3, #0
 467 0012 01D1     		bne	.L22
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 468              		.loc 1 560 12
 469 0014 0123     		movs	r3, #1
 470 0016 59E0     		b	.L23
 471              	.L22:
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc8fmbDk.s 			page 19


 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 472              		.loc 1 566 12
 473 0018 FB68     		ldr	r3, [r7, #12]
 474 001a 5B6F     		ldr	r3, [r3, #116]
 475              		.loc 1 566 6
 476 001c 002B     		cmp	r3, #0
 477 001e 06D1     		bne	.L24
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 478              		.loc 1 569 17
 479 0020 FB68     		ldr	r3, [r7, #12]
 480 0022 0022     		movs	r2, #0
 481 0024 83F87020 		strb	r2, [r3, #112]
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 482              		.loc 1 583 5
 483 0028 F868     		ldr	r0, [r7, #12]
 484 002a FFF7FEFF 		bl	HAL_UART_MspInit
 485              	.L24:
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 486              		.loc 1 587 17
 487 002e FB68     		ldr	r3, [r7, #12]
 488 0030 2422     		movs	r2, #36
 489 0032 5A67     		str	r2, [r3, #116]
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 490              		.loc 1 589 3
 491 0034 FB68     		ldr	r3, [r7, #12]
 492 0036 1B68     		ldr	r3, [r3]
 493 0038 1A68     		ldr	r2, [r3]
 494 003a FB68     		ldr	r3, [r7, #12]
 495 003c 1B68     		ldr	r3, [r3]
 496 003e 22F00102 		bic	r2, r2, #1
 497 0042 1A60     		str	r2, [r3]
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 498              		.loc 1 592 7
ARM GAS  /tmp/cc8fmbDk.s 			page 20


 499 0044 F868     		ldr	r0, [r7, #12]
 500 0046 FFF7FEFF 		bl	UART_SetConfig
 501 004a 0346     		mov	r3, r0
 502              		.loc 1 592 6
 503 004c 012B     		cmp	r3, #1
 504 004e 01D1     		bne	.L25
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 505              		.loc 1 594 12
 506 0050 0123     		movs	r3, #1
 507 0052 3BE0     		b	.L23
 508              	.L25:
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 509              		.loc 1 597 26
 510 0054 FB68     		ldr	r3, [r7, #12]
 511 0056 5B6A     		ldr	r3, [r3, #36]
 512              		.loc 1 597 6
 513 0058 002B     		cmp	r3, #0
 514 005a 02D0     		beq	.L26
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 515              		.loc 1 599 5
 516 005c F868     		ldr	r0, [r7, #12]
 517 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 518              	.L26:
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 519              		.loc 1 605 3
 520 0062 FB68     		ldr	r3, [r7, #12]
 521 0064 1B68     		ldr	r3, [r3]
 522 0066 5A68     		ldr	r2, [r3, #4]
 523 0068 FB68     		ldr	r3, [r7, #12]
 524 006a 1B68     		ldr	r3, [r3]
 525 006c 22F49042 		bic	r2, r2, #18432
 526 0070 5A60     		str	r2, [r3, #4]
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 527              		.loc 1 606 3
 528 0072 FB68     		ldr	r3, [r7, #12]
 529 0074 1B68     		ldr	r3, [r3]
 530 0076 9A68     		ldr	r2, [r3, #8]
 531 0078 FB68     		ldr	r3, [r7, #12]
 532 007a 1B68     		ldr	r3, [r3]
 533 007c 22F02A02 		bic	r2, r2, #42
 534 0080 9A60     		str	r2, [r3, #8]
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 535              		.loc 1 608 6
 536 0082 7B68     		ldr	r3, [r7, #4]
 537 0084 B3F5006F 		cmp	r3, #2048
 538 0088 0AD1     		bne	.L27
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc8fmbDk.s 			page 21


 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 539              		.loc 1 611 5
 540 008a FB68     		ldr	r3, [r7, #12]
 541 008c 1B68     		ldr	r3, [r3]
 542 008e 5B68     		ldr	r3, [r3, #4]
 543 0090 23F07F41 		bic	r1, r3, #-16777216
 544 0094 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 545 0096 1A06     		lsls	r2, r3, #24
 546 0098 FB68     		ldr	r3, [r7, #12]
 547 009a 1B68     		ldr	r3, [r3]
 548 009c 0A43     		orrs	r2, r2, r1
 549 009e 5A60     		str	r2, [r3, #4]
 550              	.L27:
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 551              		.loc 1 615 3
 552 00a0 FB68     		ldr	r3, [r7, #12]
 553 00a2 1B68     		ldr	r3, [r3]
 554 00a4 1B68     		ldr	r3, [r3]
 555 00a6 23F40061 		bic	r1, r3, #2048
 556 00aa FB68     		ldr	r3, [r7, #12]
 557 00ac 1B68     		ldr	r3, [r3]
 558 00ae 7A68     		ldr	r2, [r7, #4]
 559 00b0 0A43     		orrs	r2, r2, r1
 560 00b2 1A60     		str	r2, [r3]
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 561              		.loc 1 617 3
 562 00b4 FB68     		ldr	r3, [r7, #12]
 563 00b6 1B68     		ldr	r3, [r3]
 564 00b8 1A68     		ldr	r2, [r3]
 565 00ba FB68     		ldr	r3, [r7, #12]
 566 00bc 1B68     		ldr	r3, [r3]
 567 00be 42F00102 		orr	r2, r2, #1
 568 00c2 1A60     		str	r2, [r3]
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 569              		.loc 1 620 11
 570 00c4 F868     		ldr	r0, [r7, #12]
 571 00c6 FFF7FEFF 		bl	UART_CheckIdleState
 572 00ca 0346     		mov	r3, r0
 573              	.L23:
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 574              		.loc 1 621 1
 575 00cc 1846     		mov	r0, r3
 576 00ce 1037     		adds	r7, r7, #16
 577              	.LCFI18:
 578              		.cfi_def_cfa_offset 8
 579 00d0 BD46     		mov	sp, r7
 580              	.LCFI19:
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 00d2 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cc8fmbDk.s 			page 22


 584              		.cfi_endproc
 585              	.LFE135:
 587              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_UART_DeInit
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv4-sp-d16
 595              	HAL_UART_DeInit:
 596              	.LFB136:
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 597              		.loc 1 630 1
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              	.LCFI20:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              	.LCFI21:
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI22:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 613              		.loc 1 632 6
 614 0008 7B68     		ldr	r3, [r7, #4]
 615 000a 002B     		cmp	r3, #0
 616 000c 01D1     		bne	.L29
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 617              		.loc 1 634 12
 618 000e 0123     		movs	r3, #1
 619 0010 27E0     		b	.L30
 620              	.L29:
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 621              		.loc 1 640 17
 622 0012 7B68     		ldr	r3, [r7, #4]
 623 0014 2422     		movs	r2, #36
ARM GAS  /tmp/cc8fmbDk.s 			page 23


 624 0016 5A67     		str	r2, [r3, #116]
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 625              		.loc 1 642 3
 626 0018 7B68     		ldr	r3, [r7, #4]
 627 001a 1B68     		ldr	r3, [r3]
 628 001c 1A68     		ldr	r2, [r3]
 629 001e 7B68     		ldr	r3, [r7, #4]
 630 0020 1B68     		ldr	r3, [r3]
 631 0022 22F00102 		bic	r2, r2, #1
 632 0026 1A60     		str	r2, [r3]
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 633              		.loc 1 644 8
 634 0028 7B68     		ldr	r3, [r7, #4]
 635 002a 1B68     		ldr	r3, [r3]
 636              		.loc 1 644 24
 637 002c 0022     		movs	r2, #0
 638 002e 1A60     		str	r2, [r3]
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 639              		.loc 1 645 8
 640 0030 7B68     		ldr	r3, [r7, #4]
 641 0032 1B68     		ldr	r3, [r3]
 642              		.loc 1 645 24
 643 0034 0022     		movs	r2, #0
 644 0036 5A60     		str	r2, [r3, #4]
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 645              		.loc 1 646 8
 646 0038 7B68     		ldr	r3, [r7, #4]
 647 003a 1B68     		ldr	r3, [r3]
 648              		.loc 1 646 24
 649 003c 0022     		movs	r2, #0
 650 003e 9A60     		str	r2, [r3, #8]
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 651              		.loc 1 657 3
 652 0040 7868     		ldr	r0, [r7, #4]
 653 0042 FFF7FEFF 		bl	HAL_UART_MspDeInit
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 654              		.loc 1 660 20
 655 0046 7B68     		ldr	r3, [r7, #4]
 656 0048 0022     		movs	r2, #0
 657 004a DA67     		str	r2, [r3, #124]
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 658              		.loc 1 661 17
 659 004c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 24


 660 004e 0022     		movs	r2, #0
 661 0050 5A67     		str	r2, [r3, #116]
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 662              		.loc 1 662 18
 663 0052 7B68     		ldr	r3, [r7, #4]
 664 0054 0022     		movs	r2, #0
 665 0056 9A67     		str	r2, [r3, #120]
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 666              		.loc 1 664 3
 667 0058 7B68     		ldr	r3, [r7, #4]
 668 005a 0022     		movs	r2, #0
 669 005c 83F87020 		strb	r2, [r3, #112]
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 670              		.loc 1 666 10
 671 0060 0023     		movs	r3, #0
 672              	.L30:
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 673              		.loc 1 667 1
 674 0062 1846     		mov	r0, r3
 675 0064 0837     		adds	r7, r7, #8
 676              	.LCFI23:
 677              		.cfi_def_cfa_offset 8
 678 0066 BD46     		mov	sp, r7
 679              	.LCFI24:
 680              		.cfi_def_cfa_register 13
 681              		@ sp needed
 682 0068 80BD     		pop	{r7, pc}
 683              		.cfi_endproc
 684              	.LFE136:
 686              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 687              		.align	1
 688              		.weak	HAL_UART_MspInit
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	HAL_UART_MspInit:
 695              	.LFB137:
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 696              		.loc 1 675 1
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 8
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
 702              	.LCFI25:
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
ARM GAS  /tmp/cc8fmbDk.s 			page 25


 705 0002 83B0     		sub	sp, sp, #12
 706              	.LCFI26:
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              	.LCFI27:
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 712              		.loc 1 682 1
 713 0008 00BF     		nop
 714 000a 0C37     		adds	r7, r7, #12
 715              	.LCFI28:
 716              		.cfi_def_cfa_offset 4
 717 000c BD46     		mov	sp, r7
 718              	.LCFI29:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 000e 5DF8047B 		ldr	r7, [sp], #4
 722              	.LCFI30:
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 0012 7047     		bx	lr
 726              		.cfi_endproc
 727              	.LFE137:
 729              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 730              		.align	1
 731              		.weak	HAL_UART_MspDeInit
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv4-sp-d16
 737              	HAL_UART_MspDeInit:
 738              	.LFB138:
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 739              		.loc 1 690 1
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744 0000 80B4     		push	{r7}
 745              	.LCFI31:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc8fmbDk.s 			page 26


 749              	.LCFI32:
 750              		.cfi_def_cfa_offset 16
 751 0004 00AF     		add	r7, sp, #0
 752              	.LCFI33:
 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 755              		.loc 1 697 1
 756 0008 00BF     		nop
 757 000a 0C37     		adds	r7, r7, #12
 758              	.LCFI34:
 759              		.cfi_def_cfa_offset 4
 760 000c BD46     		mov	sp, r7
 761              	.LCFI35:
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 000e 5DF8047B 		ldr	r7, [sp], #4
 765              	.LCFI36:
 766              		.cfi_restore 7
 767              		.cfi_def_cfa_offset 0
 768 0012 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE138:
 772              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_UART_Transmit
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	HAL_UART_Transmit:
 781              	.LFB139:
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
ARM GAS  /tmp/cc8fmbDk.s 			page 27


 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
ARM GAS  /tmp/cc8fmbDk.s 			page 28


 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/cc8fmbDk.s 			page 29


 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
ARM GAS  /tmp/cc8fmbDk.s 			page 30


 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc8fmbDk.s 			page 31


 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
ARM GAS  /tmp/cc8fmbDk.s 			page 32


1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 782              		.loc 1 1053 1
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 32
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cc8fmbDk.s 			page 33


 787              	.LCFI37:
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 8AB0     		sub	sp, sp, #40
 792              	.LCFI38:
 793              		.cfi_def_cfa_offset 48
 794 0004 02AF     		add	r7, sp, #8
 795              	.LCFI39:
 796              		.cfi_def_cfa 7, 40
 797 0006 F860     		str	r0, [r7, #12]
 798 0008 B960     		str	r1, [r7, #8]
 799 000a 3B60     		str	r3, [r7]
 800 000c 1346     		mov	r3, r2	@ movhi
 801 000e FB80     		strh	r3, [r7, #6]	@ movhi
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 802              		.loc 1 1059 12
 803 0010 FB68     		ldr	r3, [r7, #12]
 804 0012 5B6F     		ldr	r3, [r3, #116]
 805              		.loc 1 1059 6
 806 0014 202B     		cmp	r3, #32
 807 0016 40F08180 		bne	.L34
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 808              		.loc 1 1061 8
 809 001a BB68     		ldr	r3, [r7, #8]
 810 001c 002B     		cmp	r3, #0
 811 001e 02D0     		beq	.L35
 812              		.loc 1 1061 25 discriminator 1
 813 0020 FB88     		ldrh	r3, [r7, #6]
 814 0022 002B     		cmp	r3, #0
 815 0024 01D1     		bne	.L36
 816              	.L35:
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 817              		.loc 1 1063 15
 818 0026 0123     		movs	r3, #1
 819 0028 79E0     		b	.L37
 820              	.L36:
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 821              		.loc 1 1066 5
 822 002a FB68     		ldr	r3, [r7, #12]
 823 002c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 824 0030 012B     		cmp	r3, #1
 825 0032 01D1     		bne	.L38
 826              		.loc 1 1066 5 is_stmt 0 discriminator 1
 827 0034 0223     		movs	r3, #2
 828 0036 72E0     		b	.L37
 829              	.L38:
 830              		.loc 1 1066 5 discriminator 2
ARM GAS  /tmp/cc8fmbDk.s 			page 34


 831 0038 FB68     		ldr	r3, [r7, #12]
 832 003a 0122     		movs	r2, #1
 833 003c 83F87020 		strb	r2, [r3, #112]
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 834              		.loc 1 1068 22 is_stmt 1 discriminator 2
 835 0040 FB68     		ldr	r3, [r7, #12]
 836 0042 0022     		movs	r2, #0
 837 0044 DA67     		str	r2, [r3, #124]
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 838              		.loc 1 1069 19 discriminator 2
 839 0046 FB68     		ldr	r3, [r7, #12]
 840 0048 2122     		movs	r2, #33
 841 004a 5A67     		str	r2, [r3, #116]
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 842              		.loc 1 1072 17 discriminator 2
 843 004c FFF7FEFF 		bl	HAL_GetTick
 844 0050 7861     		str	r0, [r7, #20]
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 845              		.loc 1 1074 24 discriminator 2
 846 0052 FB68     		ldr	r3, [r7, #12]
 847 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 848 0056 A3F85020 		strh	r2, [r3, #80]	@ movhi
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 849              		.loc 1 1075 24 discriminator 2
 850 005a FB68     		ldr	r3, [r7, #12]
 851 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 852 005e A3F85220 		strh	r2, [r3, #82]	@ movhi
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 853              		.loc 1 1078 21 discriminator 2
 854 0062 FB68     		ldr	r3, [r7, #12]
 855 0064 9B68     		ldr	r3, [r3, #8]
 856              		.loc 1 1078 8 discriminator 2
 857 0066 B3F5805F 		cmp	r3, #4096
 858 006a 08D1     		bne	.L39
 859              		.loc 1 1078 71 discriminator 1
 860 006c FB68     		ldr	r3, [r7, #12]
 861 006e 1B69     		ldr	r3, [r3, #16]
 862              		.loc 1 1078 56 discriminator 1
 863 0070 002B     		cmp	r3, #0
 864 0072 04D1     		bne	.L39
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
 865              		.loc 1 1080 19
 866 0074 0023     		movs	r3, #0
 867 0076 FB61     		str	r3, [r7, #28]
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 868              		.loc 1 1081 19
 869 0078 BB68     		ldr	r3, [r7, #8]
 870 007a BB61     		str	r3, [r7, #24]
 871 007c 03E0     		b	.L40
 872              	.L39:
ARM GAS  /tmp/cc8fmbDk.s 			page 35


1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
 873              		.loc 1 1085 19
 874 007e BB68     		ldr	r3, [r7, #8]
 875 0080 FB61     		str	r3, [r7, #28]
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
 876              		.loc 1 1086 19
 877 0082 0023     		movs	r3, #0
 878 0084 BB61     		str	r3, [r7, #24]
 879              	.L40:
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 880              		.loc 1 1089 5
 881 0086 FB68     		ldr	r3, [r7, #12]
 882 0088 0022     		movs	r2, #0
 883 008a 83F87020 		strb	r2, [r3, #112]
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 884              		.loc 1 1091 11
 885 008e 2DE0     		b	.L41
 886              	.L45:
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 887              		.loc 1 1093 11
 888 0090 3B68     		ldr	r3, [r7]
 889 0092 0093     		str	r3, [sp]
 890 0094 7B69     		ldr	r3, [r7, #20]
 891 0096 0022     		movs	r2, #0
 892 0098 8021     		movs	r1, #128
 893 009a F868     		ldr	r0, [r7, #12]
 894 009c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 895 00a0 0346     		mov	r3, r0
 896              		.loc 1 1093 10
 897 00a2 002B     		cmp	r3, #0
 898 00a4 01D0     		beq	.L42
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 899              		.loc 1 1095 16
 900 00a6 0323     		movs	r3, #3
 901 00a8 39E0     		b	.L37
 902              	.L42:
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
 903              		.loc 1 1097 10
 904 00aa FB69     		ldr	r3, [r7, #28]
 905 00ac 002B     		cmp	r3, #0
 906 00ae 0BD1     		bne	.L43
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 907              		.loc 1 1099 43
 908 00b0 BB69     		ldr	r3, [r7, #24]
 909 00b2 1A88     		ldrh	r2, [r3]
 910              		.loc 1 1099 14
 911 00b4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc8fmbDk.s 			page 36


 912 00b6 1B68     		ldr	r3, [r3]
 913              		.loc 1 1099 32
 914 00b8 C2F30802 		ubfx	r2, r2, #0, #9
 915 00bc 92B2     		uxth	r2, r2
 916              		.loc 1 1099 30
 917 00be 1A85     		strh	r2, [r3, #40]	@ movhi
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 918              		.loc 1 1100 20
 919 00c0 BB69     		ldr	r3, [r7, #24]
 920 00c2 0233     		adds	r3, r3, #2
 921 00c4 BB61     		str	r3, [r7, #24]
 922 00c6 08E0     		b	.L44
 923              	.L43:
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 924              		.loc 1 1104 42
 925 00c8 FB69     		ldr	r3, [r7, #28]
 926 00ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 927              		.loc 1 1104 14
 928 00cc FB68     		ldr	r3, [r7, #12]
 929 00ce 1B68     		ldr	r3, [r3]
 930              		.loc 1 1104 32
 931 00d0 92B2     		uxth	r2, r2
 932              		.loc 1 1104 30
 933 00d2 1A85     		strh	r2, [r3, #40]	@ movhi
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 934              		.loc 1 1105 19
 935 00d4 FB69     		ldr	r3, [r7, #28]
 936 00d6 0133     		adds	r3, r3, #1
 937 00d8 FB61     		str	r3, [r7, #28]
 938              	.L44:
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 939              		.loc 1 1107 12
 940 00da FB68     		ldr	r3, [r7, #12]
 941 00dc B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 942 00e0 9BB2     		uxth	r3, r3
 943              		.loc 1 1107 25
 944 00e2 013B     		subs	r3, r3, #1
 945 00e4 9AB2     		uxth	r2, r3
 946 00e6 FB68     		ldr	r3, [r7, #12]
 947 00e8 A3F85220 		strh	r2, [r3, #82]	@ movhi
 948              	.L41:
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 949              		.loc 1 1091 17
 950 00ec FB68     		ldr	r3, [r7, #12]
 951 00ee B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 952 00f2 9BB2     		uxth	r3, r3
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 953              		.loc 1 1091 11
 954 00f4 002B     		cmp	r3, #0
 955 00f6 CBD1     		bne	.L45
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
ARM GAS  /tmp/cc8fmbDk.s 			page 37


 956              		.loc 1 1110 9
 957 00f8 3B68     		ldr	r3, [r7]
 958 00fa 0093     		str	r3, [sp]
 959 00fc 7B69     		ldr	r3, [r7, #20]
 960 00fe 0022     		movs	r2, #0
 961 0100 4021     		movs	r1, #64
 962 0102 F868     		ldr	r0, [r7, #12]
 963 0104 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 964 0108 0346     		mov	r3, r0
 965              		.loc 1 1110 8
 966 010a 002B     		cmp	r3, #0
 967 010c 01D0     		beq	.L46
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 968              		.loc 1 1112 14
 969 010e 0323     		movs	r3, #3
 970 0110 05E0     		b	.L37
 971              	.L46:
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 972              		.loc 1 1116 19
 973 0112 FB68     		ldr	r3, [r7, #12]
 974 0114 2022     		movs	r2, #32
 975 0116 5A67     		str	r2, [r3, #116]
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 976              		.loc 1 1118 12
 977 0118 0023     		movs	r3, #0
 978 011a 00E0     		b	.L37
 979              	.L34:
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 980              		.loc 1 1122 12
 981 011c 0223     		movs	r3, #2
 982              	.L37:
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 983              		.loc 1 1124 1
 984 011e 1846     		mov	r0, r3
 985 0120 2037     		adds	r7, r7, #32
 986              	.LCFI40:
 987              		.cfi_def_cfa_offset 8
 988 0122 BD46     		mov	sp, r7
 989              	.LCFI41:
 990              		.cfi_def_cfa_register 13
 991              		@ sp needed
 992 0124 80BD     		pop	{r7, pc}
 993              		.cfi_endproc
 994              	.LFE139:
 996              		.section	.text.HAL_UART_Receive,"ax",%progbits
 997              		.align	1
 998              		.global	HAL_UART_Receive
 999              		.syntax unified
ARM GAS  /tmp/cc8fmbDk.s 			page 38


 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv4-sp-d16
 1004              	HAL_UART_Receive:
 1005              	.LFB140:
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1006              		.loc 1 1142 1
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 32
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              	.LCFI42:
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 0002 8AB0     		sub	sp, sp, #40
 1016              	.LCFI43:
 1017              		.cfi_def_cfa_offset 48
 1018 0004 02AF     		add	r7, sp, #8
 1019              	.LCFI44:
 1020              		.cfi_def_cfa 7, 40
 1021 0006 F860     		str	r0, [r7, #12]
 1022 0008 B960     		str	r1, [r7, #8]
 1023 000a 3B60     		str	r3, [r7]
 1024 000c 1346     		mov	r3, r2	@ movhi
 1025 000e FB80     		strh	r3, [r7, #6]	@ movhi
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1026              		.loc 1 1149 12
 1027 0010 FB68     		ldr	r3, [r7, #12]
 1028 0012 9B6F     		ldr	r3, [r3, #120]
 1029              		.loc 1 1149 6
 1030 0014 202B     		cmp	r3, #32
 1031 0016 40F0BB80 		bne	.L48
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc8fmbDk.s 			page 39


1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1032              		.loc 1 1151 8
 1033 001a BB68     		ldr	r3, [r7, #8]
 1034 001c 002B     		cmp	r3, #0
 1035 001e 02D0     		beq	.L49
 1036              		.loc 1 1151 25 discriminator 1
 1037 0020 FB88     		ldrh	r3, [r7, #6]
 1038 0022 002B     		cmp	r3, #0
 1039 0024 01D1     		bne	.L50
 1040              	.L49:
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 1041              		.loc 1 1153 15
 1042 0026 0123     		movs	r3, #1
 1043 0028 B3E0     		b	.L51
 1044              	.L50:
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1045              		.loc 1 1156 5
 1046 002a FB68     		ldr	r3, [r7, #12]
 1047 002c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1048 0030 012B     		cmp	r3, #1
 1049 0032 01D1     		bne	.L52
 1050              		.loc 1 1156 5 is_stmt 0 discriminator 1
 1051 0034 0223     		movs	r3, #2
 1052 0036 ACE0     		b	.L51
 1053              	.L52:
 1054              		.loc 1 1156 5 discriminator 2
 1055 0038 FB68     		ldr	r3, [r7, #12]
 1056 003a 0122     		movs	r2, #1
 1057 003c 83F87020 		strb	r2, [r3, #112]
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1058              		.loc 1 1158 22 is_stmt 1 discriminator 2
 1059 0040 FB68     		ldr	r3, [r7, #12]
 1060 0042 0022     		movs	r2, #0
 1061 0044 DA67     		str	r2, [r3, #124]
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1062              		.loc 1 1159 20 discriminator 2
 1063 0046 FB68     		ldr	r3, [r7, #12]
 1064 0048 2222     		movs	r2, #34
 1065 004a 9A67     		str	r2, [r3, #120]
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1066              		.loc 1 1162 17 discriminator 2
 1067 004c FFF7FEFF 		bl	HAL_GetTick
 1068 0050 7861     		str	r0, [r7, #20]
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1069              		.loc 1 1164 24 discriminator 2
 1070 0052 FB68     		ldr	r3, [r7, #12]
 1071 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1072 0056 A3F85820 		strh	r2, [r3, #88]	@ movhi
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1073              		.loc 1 1165 24 discriminator 2
ARM GAS  /tmp/cc8fmbDk.s 			page 40


 1074 005a FB68     		ldr	r3, [r7, #12]
 1075 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1076 005e A3F85A20 		strh	r2, [r3, #90]	@ movhi
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1077              		.loc 1 1168 5 discriminator 2
 1078 0062 FB68     		ldr	r3, [r7, #12]
 1079 0064 9B68     		ldr	r3, [r3, #8]
 1080 0066 B3F5805F 		cmp	r3, #4096
 1081 006a 0ED1     		bne	.L53
 1082              		.loc 1 1168 5 is_stmt 0 discriminator 1
 1083 006c FB68     		ldr	r3, [r7, #12]
 1084 006e 1B69     		ldr	r3, [r3, #16]
 1085 0070 002B     		cmp	r3, #0
 1086 0072 05D1     		bne	.L54
 1087              		.loc 1 1168 5 discriminator 3
 1088 0074 FB68     		ldr	r3, [r7, #12]
 1089 0076 40F2FF12 		movw	r2, #511
 1090 007a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1091 007e 2DE0     		b	.L55
 1092              	.L54:
 1093              		.loc 1 1168 5 discriminator 4
 1094 0080 FB68     		ldr	r3, [r7, #12]
 1095 0082 FF22     		movs	r2, #255
 1096 0084 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1097 0088 28E0     		b	.L55
 1098              	.L53:
 1099              		.loc 1 1168 5 discriminator 2
 1100 008a FB68     		ldr	r3, [r7, #12]
 1101 008c 9B68     		ldr	r3, [r3, #8]
 1102 008e 002B     		cmp	r3, #0
 1103 0090 0DD1     		bne	.L56
 1104              		.loc 1 1168 5 discriminator 5
 1105 0092 FB68     		ldr	r3, [r7, #12]
 1106 0094 1B69     		ldr	r3, [r3, #16]
 1107 0096 002B     		cmp	r3, #0
 1108 0098 04D1     		bne	.L57
 1109              		.loc 1 1168 5 discriminator 7
 1110 009a FB68     		ldr	r3, [r7, #12]
 1111 009c FF22     		movs	r2, #255
 1112 009e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1113 00a2 1BE0     		b	.L55
 1114              	.L57:
 1115              		.loc 1 1168 5 discriminator 8
 1116 00a4 FB68     		ldr	r3, [r7, #12]
 1117 00a6 7F22     		movs	r2, #127
 1118 00a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1119 00ac 16E0     		b	.L55
 1120              	.L56:
 1121              		.loc 1 1168 5 discriminator 6
 1122 00ae FB68     		ldr	r3, [r7, #12]
 1123 00b0 9B68     		ldr	r3, [r3, #8]
 1124 00b2 B3F1805F 		cmp	r3, #268435456
 1125 00b6 0DD1     		bne	.L58
 1126              		.loc 1 1168 5 discriminator 9
 1127 00b8 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc8fmbDk.s 			page 41


 1128 00ba 1B69     		ldr	r3, [r3, #16]
 1129 00bc 002B     		cmp	r3, #0
 1130 00be 04D1     		bne	.L59
 1131              		.loc 1 1168 5 discriminator 11
 1132 00c0 FB68     		ldr	r3, [r7, #12]
 1133 00c2 7F22     		movs	r2, #127
 1134 00c4 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1135 00c8 08E0     		b	.L55
 1136              	.L59:
 1137              		.loc 1 1168 5 discriminator 12
 1138 00ca FB68     		ldr	r3, [r7, #12]
 1139 00cc 3F22     		movs	r2, #63
 1140 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1141 00d2 03E0     		b	.L55
 1142              	.L58:
 1143              		.loc 1 1168 5 discriminator 10
 1144 00d4 FB68     		ldr	r3, [r7, #12]
 1145 00d6 0022     		movs	r2, #0
 1146 00d8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1147              	.L55:
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 1148              		.loc 1 1169 12 is_stmt 1
 1149 00dc FB68     		ldr	r3, [r7, #12]
 1150 00de B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1151 00e2 7B82     		strh	r3, [r7, #18]	@ movhi
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1152              		.loc 1 1172 21
 1153 00e4 FB68     		ldr	r3, [r7, #12]
 1154 00e6 9B68     		ldr	r3, [r3, #8]
 1155              		.loc 1 1172 8
 1156 00e8 B3F5805F 		cmp	r3, #4096
 1157 00ec 08D1     		bne	.L60
 1158              		.loc 1 1172 71 discriminator 1
 1159 00ee FB68     		ldr	r3, [r7, #12]
 1160 00f0 1B69     		ldr	r3, [r3, #16]
 1161              		.loc 1 1172 56 discriminator 1
 1162 00f2 002B     		cmp	r3, #0
 1163 00f4 04D1     		bne	.L60
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
 1164              		.loc 1 1174 19
 1165 00f6 0023     		movs	r3, #0
 1166 00f8 FB61     		str	r3, [r7, #28]
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1167              		.loc 1 1175 19
 1168 00fa BB68     		ldr	r3, [r7, #8]
 1169 00fc BB61     		str	r3, [r7, #24]
 1170 00fe 03E0     		b	.L61
 1171              	.L60:
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
 1172              		.loc 1 1179 19
 1173 0100 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/cc8fmbDk.s 			page 42


 1174 0102 FB61     		str	r3, [r7, #28]
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
 1175              		.loc 1 1180 19
 1176 0104 0023     		movs	r3, #0
 1177 0106 BB61     		str	r3, [r7, #24]
 1178              	.L61:
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1179              		.loc 1 1183 5
 1180 0108 FB68     		ldr	r3, [r7, #12]
 1181 010a 0022     		movs	r2, #0
 1182 010c 83F87020 		strb	r2, [r3, #112]
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1183              		.loc 1 1186 11
 1184 0110 33E0     		b	.L62
 1185              	.L66:
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1186              		.loc 1 1188 11
 1187 0112 3B68     		ldr	r3, [r7]
 1188 0114 0093     		str	r3, [sp]
 1189 0116 7B69     		ldr	r3, [r7, #20]
 1190 0118 0022     		movs	r2, #0
 1191 011a 2021     		movs	r1, #32
 1192 011c F868     		ldr	r0, [r7, #12]
 1193 011e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1194 0122 0346     		mov	r3, r0
 1195              		.loc 1 1188 10
 1196 0124 002B     		cmp	r3, #0
 1197 0126 01D0     		beq	.L63
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1198              		.loc 1 1190 16
 1199 0128 0323     		movs	r3, #3
 1200 012a 32E0     		b	.L51
 1201              	.L63:
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1202              		.loc 1 1192 10
 1203 012c FB69     		ldr	r3, [r7, #28]
 1204 012e 002B     		cmp	r3, #0
 1205 0130 0CD1     		bne	.L64
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1206              		.loc 1 1194 40
 1207 0132 FB68     		ldr	r3, [r7, #12]
 1208 0134 1B68     		ldr	r3, [r3]
 1209              		.loc 1 1194 50
 1210 0136 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1211 0138 9AB2     		uxth	r2, r3
 1212              		.loc 1 1194 24
 1213 013a 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1214 013c 1340     		ands	r3, r3, r2
 1215 013e 9AB2     		uxth	r2, r3
ARM GAS  /tmp/cc8fmbDk.s 			page 43


 1216              		.loc 1 1194 22
 1217 0140 BB69     		ldr	r3, [r7, #24]
 1218 0142 1A80     		strh	r2, [r3]	@ movhi
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 1219              		.loc 1 1195 20
 1220 0144 BB69     		ldr	r3, [r7, #24]
 1221 0146 0233     		adds	r3, r3, #2
 1222 0148 BB61     		str	r3, [r7, #24]
 1223 014a 0DE0     		b	.L65
 1224              	.L64:
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1225              		.loc 1 1199 38
 1226 014c FB68     		ldr	r3, [r7, #12]
 1227 014e 1B68     		ldr	r3, [r3]
 1228              		.loc 1 1199 48
 1229 0150 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1230 0152 9BB2     		uxth	r3, r3
 1231              		.loc 1 1199 23
 1232 0154 DAB2     		uxtb	r2, r3
 1233              		.loc 1 1199 56
 1234 0156 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1235 0158 DBB2     		uxtb	r3, r3
 1236              		.loc 1 1199 23
 1237 015a 1340     		ands	r3, r3, r2
 1238 015c DAB2     		uxtb	r2, r3
 1239              		.loc 1 1199 21
 1240 015e FB69     		ldr	r3, [r7, #28]
 1241 0160 1A70     		strb	r2, [r3]
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 1242              		.loc 1 1200 19
 1243 0162 FB69     		ldr	r3, [r7, #28]
 1244 0164 0133     		adds	r3, r3, #1
 1245 0166 FB61     		str	r3, [r7, #28]
 1246              	.L65:
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
 1247              		.loc 1 1202 12
 1248 0168 FB68     		ldr	r3, [r7, #12]
 1249 016a B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1250 016e 9BB2     		uxth	r3, r3
 1251              		.loc 1 1202 25
 1252 0170 013B     		subs	r3, r3, #1
 1253 0172 9AB2     		uxth	r2, r3
 1254 0174 FB68     		ldr	r3, [r7, #12]
 1255 0176 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 1256              	.L62:
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1257              		.loc 1 1186 17
 1258 017a FB68     		ldr	r3, [r7, #12]
 1259 017c B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1260 0180 9BB2     		uxth	r3, r3
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1261              		.loc 1 1186 11
 1262 0182 002B     		cmp	r3, #0
ARM GAS  /tmp/cc8fmbDk.s 			page 44


 1263 0184 C5D1     		bne	.L66
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1264              		.loc 1 1206 20
 1265 0186 FB68     		ldr	r3, [r7, #12]
 1266 0188 2022     		movs	r2, #32
 1267 018a 9A67     		str	r2, [r3, #120]
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1268              		.loc 1 1208 12
 1269 018c 0023     		movs	r3, #0
 1270 018e 00E0     		b	.L51
 1271              	.L48:
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1272              		.loc 1 1212 12
 1273 0190 0223     		movs	r3, #2
 1274              	.L51:
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1275              		.loc 1 1214 1
 1276 0192 1846     		mov	r0, r3
 1277 0194 2037     		adds	r7, r7, #32
 1278              	.LCFI45:
 1279              		.cfi_def_cfa_offset 8
 1280 0196 BD46     		mov	sp, r7
 1281              	.LCFI46:
 1282              		.cfi_def_cfa_register 13
 1283              		@ sp needed
 1284 0198 80BD     		pop	{r7, pc}
 1285              		.cfi_endproc
 1286              	.LFE140:
 1288              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1289              		.align	1
 1290              		.global	HAL_UART_Transmit_IT
 1291              		.syntax unified
 1292              		.thumb
 1293              		.thumb_func
 1294              		.fpu fpv4-sp-d16
 1296              	HAL_UART_Transmit_IT:
 1297              	.LFB141:
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/cc8fmbDk.s 			page 45


1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1298              		.loc 1 1227 1
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 16
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
 1303 0000 80B4     		push	{r7}
 1304              	.LCFI47:
 1305              		.cfi_def_cfa_offset 4
 1306              		.cfi_offset 7, -4
 1307 0002 85B0     		sub	sp, sp, #20
 1308              	.LCFI48:
 1309              		.cfi_def_cfa_offset 24
 1310 0004 00AF     		add	r7, sp, #0
 1311              	.LCFI49:
 1312              		.cfi_def_cfa_register 7
 1313 0006 F860     		str	r0, [r7, #12]
 1314 0008 B960     		str	r1, [r7, #8]
 1315 000a 1346     		mov	r3, r2
 1316 000c FB80     		strh	r3, [r7, #6]	@ movhi
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1317              		.loc 1 1229 12
 1318 000e FB68     		ldr	r3, [r7, #12]
 1319 0010 5B6F     		ldr	r3, [r3, #116]
 1320              		.loc 1 1229 6
 1321 0012 202B     		cmp	r3, #32
 1322 0014 44D1     		bne	.L68
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1323              		.loc 1 1231 8
 1324 0016 BB68     		ldr	r3, [r7, #8]
 1325 0018 002B     		cmp	r3, #0
 1326 001a 02D0     		beq	.L69
 1327              		.loc 1 1231 25 discriminator 1
 1328 001c FB88     		ldrh	r3, [r7, #6]
 1329 001e 002B     		cmp	r3, #0
 1330 0020 01D1     		bne	.L70
 1331              	.L69:
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1332              		.loc 1 1233 14
 1333 0022 0123     		movs	r3, #1
 1334 0024 3DE0     		b	.L71
 1335              	.L70:
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1336              		.loc 1 1236 5
 1337 0026 FB68     		ldr	r3, [r7, #12]
 1338 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1339 002c 012B     		cmp	r3, #1
 1340 002e 01D1     		bne	.L72
 1341              		.loc 1 1236 5 is_stmt 0 discriminator 1
 1342 0030 0223     		movs	r3, #2
 1343 0032 36E0     		b	.L71
 1344              	.L72:
ARM GAS  /tmp/cc8fmbDk.s 			page 46


 1345              		.loc 1 1236 5 discriminator 2
 1346 0034 FB68     		ldr	r3, [r7, #12]
 1347 0036 0122     		movs	r2, #1
 1348 0038 83F87020 		strb	r2, [r3, #112]
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1349              		.loc 1 1238 24 is_stmt 1 discriminator 2
 1350 003c FB68     		ldr	r3, [r7, #12]
 1351 003e BA68     		ldr	r2, [r7, #8]
 1352 0040 DA64     		str	r2, [r3, #76]
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1353              		.loc 1 1239 24 discriminator 2
 1354 0042 FB68     		ldr	r3, [r7, #12]
 1355 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1356 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1357              		.loc 1 1240 24 discriminator 2
 1358 004a FB68     		ldr	r3, [r7, #12]
 1359 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1360 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 1361              		.loc 1 1241 24 discriminator 2
 1362 0052 FB68     		ldr	r3, [r7, #12]
 1363 0054 0022     		movs	r2, #0
 1364 0056 5A66     		str	r2, [r3, #100]
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1365              		.loc 1 1243 22 discriminator 2
 1366 0058 FB68     		ldr	r3, [r7, #12]
 1367 005a 0022     		movs	r2, #0
 1368 005c DA67     		str	r2, [r3, #124]
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1369              		.loc 1 1244 19 discriminator 2
 1370 005e FB68     		ldr	r3, [r7, #12]
 1371 0060 2122     		movs	r2, #33
 1372 0062 5A67     		str	r2, [r3, #116]
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
ARM GAS  /tmp/cc8fmbDk.s 			page 47


1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1373              		.loc 1 1284 21 discriminator 2
 1374 0064 FB68     		ldr	r3, [r7, #12]
 1375 0066 9B68     		ldr	r3, [r3, #8]
 1376              		.loc 1 1284 8 discriminator 2
 1377 0068 B3F5805F 		cmp	r3, #4096
 1378 006c 07D1     		bne	.L73
 1379              		.loc 1 1284 71 discriminator 1
 1380 006e FB68     		ldr	r3, [r7, #12]
 1381 0070 1B69     		ldr	r3, [r3, #16]
 1382              		.loc 1 1284 56 discriminator 1
 1383 0072 002B     		cmp	r3, #0
 1384 0074 03D1     		bne	.L73
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
 1385              		.loc 1 1286 20
 1386 0076 FB68     		ldr	r3, [r7, #12]
 1387 0078 0D4A     		ldr	r2, .L75
 1388 007a 5A66     		str	r2, [r3, #100]
 1389 007c 02E0     		b	.L74
 1390              	.L73:
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
 1391              		.loc 1 1290 20
 1392 007e FB68     		ldr	r3, [r7, #12]
 1393 0080 0C4A     		ldr	r2, .L75+4
 1394 0082 5A66     		str	r2, [r3, #100]
 1395              	.L74:
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1396              		.loc 1 1293 5
 1397 0084 FB68     		ldr	r3, [r7, #12]
 1398 0086 0022     		movs	r2, #0
 1399 0088 83F87020 		strb	r2, [r3, #112]
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
ARM GAS  /tmp/cc8fmbDk.s 			page 48


1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1400              		.loc 1 1296 5
 1401 008c FB68     		ldr	r3, [r7, #12]
 1402 008e 1B68     		ldr	r3, [r3]
 1403 0090 1A68     		ldr	r2, [r3]
 1404 0092 FB68     		ldr	r3, [r7, #12]
 1405 0094 1B68     		ldr	r3, [r3]
 1406 0096 42F08002 		orr	r2, r2, #128
 1407 009a 1A60     		str	r2, [r3]
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1408              		.loc 1 1299 12
 1409 009c 0023     		movs	r3, #0
 1410 009e 00E0     		b	.L71
 1411              	.L68:
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1412              		.loc 1 1303 12
 1413 00a0 0223     		movs	r3, #2
 1414              	.L71:
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1415              		.loc 1 1305 1
 1416 00a2 1846     		mov	r0, r3
 1417 00a4 1437     		adds	r7, r7, #20
 1418              	.LCFI50:
 1419              		.cfi_def_cfa_offset 4
 1420 00a6 BD46     		mov	sp, r7
 1421              	.LCFI51:
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 00a8 5DF8047B 		ldr	r7, [sp], #4
 1425              	.LCFI52:
 1426              		.cfi_restore 7
 1427              		.cfi_def_cfa_offset 0
 1428 00ac 7047     		bx	lr
 1429              	.L76:
 1430 00ae 00BF     		.align	2
 1431              	.L75:
 1432 00b0 00000000 		.word	UART_TxISR_16BIT
 1433 00b4 00000000 		.word	UART_TxISR_8BIT
 1434              		.cfi_endproc
 1435              	.LFE141:
 1437              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1438              		.align	1
 1439              		.global	HAL_UART_Receive_IT
 1440              		.syntax unified
 1441              		.thumb
 1442              		.thumb_func
 1443              		.fpu fpv4-sp-d16
 1445              	HAL_UART_Receive_IT:
 1446              	.LFB142:
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
ARM GAS  /tmp/cc8fmbDk.s 			page 49


1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1447              		.loc 1 1318 1
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 16
 1450              		@ frame_needed = 1, uses_anonymous_args = 0
 1451              		@ link register save eliminated.
 1452 0000 80B4     		push	{r7}
 1453              	.LCFI53:
 1454              		.cfi_def_cfa_offset 4
 1455              		.cfi_offset 7, -4
 1456 0002 85B0     		sub	sp, sp, #20
 1457              	.LCFI54:
 1458              		.cfi_def_cfa_offset 24
 1459 0004 00AF     		add	r7, sp, #0
 1460              	.LCFI55:
 1461              		.cfi_def_cfa_register 7
 1462 0006 F860     		str	r0, [r7, #12]
 1463 0008 B960     		str	r1, [r7, #8]
 1464 000a 1346     		mov	r3, r2
 1465 000c FB80     		strh	r3, [r7, #6]	@ movhi
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1466              		.loc 1 1320 12
 1467 000e FB68     		ldr	r3, [r7, #12]
 1468 0010 9B6F     		ldr	r3, [r3, #120]
 1469              		.loc 1 1320 6
 1470 0012 202B     		cmp	r3, #32
 1471 0014 40F08A80 		bne	.L78
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1472              		.loc 1 1322 8
 1473 0018 BB68     		ldr	r3, [r7, #8]
 1474 001a 002B     		cmp	r3, #0
 1475 001c 02D0     		beq	.L79
 1476              		.loc 1 1322 25 discriminator 1
 1477 001e FB88     		ldrh	r3, [r7, #6]
 1478 0020 002B     		cmp	r3, #0
 1479 0022 01D1     		bne	.L80
 1480              	.L79:
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1481              		.loc 1 1324 14
 1482 0024 0123     		movs	r3, #1
 1483 0026 82E0     		b	.L81
 1484              	.L80:
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc8fmbDk.s 			page 50


1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1485              		.loc 1 1327 5
 1486 0028 FB68     		ldr	r3, [r7, #12]
 1487 002a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1488 002e 012B     		cmp	r3, #1
 1489 0030 01D1     		bne	.L82
 1490              		.loc 1 1327 5 is_stmt 0 discriminator 1
 1491 0032 0223     		movs	r3, #2
 1492 0034 7BE0     		b	.L81
 1493              	.L82:
 1494              		.loc 1 1327 5 discriminator 2
 1495 0036 FB68     		ldr	r3, [r7, #12]
 1496 0038 0122     		movs	r2, #1
 1497 003a 83F87020 		strb	r2, [r3, #112]
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
 1498              		.loc 1 1329 24 is_stmt 1 discriminator 2
 1499 003e FB68     		ldr	r3, [r7, #12]
 1500 0040 BA68     		ldr	r2, [r7, #8]
 1501 0042 5A65     		str	r2, [r3, #84]
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1502              		.loc 1 1330 24 discriminator 2
 1503 0044 FB68     		ldr	r3, [r7, #12]
 1504 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1505 0048 A3F85820 		strh	r2, [r3, #88]	@ movhi
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1506              		.loc 1 1331 24 discriminator 2
 1507 004c FB68     		ldr	r3, [r7, #12]
 1508 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1509 0050 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 1510              		.loc 1 1332 24 discriminator 2
 1511 0054 FB68     		ldr	r3, [r7, #12]
 1512 0056 0022     		movs	r2, #0
 1513 0058 1A66     		str	r2, [r3, #96]
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1514              		.loc 1 1335 5 discriminator 2
 1515 005a FB68     		ldr	r3, [r7, #12]
 1516 005c 9B68     		ldr	r3, [r3, #8]
 1517 005e B3F5805F 		cmp	r3, #4096
 1518 0062 0ED1     		bne	.L83
 1519              		.loc 1 1335 5 is_stmt 0 discriminator 1
 1520 0064 FB68     		ldr	r3, [r7, #12]
 1521 0066 1B69     		ldr	r3, [r3, #16]
 1522 0068 002B     		cmp	r3, #0
 1523 006a 05D1     		bne	.L84
 1524              		.loc 1 1335 5 discriminator 3
 1525 006c FB68     		ldr	r3, [r7, #12]
 1526 006e 40F2FF12 		movw	r2, #511
 1527 0072 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1528 0076 2DE0     		b	.L85
 1529              	.L84:
 1530              		.loc 1 1335 5 discriminator 4
 1531 0078 FB68     		ldr	r3, [r7, #12]
 1532 007a FF22     		movs	r2, #255
ARM GAS  /tmp/cc8fmbDk.s 			page 51


 1533 007c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1534 0080 28E0     		b	.L85
 1535              	.L83:
 1536              		.loc 1 1335 5 discriminator 2
 1537 0082 FB68     		ldr	r3, [r7, #12]
 1538 0084 9B68     		ldr	r3, [r3, #8]
 1539 0086 002B     		cmp	r3, #0
 1540 0088 0DD1     		bne	.L86
 1541              		.loc 1 1335 5 discriminator 5
 1542 008a FB68     		ldr	r3, [r7, #12]
 1543 008c 1B69     		ldr	r3, [r3, #16]
 1544 008e 002B     		cmp	r3, #0
 1545 0090 04D1     		bne	.L87
 1546              		.loc 1 1335 5 discriminator 7
 1547 0092 FB68     		ldr	r3, [r7, #12]
 1548 0094 FF22     		movs	r2, #255
 1549 0096 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1550 009a 1BE0     		b	.L85
 1551              	.L87:
 1552              		.loc 1 1335 5 discriminator 8
 1553 009c FB68     		ldr	r3, [r7, #12]
 1554 009e 7F22     		movs	r2, #127
 1555 00a0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1556 00a4 16E0     		b	.L85
 1557              	.L86:
 1558              		.loc 1 1335 5 discriminator 6
 1559 00a6 FB68     		ldr	r3, [r7, #12]
 1560 00a8 9B68     		ldr	r3, [r3, #8]
 1561 00aa B3F1805F 		cmp	r3, #268435456
 1562 00ae 0DD1     		bne	.L88
 1563              		.loc 1 1335 5 discriminator 9
 1564 00b0 FB68     		ldr	r3, [r7, #12]
 1565 00b2 1B69     		ldr	r3, [r3, #16]
 1566 00b4 002B     		cmp	r3, #0
 1567 00b6 04D1     		bne	.L89
 1568              		.loc 1 1335 5 discriminator 11
 1569 00b8 FB68     		ldr	r3, [r7, #12]
 1570 00ba 7F22     		movs	r2, #127
 1571 00bc A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1572 00c0 08E0     		b	.L85
 1573              	.L89:
 1574              		.loc 1 1335 5 discriminator 12
 1575 00c2 FB68     		ldr	r3, [r7, #12]
 1576 00c4 3F22     		movs	r2, #63
 1577 00c6 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1578 00ca 03E0     		b	.L85
 1579              	.L88:
 1580              		.loc 1 1335 5 discriminator 10
 1581 00cc FB68     		ldr	r3, [r7, #12]
 1582 00ce 0022     		movs	r2, #0
 1583 00d0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1584              	.L85:
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1585              		.loc 1 1337 22 is_stmt 1
 1586 00d4 FB68     		ldr	r3, [r7, #12]
 1587 00d6 0022     		movs	r2, #0
ARM GAS  /tmp/cc8fmbDk.s 			page 52


 1588 00d8 DA67     		str	r2, [r3, #124]
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1589              		.loc 1 1338 20
 1590 00da FB68     		ldr	r3, [r7, #12]
 1591 00dc 2222     		movs	r2, #34
 1592 00de 9A67     		str	r2, [r3, #120]
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1593              		.loc 1 1341 5
 1594 00e0 FB68     		ldr	r3, [r7, #12]
 1595 00e2 1B68     		ldr	r3, [r3]
 1596 00e4 9A68     		ldr	r2, [r3, #8]
 1597 00e6 FB68     		ldr	r3, [r7, #12]
 1598 00e8 1B68     		ldr	r3, [r3]
 1599 00ea 42F00102 		orr	r2, r2, #1
 1600 00ee 9A60     		str	r2, [r3, #8]
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
ARM GAS  /tmp/cc8fmbDk.s 			page 53


1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1601              		.loc 1 1382 21
 1602 00f0 FB68     		ldr	r3, [r7, #12]
 1603 00f2 9B68     		ldr	r3, [r3, #8]
 1604              		.loc 1 1382 8
 1605 00f4 B3F5805F 		cmp	r3, #4096
 1606 00f8 07D1     		bne	.L90
 1607              		.loc 1 1382 71 discriminator 1
 1608 00fa FB68     		ldr	r3, [r7, #12]
 1609 00fc 1B69     		ldr	r3, [r3, #16]
 1610              		.loc 1 1382 56 discriminator 1
 1611 00fe 002B     		cmp	r3, #0
 1612 0100 03D1     		bne	.L90
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 1613              		.loc 1 1384 20
 1614 0102 FB68     		ldr	r3, [r7, #12]
 1615 0104 0D4A     		ldr	r2, .L92
 1616 0106 1A66     		str	r2, [r3, #96]
 1617 0108 02E0     		b	.L91
 1618              	.L90:
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 1619              		.loc 1 1388 20
 1620 010a FB68     		ldr	r3, [r7, #12]
 1621 010c 0C4A     		ldr	r2, .L92+4
 1622 010e 1A66     		str	r2, [r3, #96]
 1623              	.L91:
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1624              		.loc 1 1391 5
 1625 0110 FB68     		ldr	r3, [r7, #12]
 1626 0112 0022     		movs	r2, #0
 1627 0114 83F87020 		strb	r2, [r3, #112]
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1628              		.loc 1 1394 5
 1629 0118 FB68     		ldr	r3, [r7, #12]
 1630 011a 1B68     		ldr	r3, [r3]
 1631 011c 1A68     		ldr	r2, [r3]
 1632 011e FB68     		ldr	r3, [r7, #12]
 1633 0120 1B68     		ldr	r3, [r3]
 1634 0122 42F49072 		orr	r2, r2, #288
 1635 0126 1A60     		str	r2, [r3]
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1636              		.loc 1 1397 12
 1637 0128 0023     		movs	r3, #0
 1638 012a 00E0     		b	.L81
 1639              	.L78:
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
ARM GAS  /tmp/cc8fmbDk.s 			page 54


1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1640              		.loc 1 1401 12
 1641 012c 0223     		movs	r3, #2
 1642              	.L81:
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1643              		.loc 1 1403 1
 1644 012e 1846     		mov	r0, r3
 1645 0130 1437     		adds	r7, r7, #20
 1646              	.LCFI56:
 1647              		.cfi_def_cfa_offset 4
 1648 0132 BD46     		mov	sp, r7
 1649              	.LCFI57:
 1650              		.cfi_def_cfa_register 13
 1651              		@ sp needed
 1652 0134 5DF8047B 		ldr	r7, [sp], #4
 1653              	.LCFI58:
 1654              		.cfi_restore 7
 1655              		.cfi_def_cfa_offset 0
 1656 0138 7047     		bx	lr
 1657              	.L93:
 1658 013a 00BF     		.align	2
 1659              	.L92:
 1660 013c 00000000 		.word	UART_RxISR_16BIT
 1661 0140 00000000 		.word	UART_RxISR_8BIT
 1662              		.cfi_endproc
 1663              	.LFE142:
 1665              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1666              		.align	1
 1667              		.global	HAL_UART_Transmit_DMA
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1671              		.fpu fpv4-sp-d16
 1673              	HAL_UART_Transmit_DMA:
 1674              	.LFB143:
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1675              		.loc 1 1416 1
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 16
 1678              		@ frame_needed = 1, uses_anonymous_args = 0
 1679 0000 80B5     		push	{r7, lr}
 1680              	.LCFI59:
 1681              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc8fmbDk.s 			page 55


 1682              		.cfi_offset 7, -8
 1683              		.cfi_offset 14, -4
 1684 0002 84B0     		sub	sp, sp, #16
 1685              	.LCFI60:
 1686              		.cfi_def_cfa_offset 24
 1687 0004 00AF     		add	r7, sp, #0
 1688              	.LCFI61:
 1689              		.cfi_def_cfa_register 7
 1690 0006 F860     		str	r0, [r7, #12]
 1691 0008 B960     		str	r1, [r7, #8]
 1692 000a 1346     		mov	r3, r2
 1693 000c FB80     		strh	r3, [r7, #6]	@ movhi
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1694              		.loc 1 1418 12
 1695 000e FB68     		ldr	r3, [r7, #12]
 1696 0010 5B6F     		ldr	r3, [r3, #116]
 1697              		.loc 1 1418 6
 1698 0012 202B     		cmp	r3, #32
 1699 0014 64D1     		bne	.L95
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1700              		.loc 1 1420 8
 1701 0016 BB68     		ldr	r3, [r7, #8]
 1702 0018 002B     		cmp	r3, #0
 1703 001a 02D0     		beq	.L96
 1704              		.loc 1 1420 25 discriminator 1
 1705 001c FB88     		ldrh	r3, [r7, #6]
 1706 001e 002B     		cmp	r3, #0
 1707 0020 01D1     		bne	.L97
 1708              	.L96:
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1709              		.loc 1 1422 14
 1710 0022 0123     		movs	r3, #1
 1711 0024 5DE0     		b	.L98
 1712              	.L97:
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1713              		.loc 1 1425 5
 1714 0026 FB68     		ldr	r3, [r7, #12]
 1715 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1716 002c 012B     		cmp	r3, #1
 1717 002e 01D1     		bne	.L99
 1718              		.loc 1 1425 5 is_stmt 0 discriminator 1
 1719 0030 0223     		movs	r3, #2
 1720 0032 56E0     		b	.L98
 1721              	.L99:
 1722              		.loc 1 1425 5 discriminator 2
 1723 0034 FB68     		ldr	r3, [r7, #12]
 1724 0036 0122     		movs	r2, #1
 1725 0038 83F87020 		strb	r2, [r3, #112]
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1726              		.loc 1 1427 24 is_stmt 1 discriminator 2
 1727 003c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc8fmbDk.s 			page 56


 1728 003e BA68     		ldr	r2, [r7, #8]
 1729 0040 DA64     		str	r2, [r3, #76]
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1730              		.loc 1 1428 24 discriminator 2
 1731 0042 FB68     		ldr	r3, [r7, #12]
 1732 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1733 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1734              		.loc 1 1429 24 discriminator 2
 1735 004a FB68     		ldr	r3, [r7, #12]
 1736 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1737 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1738              		.loc 1 1431 22 discriminator 2
 1739 0052 FB68     		ldr	r3, [r7, #12]
 1740 0054 0022     		movs	r2, #0
 1741 0056 DA67     		str	r2, [r3, #124]
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1742              		.loc 1 1432 19 discriminator 2
 1743 0058 FB68     		ldr	r3, [r7, #12]
 1744 005a 2122     		movs	r2, #33
 1745 005c 5A67     		str	r2, [r3, #116]
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1746              		.loc 1 1434 14 discriminator 2
 1747 005e FB68     		ldr	r3, [r7, #12]
 1748 0060 9B6E     		ldr	r3, [r3, #104]
 1749              		.loc 1 1434 8 discriminator 2
 1750 0062 002B     		cmp	r3, #0
 1751 0064 2AD0     		beq	.L100
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1752              		.loc 1 1437 12
 1753 0066 FB68     		ldr	r3, [r7, #12]
 1754 0068 9B6E     		ldr	r3, [r3, #104]
 1755              		.loc 1 1437 39
 1756 006a 204A     		ldr	r2, .L101
 1757 006c DA62     		str	r2, [r3, #44]
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1758              		.loc 1 1440 12
 1759 006e FB68     		ldr	r3, [r7, #12]
 1760 0070 9B6E     		ldr	r3, [r3, #104]
 1761              		.loc 1 1440 43
 1762 0072 1F4A     		ldr	r2, .L101+4
 1763 0074 1A63     		str	r2, [r3, #48]
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1764              		.loc 1 1443 12
 1765 0076 FB68     		ldr	r3, [r7, #12]
 1766 0078 9B6E     		ldr	r3, [r3, #104]
 1767              		.loc 1 1443 40
 1768 007a 1E4A     		ldr	r2, .L101+8
ARM GAS  /tmp/cc8fmbDk.s 			page 57


 1769 007c 5A63     		str	r2, [r3, #52]
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1770              		.loc 1 1446 12
 1771 007e FB68     		ldr	r3, [r7, #12]
 1772 0080 9B6E     		ldr	r3, [r3, #104]
 1773              		.loc 1 1446 40
 1774 0082 0022     		movs	r2, #0
 1775 0084 9A63     		str	r2, [r3, #56]
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1776              		.loc 1 1449 11
 1777 0086 FB68     		ldr	r3, [r7, #12]
 1778 0088 986E     		ldr	r0, [r3, #104]
 1779              		.loc 1 1449 58
 1780 008a FB68     		ldr	r3, [r7, #12]
 1781 008c DB6C     		ldr	r3, [r3, #76]
 1782              		.loc 1 1449 11
 1783 008e 1946     		mov	r1, r3
 1784              		.loc 1 1449 88
 1785 0090 FB68     		ldr	r3, [r7, #12]
 1786 0092 1B68     		ldr	r3, [r3]
 1787              		.loc 1 1449 82
 1788 0094 2833     		adds	r3, r3, #40
 1789              		.loc 1 1449 11
 1790 0096 1A46     		mov	r2, r3
 1791 0098 FB88     		ldrh	r3, [r7, #6]
 1792 009a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1793 009e 0346     		mov	r3, r0
 1794              		.loc 1 1449 10
 1795 00a0 002B     		cmp	r3, #0
 1796 00a2 0BD0     		beq	.L100
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1797              		.loc 1 1452 26
 1798 00a4 FB68     		ldr	r3, [r7, #12]
 1799 00a6 1022     		movs	r2, #16
 1800 00a8 DA67     		str	r2, [r3, #124]
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1801              		.loc 1 1454 9
 1802 00aa FB68     		ldr	r3, [r7, #12]
 1803 00ac 0022     		movs	r2, #0
 1804 00ae 83F87020 		strb	r2, [r3, #112]
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1805              		.loc 1 1457 23
 1806 00b2 FB68     		ldr	r3, [r7, #12]
 1807 00b4 2022     		movs	r2, #32
 1808 00b6 5A67     		str	r2, [r3, #116]
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
 1809              		.loc 1 1459 16
ARM GAS  /tmp/cc8fmbDk.s 			page 58


 1810 00b8 0123     		movs	r3, #1
 1811 00ba 12E0     		b	.L98
 1812              	.L100:
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1813              		.loc 1 1463 5
 1814 00bc FB68     		ldr	r3, [r7, #12]
 1815 00be 1B68     		ldr	r3, [r3]
 1816 00c0 4022     		movs	r2, #64
 1817 00c2 1A62     		str	r2, [r3, #32]
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1818              		.loc 1 1465 5
 1819 00c4 FB68     		ldr	r3, [r7, #12]
 1820 00c6 0022     		movs	r2, #0
 1821 00c8 83F87020 		strb	r2, [r3, #112]
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1822              		.loc 1 1469 5
 1823 00cc FB68     		ldr	r3, [r7, #12]
 1824 00ce 1B68     		ldr	r3, [r3]
 1825 00d0 9A68     		ldr	r2, [r3, #8]
 1826 00d2 FB68     		ldr	r3, [r7, #12]
 1827 00d4 1B68     		ldr	r3, [r3]
 1828 00d6 42F08002 		orr	r2, r2, #128
 1829 00da 9A60     		str	r2, [r3, #8]
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1830              		.loc 1 1471 12
 1831 00dc 0023     		movs	r3, #0
 1832 00de 00E0     		b	.L98
 1833              	.L95:
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1834              		.loc 1 1475 12
 1835 00e0 0223     		movs	r3, #2
 1836              	.L98:
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1837              		.loc 1 1477 1
 1838 00e2 1846     		mov	r0, r3
 1839 00e4 1037     		adds	r7, r7, #16
 1840              	.LCFI62:
 1841              		.cfi_def_cfa_offset 8
 1842 00e6 BD46     		mov	sp, r7
 1843              	.LCFI63:
 1844              		.cfi_def_cfa_register 13
 1845              		@ sp needed
 1846 00e8 80BD     		pop	{r7, pc}
 1847              	.L102:
 1848 00ea 00BF     		.align	2
ARM GAS  /tmp/cc8fmbDk.s 			page 59


 1849              	.L101:
 1850 00ec 00000000 		.word	UART_DMATransmitCplt
 1851 00f0 00000000 		.word	UART_DMATxHalfCplt
 1852 00f4 00000000 		.word	UART_DMAError
 1853              		.cfi_endproc
 1854              	.LFE143:
 1856              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1857              		.align	1
 1858              		.global	HAL_UART_Receive_DMA
 1859              		.syntax unified
 1860              		.thumb
 1861              		.thumb_func
 1862              		.fpu fpv4-sp-d16
 1864              	HAL_UART_Receive_DMA:
 1865              	.LFB144:
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1866              		.loc 1 1492 1
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 16
 1869              		@ frame_needed = 1, uses_anonymous_args = 0
 1870 0000 80B5     		push	{r7, lr}
 1871              	.LCFI64:
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 7, -8
 1874              		.cfi_offset 14, -4
 1875 0002 84B0     		sub	sp, sp, #16
 1876              	.LCFI65:
 1877              		.cfi_def_cfa_offset 24
 1878 0004 00AF     		add	r7, sp, #0
 1879              	.LCFI66:
 1880              		.cfi_def_cfa_register 7
 1881 0006 F860     		str	r0, [r7, #12]
 1882 0008 B960     		str	r1, [r7, #8]
 1883 000a 1346     		mov	r3, r2
 1884 000c FB80     		strh	r3, [r7, #6]	@ movhi
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1885              		.loc 1 1494 12
 1886 000e FB68     		ldr	r3, [r7, #12]
 1887 0010 9B6F     		ldr	r3, [r3, #120]
 1888              		.loc 1 1494 6
 1889 0012 202B     		cmp	r3, #32
 1890 0014 6CD1     		bne	.L104
ARM GAS  /tmp/cc8fmbDk.s 			page 60


1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1891              		.loc 1 1496 8
 1892 0016 BB68     		ldr	r3, [r7, #8]
 1893 0018 002B     		cmp	r3, #0
 1894 001a 02D0     		beq	.L105
 1895              		.loc 1 1496 25 discriminator 1
 1896 001c FB88     		ldrh	r3, [r7, #6]
 1897 001e 002B     		cmp	r3, #0
 1898 0020 01D1     		bne	.L106
 1899              	.L105:
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1900              		.loc 1 1498 14
 1901 0022 0123     		movs	r3, #1
 1902 0024 65E0     		b	.L107
 1903              	.L106:
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1904              		.loc 1 1501 5
 1905 0026 FB68     		ldr	r3, [r7, #12]
 1906 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1907 002c 012B     		cmp	r3, #1
 1908 002e 01D1     		bne	.L108
 1909              		.loc 1 1501 5 is_stmt 0 discriminator 1
 1910 0030 0223     		movs	r3, #2
 1911 0032 5EE0     		b	.L107
 1912              	.L108:
 1913              		.loc 1 1501 5 discriminator 2
 1914 0034 FB68     		ldr	r3, [r7, #12]
 1915 0036 0122     		movs	r2, #1
 1916 0038 83F87020 		strb	r2, [r3, #112]
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1917              		.loc 1 1503 23 is_stmt 1 discriminator 2
 1918 003c FB68     		ldr	r3, [r7, #12]
 1919 003e BA68     		ldr	r2, [r7, #8]
 1920 0040 5A65     		str	r2, [r3, #84]
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1921              		.loc 1 1504 23 discriminator 2
 1922 0042 FB68     		ldr	r3, [r7, #12]
 1923 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1924 0046 A3F85820 		strh	r2, [r3, #88]	@ movhi
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1925              		.loc 1 1506 22 discriminator 2
 1926 004a FB68     		ldr	r3, [r7, #12]
 1927 004c 0022     		movs	r2, #0
 1928 004e DA67     		str	r2, [r3, #124]
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1929              		.loc 1 1507 20 discriminator 2
 1930 0050 FB68     		ldr	r3, [r7, #12]
 1931 0052 2222     		movs	r2, #34
 1932 0054 9A67     		str	r2, [r3, #120]
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
ARM GAS  /tmp/cc8fmbDk.s 			page 61


 1933              		.loc 1 1509 14 discriminator 2
 1934 0056 FB68     		ldr	r3, [r7, #12]
 1935 0058 DB6E     		ldr	r3, [r3, #108]
 1936              		.loc 1 1509 8 discriminator 2
 1937 005a 002B     		cmp	r3, #0
 1938 005c 2AD0     		beq	.L109
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1939              		.loc 1 1512 12
 1940 005e FB68     		ldr	r3, [r7, #12]
 1941 0060 DB6E     		ldr	r3, [r3, #108]
 1942              		.loc 1 1512 39
 1943 0062 264A     		ldr	r2, .L110
 1944 0064 DA62     		str	r2, [r3, #44]
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1945              		.loc 1 1515 12
 1946 0066 FB68     		ldr	r3, [r7, #12]
 1947 0068 DB6E     		ldr	r3, [r3, #108]
 1948              		.loc 1 1515 43
 1949 006a 254A     		ldr	r2, .L110+4
 1950 006c 1A63     		str	r2, [r3, #48]
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
 1951              		.loc 1 1518 12
 1952 006e FB68     		ldr	r3, [r7, #12]
 1953 0070 DB6E     		ldr	r3, [r3, #108]
 1954              		.loc 1 1518 40
 1955 0072 244A     		ldr	r2, .L110+8
 1956 0074 5A63     		str	r2, [r3, #52]
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 1957              		.loc 1 1521 12
 1958 0076 FB68     		ldr	r3, [r7, #12]
 1959 0078 DB6E     		ldr	r3, [r3, #108]
 1960              		.loc 1 1521 40
 1961 007a 0022     		movs	r2, #0
 1962 007c 9A63     		str	r2, [r3, #56]
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the DMA channel */
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
 1963              		.loc 1 1524 11
 1964 007e FB68     		ldr	r3, [r7, #12]
 1965 0080 D86E     		ldr	r0, [r3, #108]
 1966              		.loc 1 1524 59
 1967 0082 FB68     		ldr	r3, [r7, #12]
 1968 0084 1B68     		ldr	r3, [r3]
 1969              		.loc 1 1524 53
 1970 0086 2433     		adds	r3, r3, #36
 1971              		.loc 1 1524 11
 1972 0088 1946     		mov	r1, r3
 1973              		.loc 1 1524 91
 1974 008a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc8fmbDk.s 			page 62


 1975 008c 5B6D     		ldr	r3, [r3, #84]
 1976              		.loc 1 1524 11
 1977 008e 1A46     		mov	r2, r3
 1978 0090 FB88     		ldrh	r3, [r7, #6]
 1979 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1980 0096 0346     		mov	r3, r0
 1981              		.loc 1 1524 10
 1982 0098 002B     		cmp	r3, #0
 1983 009a 0BD0     		beq	.L109
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1984              		.loc 1 1527 26
 1985 009c FB68     		ldr	r3, [r7, #12]
 1986 009e 1022     		movs	r2, #16
 1987 00a0 DA67     		str	r2, [r3, #124]
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1988              		.loc 1 1529 9
 1989 00a2 FB68     		ldr	r3, [r7, #12]
 1990 00a4 0022     		movs	r2, #0
 1991 00a6 83F87020 		strb	r2, [r3, #112]
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1992              		.loc 1 1532 23
 1993 00aa FB68     		ldr	r3, [r7, #12]
 1994 00ac 2022     		movs	r2, #32
 1995 00ae 5A67     		str	r2, [r3, #116]
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
 1996              		.loc 1 1534 16
 1997 00b0 0123     		movs	r3, #1
 1998 00b2 1EE0     		b	.L107
 1999              	.L109:
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2000              		.loc 1 1537 5
 2001 00b4 FB68     		ldr	r3, [r7, #12]
 2002 00b6 0022     		movs	r2, #0
 2003 00b8 83F87020 		strb	r2, [r3, #112]
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2004              		.loc 1 1540 5
 2005 00bc FB68     		ldr	r3, [r7, #12]
 2006 00be 1B68     		ldr	r3, [r3]
 2007 00c0 1A68     		ldr	r2, [r3]
 2008 00c2 FB68     		ldr	r3, [r7, #12]
 2009 00c4 1B68     		ldr	r3, [r3]
 2010 00c6 42F48072 		orr	r2, r2, #256
 2011 00ca 1A60     		str	r2, [r3]
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2012              		.loc 1 1543 5
ARM GAS  /tmp/cc8fmbDk.s 			page 63


 2013 00cc FB68     		ldr	r3, [r7, #12]
 2014 00ce 1B68     		ldr	r3, [r3]
 2015 00d0 9A68     		ldr	r2, [r3, #8]
 2016 00d2 FB68     		ldr	r3, [r7, #12]
 2017 00d4 1B68     		ldr	r3, [r3]
 2018 00d6 42F00102 		orr	r2, r2, #1
 2019 00da 9A60     		str	r2, [r3, #8]
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2020              		.loc 1 1547 5
 2021 00dc FB68     		ldr	r3, [r7, #12]
 2022 00de 1B68     		ldr	r3, [r3]
 2023 00e0 9A68     		ldr	r2, [r3, #8]
 2024 00e2 FB68     		ldr	r3, [r7, #12]
 2025 00e4 1B68     		ldr	r3, [r3]
 2026 00e6 42F04002 		orr	r2, r2, #64
 2027 00ea 9A60     		str	r2, [r3, #8]
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 2028              		.loc 1 1549 12
 2029 00ec 0023     		movs	r3, #0
 2030 00ee 00E0     		b	.L107
 2031              	.L104:
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 2032              		.loc 1 1553 12
 2033 00f0 0223     		movs	r3, #2
 2034              	.L107:
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2035              		.loc 1 1555 1
 2036 00f2 1846     		mov	r0, r3
 2037 00f4 1037     		adds	r7, r7, #16
 2038              	.LCFI67:
 2039              		.cfi_def_cfa_offset 8
 2040 00f6 BD46     		mov	sp, r7
 2041              	.LCFI68:
 2042              		.cfi_def_cfa_register 13
 2043              		@ sp needed
 2044 00f8 80BD     		pop	{r7, pc}
 2045              	.L111:
 2046 00fa 00BF     		.align	2
 2047              	.L110:
 2048 00fc 00000000 		.word	UART_DMAReceiveCplt
 2049 0100 00000000 		.word	UART_DMARxHalfCplt
 2050 0104 00000000 		.word	UART_DMAError
 2051              		.cfi_endproc
 2052              	.LFE144:
 2054              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2055              		.align	1
 2056              		.global	HAL_UART_DMAPause
 2057              		.syntax unified
 2058              		.thumb
ARM GAS  /tmp/cc8fmbDk.s 			page 64


 2059              		.thumb_func
 2060              		.fpu fpv4-sp-d16
 2062              	HAL_UART_DMAPause:
 2063              	.LFB145:
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2064              		.loc 1 1563 1
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 16
 2067              		@ frame_needed = 1, uses_anonymous_args = 0
 2068              		@ link register save eliminated.
 2069 0000 80B4     		push	{r7}
 2070              	.LCFI69:
 2071              		.cfi_def_cfa_offset 4
 2072              		.cfi_offset 7, -4
 2073 0002 85B0     		sub	sp, sp, #20
 2074              	.LCFI70:
 2075              		.cfi_def_cfa_offset 24
 2076 0004 00AF     		add	r7, sp, #0
 2077              	.LCFI71:
 2078              		.cfi_def_cfa_register 7
 2079 0006 7860     		str	r0, [r7, #4]
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2080              		.loc 1 1564 31
 2081 0008 7B68     		ldr	r3, [r7, #4]
 2082 000a 5B6F     		ldr	r3, [r3, #116]
 2083 000c FB60     		str	r3, [r7, #12]
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2084              		.loc 1 1565 31
 2085 000e 7B68     		ldr	r3, [r7, #4]
 2086 0010 9B6F     		ldr	r3, [r3, #120]
 2087 0012 BB60     		str	r3, [r7, #8]
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2088              		.loc 1 1567 3
 2089 0014 7B68     		ldr	r3, [r7, #4]
 2090 0016 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 2091 001a 012B     		cmp	r3, #1
 2092 001c 01D1     		bne	.L113
 2093              		.loc 1 1567 3 is_stmt 0 discriminator 1
 2094 001e 0223     		movs	r3, #2
 2095 0020 3CE0     		b	.L114
 2096              	.L113:
 2097              		.loc 1 1567 3 discriminator 2
 2098 0022 7B68     		ldr	r3, [r7, #4]
 2099 0024 0122     		movs	r2, #1
 2100 0026 83F87020 		strb	r2, [r3, #112]
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2101              		.loc 1 1569 8 is_stmt 1 discriminator 2
 2102 002a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 65


 2103 002c 1B68     		ldr	r3, [r3]
 2104 002e 9B68     		ldr	r3, [r3, #8]
 2105 0030 03F08003 		and	r3, r3, #128
 2106              		.loc 1 1569 6 discriminator 2
 2107 0034 802B     		cmp	r3, #128
 2108 0036 0AD1     		bne	.L115
 2109              		.loc 1 1569 62 discriminator 1
 2110 0038 FB68     		ldr	r3, [r7, #12]
 2111 003a 212B     		cmp	r3, #33
 2112 003c 07D1     		bne	.L115
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2113              		.loc 1 1573 5
 2114 003e 7B68     		ldr	r3, [r7, #4]
 2115 0040 1B68     		ldr	r3, [r3]
 2116 0042 9A68     		ldr	r2, [r3, #8]
 2117 0044 7B68     		ldr	r3, [r7, #4]
 2118 0046 1B68     		ldr	r3, [r3]
 2119 0048 22F08002 		bic	r2, r2, #128
 2120 004c 9A60     		str	r2, [r3, #8]
 2121              	.L115:
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2122              		.loc 1 1575 8
 2123 004e 7B68     		ldr	r3, [r7, #4]
 2124 0050 1B68     		ldr	r3, [r3]
 2125 0052 9B68     		ldr	r3, [r3, #8]
 2126 0054 03F04003 		and	r3, r3, #64
 2127              		.loc 1 1575 6
 2128 0058 402B     		cmp	r3, #64
 2129 005a 1AD1     		bne	.L116
 2130              		.loc 1 1575 62 discriminator 1
 2131 005c BB68     		ldr	r3, [r7, #8]
 2132 005e 222B     		cmp	r3, #34
 2133 0060 17D1     		bne	.L116
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2134              		.loc 1 1579 5
 2135 0062 7B68     		ldr	r3, [r7, #4]
 2136 0064 1B68     		ldr	r3, [r3]
 2137 0066 1A68     		ldr	r2, [r3]
 2138 0068 7B68     		ldr	r3, [r7, #4]
 2139 006a 1B68     		ldr	r3, [r3]
 2140 006c 22F48072 		bic	r2, r2, #256
 2141 0070 1A60     		str	r2, [r3]
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2142              		.loc 1 1580 5
 2143 0072 7B68     		ldr	r3, [r7, #4]
 2144 0074 1B68     		ldr	r3, [r3]
 2145 0076 9A68     		ldr	r2, [r3, #8]
 2146 0078 7B68     		ldr	r3, [r7, #4]
 2147 007a 1B68     		ldr	r3, [r3]
 2148 007c 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp/cc8fmbDk.s 			page 66


 2149 0080 9A60     		str	r2, [r3, #8]
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2150              		.loc 1 1583 5
 2151 0082 7B68     		ldr	r3, [r7, #4]
 2152 0084 1B68     		ldr	r3, [r3]
 2153 0086 9A68     		ldr	r2, [r3, #8]
 2154 0088 7B68     		ldr	r3, [r7, #4]
 2155 008a 1B68     		ldr	r3, [r3]
 2156 008c 22F04002 		bic	r2, r2, #64
 2157 0090 9A60     		str	r2, [r3, #8]
 2158              	.L116:
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2159              		.loc 1 1586 3
 2160 0092 7B68     		ldr	r3, [r7, #4]
 2161 0094 0022     		movs	r2, #0
 2162 0096 83F87020 		strb	r2, [r3, #112]
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2163              		.loc 1 1588 10
 2164 009a 0023     		movs	r3, #0
 2165              	.L114:
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2166              		.loc 1 1589 1
 2167 009c 1846     		mov	r0, r3
 2168 009e 1437     		adds	r7, r7, #20
 2169              	.LCFI72:
 2170              		.cfi_def_cfa_offset 4
 2171 00a0 BD46     		mov	sp, r7
 2172              	.LCFI73:
 2173              		.cfi_def_cfa_register 13
 2174              		@ sp needed
 2175 00a2 5DF8047B 		ldr	r7, [sp], #4
 2176              	.LCFI74:
 2177              		.cfi_restore 7
 2178              		.cfi_def_cfa_offset 0
 2179 00a6 7047     		bx	lr
 2180              		.cfi_endproc
 2181              	.LFE145:
 2183              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2184              		.align	1
 2185              		.global	HAL_UART_DMAResume
 2186              		.syntax unified
 2187              		.thumb
 2188              		.thumb_func
 2189              		.fpu fpv4-sp-d16
 2191              	HAL_UART_DMAResume:
 2192              	.LFB146:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc8fmbDk.s 			page 67


1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2193              		.loc 1 1597 1
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 8
 2196              		@ frame_needed = 1, uses_anonymous_args = 0
 2197              		@ link register save eliminated.
 2198 0000 80B4     		push	{r7}
 2199              	.LCFI75:
 2200              		.cfi_def_cfa_offset 4
 2201              		.cfi_offset 7, -4
 2202 0002 83B0     		sub	sp, sp, #12
 2203              	.LCFI76:
 2204              		.cfi_def_cfa_offset 16
 2205 0004 00AF     		add	r7, sp, #0
 2206              	.LCFI77:
 2207              		.cfi_def_cfa_register 7
 2208 0006 7860     		str	r0, [r7, #4]
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2209              		.loc 1 1598 3
 2210 0008 7B68     		ldr	r3, [r7, #4]
 2211 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 2212 000e 012B     		cmp	r3, #1
 2213 0010 01D1     		bne	.L118
 2214              		.loc 1 1598 3 is_stmt 0 discriminator 1
 2215 0012 0223     		movs	r3, #2
 2216 0014 34E0     		b	.L119
 2217              	.L118:
 2218              		.loc 1 1598 3 discriminator 2
 2219 0016 7B68     		ldr	r3, [r7, #4]
 2220 0018 0122     		movs	r2, #1
 2221 001a 83F87020 		strb	r2, [r3, #112]
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2222              		.loc 1 1600 12 is_stmt 1 discriminator 2
 2223 001e 7B68     		ldr	r3, [r7, #4]
 2224 0020 5B6F     		ldr	r3, [r3, #116]
 2225              		.loc 1 1600 6 discriminator 2
 2226 0022 212B     		cmp	r3, #33
 2227 0024 07D1     		bne	.L120
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2228              		.loc 1 1603 5
 2229 0026 7B68     		ldr	r3, [r7, #4]
 2230 0028 1B68     		ldr	r3, [r3]
 2231 002a 9A68     		ldr	r2, [r3, #8]
 2232 002c 7B68     		ldr	r3, [r7, #4]
 2233 002e 1B68     		ldr	r3, [r3]
 2234 0030 42F08002 		orr	r2, r2, #128
 2235 0034 9A60     		str	r2, [r3, #8]
 2236              	.L120:
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2237              		.loc 1 1605 12
 2238 0036 7B68     		ldr	r3, [r7, #4]
 2239 0038 9B6F     		ldr	r3, [r3, #120]
ARM GAS  /tmp/cc8fmbDk.s 			page 68


 2240              		.loc 1 1605 6
 2241 003a 222B     		cmp	r3, #34
 2242 003c 1BD1     		bne	.L121
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2243              		.loc 1 1608 5
 2244 003e 7B68     		ldr	r3, [r7, #4]
 2245 0040 1B68     		ldr	r3, [r3]
 2246 0042 0822     		movs	r2, #8
 2247 0044 1A62     		str	r2, [r3, #32]
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2248              		.loc 1 1611 5
 2249 0046 7B68     		ldr	r3, [r7, #4]
 2250 0048 1B68     		ldr	r3, [r3]
 2251 004a 1A68     		ldr	r2, [r3]
 2252 004c 7B68     		ldr	r3, [r7, #4]
 2253 004e 1B68     		ldr	r3, [r3]
 2254 0050 42F48072 		orr	r2, r2, #256
 2255 0054 1A60     		str	r2, [r3]
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2256              		.loc 1 1612 5
 2257 0056 7B68     		ldr	r3, [r7, #4]
 2258 0058 1B68     		ldr	r3, [r3]
 2259 005a 9A68     		ldr	r2, [r3, #8]
 2260 005c 7B68     		ldr	r3, [r7, #4]
 2261 005e 1B68     		ldr	r3, [r3]
 2262 0060 42F00102 		orr	r2, r2, #1
 2263 0064 9A60     		str	r2, [r3, #8]
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2264              		.loc 1 1615 5
 2265 0066 7B68     		ldr	r3, [r7, #4]
 2266 0068 1B68     		ldr	r3, [r3]
 2267 006a 9A68     		ldr	r2, [r3, #8]
 2268 006c 7B68     		ldr	r3, [r7, #4]
 2269 006e 1B68     		ldr	r3, [r3]
 2270 0070 42F04002 		orr	r2, r2, #64
 2271 0074 9A60     		str	r2, [r3, #8]
 2272              	.L121:
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2273              		.loc 1 1618 3
 2274 0076 7B68     		ldr	r3, [r7, #4]
 2275 0078 0022     		movs	r2, #0
 2276 007a 83F87020 		strb	r2, [r3, #112]
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2277              		.loc 1 1620 10
 2278 007e 0023     		movs	r3, #0
 2279              	.L119:
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2280              		.loc 1 1621 1
ARM GAS  /tmp/cc8fmbDk.s 			page 69


 2281 0080 1846     		mov	r0, r3
 2282 0082 0C37     		adds	r7, r7, #12
 2283              	.LCFI78:
 2284              		.cfi_def_cfa_offset 4
 2285 0084 BD46     		mov	sp, r7
 2286              	.LCFI79:
 2287              		.cfi_def_cfa_register 13
 2288              		@ sp needed
 2289 0086 5DF8047B 		ldr	r7, [sp], #4
 2290              	.LCFI80:
 2291              		.cfi_restore 7
 2292              		.cfi_def_cfa_offset 0
 2293 008a 7047     		bx	lr
 2294              		.cfi_endproc
 2295              	.LFE146:
 2297              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2298              		.align	1
 2299              		.global	HAL_UART_DMAStop
 2300              		.syntax unified
 2301              		.thumb
 2302              		.thumb_func
 2303              		.fpu fpv4-sp-d16
 2305              	HAL_UART_DMAStop:
 2306              	.LFB147:
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2307              		.loc 1 1629 1
 2308              		.cfi_startproc
 2309              		@ args = 0, pretend = 0, frame = 16
 2310              		@ frame_needed = 1, uses_anonymous_args = 0
 2311 0000 80B5     		push	{r7, lr}
 2312              	.LCFI81:
 2313              		.cfi_def_cfa_offset 8
 2314              		.cfi_offset 7, -8
 2315              		.cfi_offset 14, -4
 2316 0002 84B0     		sub	sp, sp, #16
 2317              	.LCFI82:
 2318              		.cfi_def_cfa_offset 24
 2319 0004 00AF     		add	r7, sp, #0
 2320              	.LCFI83:
 2321              		.cfi_def_cfa_register 7
 2322 0006 7860     		str	r0, [r7, #4]
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2323              		.loc 1 1637 31
ARM GAS  /tmp/cc8fmbDk.s 			page 70


 2324 0008 7B68     		ldr	r3, [r7, #4]
 2325 000a 5B6F     		ldr	r3, [r3, #116]
 2326 000c FB60     		str	r3, [r7, #12]
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2327              		.loc 1 1638 31
 2328 000e 7B68     		ldr	r3, [r7, #4]
 2329 0010 9B6F     		ldr	r3, [r3, #120]
 2330 0012 BB60     		str	r3, [r7, #8]
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2331              		.loc 1 1641 8
 2332 0014 7B68     		ldr	r3, [r7, #4]
 2333 0016 1B68     		ldr	r3, [r3]
 2334 0018 9B68     		ldr	r3, [r3, #8]
 2335 001a 03F08003 		and	r3, r3, #128
 2336              		.loc 1 1641 6
 2337 001e 802B     		cmp	r3, #128
 2338 0020 26D1     		bne	.L123
 2339              		.loc 1 1641 62 discriminator 1
 2340 0022 FB68     		ldr	r3, [r7, #12]
 2341 0024 212B     		cmp	r3, #33
 2342 0026 23D1     		bne	.L123
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2343              		.loc 1 1644 5
 2344 0028 7B68     		ldr	r3, [r7, #4]
 2345 002a 1B68     		ldr	r3, [r3]
 2346 002c 9A68     		ldr	r2, [r3, #8]
 2347 002e 7B68     		ldr	r3, [r7, #4]
 2348 0030 1B68     		ldr	r3, [r3]
 2349 0032 22F08002 		bic	r2, r2, #128
 2350 0036 9A60     		str	r2, [r3, #8]
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2351              		.loc 1 1647 14
 2352 0038 7B68     		ldr	r3, [r7, #4]
 2353 003a 9B6E     		ldr	r3, [r3, #104]
 2354              		.loc 1 1647 8
 2355 003c 002B     		cmp	r3, #0
 2356 003e 14D0     		beq	.L124
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2357              		.loc 1 1649 11
 2358 0040 7B68     		ldr	r3, [r7, #4]
 2359 0042 9B6E     		ldr	r3, [r3, #104]
 2360 0044 1846     		mov	r0, r3
 2361 0046 FFF7FEFF 		bl	HAL_DMA_Abort
 2362 004a 0346     		mov	r3, r0
 2363              		.loc 1 1649 10
 2364 004c 002B     		cmp	r3, #0
 2365 004e 0CD0     		beq	.L124
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2366              		.loc 1 1651 13
ARM GAS  /tmp/cc8fmbDk.s 			page 71


 2367 0050 7B68     		ldr	r3, [r7, #4]
 2368 0052 9B6E     		ldr	r3, [r3, #104]
 2369 0054 1846     		mov	r0, r3
 2370 0056 FFF7FEFF 		bl	HAL_DMA_GetError
 2371 005a 0346     		mov	r3, r0
 2372              		.loc 1 1651 12
 2373 005c 202B     		cmp	r3, #32
 2374 005e 04D1     		bne	.L124
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2375              		.loc 1 1654 28
 2376 0060 7B68     		ldr	r3, [r7, #4]
 2377 0062 1022     		movs	r2, #16
 2378 0064 DA67     		str	r2, [r3, #124]
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2379              		.loc 1 1656 18
 2380 0066 0323     		movs	r3, #3
 2381 0068 31E0     		b	.L125
 2382              	.L124:
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2383              		.loc 1 1661 5
 2384 006a 7868     		ldr	r0, [r7, #4]
 2385 006c FFF7FEFF 		bl	UART_EndTxTransfer
 2386              	.L123:
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2387              		.loc 1 1665 8
 2388 0070 7B68     		ldr	r3, [r7, #4]
 2389 0072 1B68     		ldr	r3, [r3]
 2390 0074 9B68     		ldr	r3, [r3, #8]
 2391 0076 03F04003 		and	r3, r3, #64
 2392              		.loc 1 1665 6
 2393 007a 402B     		cmp	r3, #64
 2394 007c 26D1     		bne	.L126
 2395              		.loc 1 1665 62 discriminator 1
 2396 007e BB68     		ldr	r3, [r7, #8]
 2397 0080 222B     		cmp	r3, #34
 2398 0082 23D1     		bne	.L126
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2399              		.loc 1 1668 5
 2400 0084 7B68     		ldr	r3, [r7, #4]
 2401 0086 1B68     		ldr	r3, [r3]
 2402 0088 9A68     		ldr	r2, [r3, #8]
 2403 008a 7B68     		ldr	r3, [r7, #4]
 2404 008c 1B68     		ldr	r3, [r3]
 2405 008e 22F04002 		bic	r2, r2, #64
 2406 0092 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/cc8fmbDk.s 			page 72


1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2407              		.loc 1 1671 14
 2408 0094 7B68     		ldr	r3, [r7, #4]
 2409 0096 DB6E     		ldr	r3, [r3, #108]
 2410              		.loc 1 1671 8
 2411 0098 002B     		cmp	r3, #0
 2412 009a 14D0     		beq	.L127
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2413              		.loc 1 1673 11
 2414 009c 7B68     		ldr	r3, [r7, #4]
 2415 009e DB6E     		ldr	r3, [r3, #108]
 2416 00a0 1846     		mov	r0, r3
 2417 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2418 00a6 0346     		mov	r3, r0
 2419              		.loc 1 1673 10
 2420 00a8 002B     		cmp	r3, #0
 2421 00aa 0CD0     		beq	.L127
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2422              		.loc 1 1675 13
 2423 00ac 7B68     		ldr	r3, [r7, #4]
 2424 00ae DB6E     		ldr	r3, [r3, #108]
 2425 00b0 1846     		mov	r0, r3
 2426 00b2 FFF7FEFF 		bl	HAL_DMA_GetError
 2427 00b6 0346     		mov	r3, r0
 2428              		.loc 1 1675 12
 2429 00b8 202B     		cmp	r3, #32
 2430 00ba 04D1     		bne	.L127
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2431              		.loc 1 1678 28
 2432 00bc 7B68     		ldr	r3, [r7, #4]
 2433 00be 1022     		movs	r2, #16
 2434 00c0 DA67     		str	r2, [r3, #124]
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2435              		.loc 1 1680 18
 2436 00c2 0323     		movs	r3, #3
 2437 00c4 03E0     		b	.L125
 2438              	.L127:
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2439              		.loc 1 1685 5
 2440 00c6 7868     		ldr	r0, [r7, #4]
 2441 00c8 FFF7FEFF 		bl	UART_EndRxTransfer
 2442              	.L126:
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2443              		.loc 1 1688 10
ARM GAS  /tmp/cc8fmbDk.s 			page 73


 2444 00cc 0023     		movs	r3, #0
 2445              	.L125:
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2446              		.loc 1 1689 1
 2447 00ce 1846     		mov	r0, r3
 2448 00d0 1037     		adds	r7, r7, #16
 2449              	.LCFI84:
 2450              		.cfi_def_cfa_offset 8
 2451 00d2 BD46     		mov	sp, r7
 2452              	.LCFI85:
 2453              		.cfi_def_cfa_register 13
 2454              		@ sp needed
 2455 00d4 80BD     		pop	{r7, pc}
 2456              		.cfi_endproc
 2457              	.LFE147:
 2459              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2460              		.align	1
 2461              		.global	HAL_UART_Abort
 2462              		.syntax unified
 2463              		.thumb
 2464              		.thumb_func
 2465              		.fpu fpv4-sp-d16
 2467              	HAL_UART_Abort:
 2468              	.LFB148:
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2469              		.loc 1 1704 1
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 8
 2472              		@ frame_needed = 1, uses_anonymous_args = 0
 2473 0000 80B5     		push	{r7, lr}
 2474              	.LCFI86:
 2475              		.cfi_def_cfa_offset 8
 2476              		.cfi_offset 7, -8
 2477              		.cfi_offset 14, -4
 2478 0002 82B0     		sub	sp, sp, #8
 2479              	.LCFI87:
 2480              		.cfi_def_cfa_offset 16
 2481 0004 00AF     		add	r7, sp, #0
 2482              	.LCFI88:
 2483              		.cfi_def_cfa_register 7
 2484 0006 7860     		str	r0, [r7, #4]
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
ARM GAS  /tmp/cc8fmbDk.s 			page 74


1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2485              		.loc 1 1711 3
 2486 0008 7B68     		ldr	r3, [r7, #4]
 2487 000a 1B68     		ldr	r3, [r3]
 2488 000c 1A68     		ldr	r2, [r3]
 2489 000e 7B68     		ldr	r3, [r7, #4]
 2490 0010 1B68     		ldr	r3, [r3]
 2491 0012 22F4F072 		bic	r2, r2, #480
 2492 0016 1A60     		str	r2, [r3]
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2493              		.loc 1 1712 3
 2494 0018 7B68     		ldr	r3, [r7, #4]
 2495 001a 1B68     		ldr	r3, [r3]
 2496 001c 9A68     		ldr	r2, [r3, #8]
 2497 001e 7B68     		ldr	r3, [r7, #4]
 2498 0020 1B68     		ldr	r3, [r3]
 2499 0022 22F00102 		bic	r2, r2, #1
 2500 0026 9A60     		str	r2, [r3, #8]
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2501              		.loc 1 1716 7
 2502 0028 7B68     		ldr	r3, [r7, #4]
 2503 002a 1B68     		ldr	r3, [r3]
 2504 002c 9B68     		ldr	r3, [r3, #8]
 2505 002e 03F08003 		and	r3, r3, #128
 2506              		.loc 1 1716 6
 2507 0032 802B     		cmp	r3, #128
 2508 0034 24D1     		bne	.L129
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2509              		.loc 1 1718 5
 2510 0036 7B68     		ldr	r3, [r7, #4]
 2511 0038 1B68     		ldr	r3, [r3]
 2512 003a 9A68     		ldr	r2, [r3, #8]
 2513 003c 7B68     		ldr	r3, [r7, #4]
 2514 003e 1B68     		ldr	r3, [r3]
 2515 0040 22F08002 		bic	r2, r2, #128
 2516 0044 9A60     		str	r2, [r3, #8]
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2517              		.loc 1 1721 14
 2518 0046 7B68     		ldr	r3, [r7, #4]
 2519 0048 9B6E     		ldr	r3, [r3, #104]
 2520              		.loc 1 1721 8
 2521 004a 002B     		cmp	r3, #0
 2522 004c 18D0     		beq	.L129
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  /tmp/cc8fmbDk.s 			page 75


 2523              		.loc 1 1725 12
 2524 004e 7B68     		ldr	r3, [r7, #4]
 2525 0050 9B6E     		ldr	r3, [r3, #104]
 2526              		.loc 1 1725 40
 2527 0052 0022     		movs	r2, #0
 2528 0054 9A63     		str	r2, [r3, #56]
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2529              		.loc 1 1727 11
 2530 0056 7B68     		ldr	r3, [r7, #4]
 2531 0058 9B6E     		ldr	r3, [r3, #104]
 2532 005a 1846     		mov	r0, r3
 2533 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2534 0060 0346     		mov	r3, r0
 2535              		.loc 1 1727 10
 2536 0062 002B     		cmp	r3, #0
 2537 0064 0CD0     		beq	.L129
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2538              		.loc 1 1729 13
 2539 0066 7B68     		ldr	r3, [r7, #4]
 2540 0068 9B6E     		ldr	r3, [r3, #104]
 2541 006a 1846     		mov	r0, r3
 2542 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2543 0070 0346     		mov	r3, r0
 2544              		.loc 1 1729 12
 2545 0072 202B     		cmp	r3, #32
 2546 0074 04D1     		bne	.L129
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2547              		.loc 1 1732 28
 2548 0076 7B68     		ldr	r3, [r7, #4]
 2549 0078 1022     		movs	r2, #16
 2550 007a DA67     		str	r2, [r3, #124]
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2551              		.loc 1 1734 18
 2552 007c 0323     		movs	r3, #3
 2553 007e 4BE0     		b	.L130
 2554              	.L129:
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2555              		.loc 1 1741 7
 2556 0080 7B68     		ldr	r3, [r7, #4]
 2557 0082 1B68     		ldr	r3, [r3]
 2558 0084 9B68     		ldr	r3, [r3, #8]
 2559 0086 03F04003 		and	r3, r3, #64
 2560              		.loc 1 1741 6
 2561 008a 402B     		cmp	r3, #64
 2562 008c 24D1     		bne	.L131
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc8fmbDk.s 			page 76


1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2563              		.loc 1 1743 5
 2564 008e 7B68     		ldr	r3, [r7, #4]
 2565 0090 1B68     		ldr	r3, [r3]
 2566 0092 9A68     		ldr	r2, [r3, #8]
 2567 0094 7B68     		ldr	r3, [r7, #4]
 2568 0096 1B68     		ldr	r3, [r3]
 2569 0098 22F04002 		bic	r2, r2, #64
 2570 009c 9A60     		str	r2, [r3, #8]
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2571              		.loc 1 1746 14
 2572 009e 7B68     		ldr	r3, [r7, #4]
 2573 00a0 DB6E     		ldr	r3, [r3, #108]
 2574              		.loc 1 1746 8
 2575 00a2 002B     		cmp	r3, #0
 2576 00a4 18D0     		beq	.L131
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2577              		.loc 1 1750 12
 2578 00a6 7B68     		ldr	r3, [r7, #4]
 2579 00a8 DB6E     		ldr	r3, [r3, #108]
 2580              		.loc 1 1750 40
 2581 00aa 0022     		movs	r2, #0
 2582 00ac 9A63     		str	r2, [r3, #56]
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2583              		.loc 1 1752 11
 2584 00ae 7B68     		ldr	r3, [r7, #4]
 2585 00b0 DB6E     		ldr	r3, [r3, #108]
 2586 00b2 1846     		mov	r0, r3
 2587 00b4 FFF7FEFF 		bl	HAL_DMA_Abort
 2588 00b8 0346     		mov	r3, r0
 2589              		.loc 1 1752 10
 2590 00ba 002B     		cmp	r3, #0
 2591 00bc 0CD0     		beq	.L131
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2592              		.loc 1 1754 13
 2593 00be 7B68     		ldr	r3, [r7, #4]
 2594 00c0 DB6E     		ldr	r3, [r3, #108]
 2595 00c2 1846     		mov	r0, r3
 2596 00c4 FFF7FEFF 		bl	HAL_DMA_GetError
 2597 00c8 0346     		mov	r3, r0
 2598              		.loc 1 1754 12
 2599 00ca 202B     		cmp	r3, #32
 2600 00cc 04D1     		bne	.L131
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2601              		.loc 1 1757 28
 2602 00ce 7B68     		ldr	r3, [r7, #4]
 2603 00d0 1022     		movs	r2, #16
 2604 00d2 DA67     		str	r2, [r3, #124]
ARM GAS  /tmp/cc8fmbDk.s 			page 77


1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2605              		.loc 1 1759 18
 2606 00d4 0323     		movs	r3, #3
 2607 00d6 1FE0     		b	.L130
 2608              	.L131:
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2609              		.loc 1 1766 22
 2610 00d8 7B68     		ldr	r3, [r7, #4]
 2611 00da 0022     		movs	r2, #0
 2612 00dc A3F85220 		strh	r2, [r3, #82]	@ movhi
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2613              		.loc 1 1767 22
 2614 00e0 7B68     		ldr	r3, [r7, #4]
 2615 00e2 0022     		movs	r2, #0
 2616 00e4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2617              		.loc 1 1770 3
 2618 00e8 7B68     		ldr	r3, [r7, #4]
 2619 00ea 1B68     		ldr	r3, [r3]
 2620 00ec 0F22     		movs	r2, #15
 2621 00ee 1A62     		str	r2, [r3, #32]
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2622              		.loc 1 1781 3
 2623 00f0 7B68     		ldr	r3, [r7, #4]
 2624 00f2 1B68     		ldr	r3, [r3]
 2625 00f4 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2626 00f6 9AB2     		uxth	r2, r3
 2627 00f8 7B68     		ldr	r3, [r7, #4]
 2628 00fa 1B68     		ldr	r3, [r3]
 2629 00fc 42F00802 		orr	r2, r2, #8
 2630 0100 92B2     		uxth	r2, r2
 2631 0102 1A83     		strh	r2, [r3, #24]	@ movhi
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2632              		.loc 1 1784 18
 2633 0104 7B68     		ldr	r3, [r7, #4]
 2634 0106 2022     		movs	r2, #32
ARM GAS  /tmp/cc8fmbDk.s 			page 78


 2635 0108 5A67     		str	r2, [r3, #116]
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2636              		.loc 1 1785 18
 2637 010a 7B68     		ldr	r3, [r7, #4]
 2638 010c 2022     		movs	r2, #32
 2639 010e 9A67     		str	r2, [r3, #120]
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2640              		.loc 1 1787 20
 2641 0110 7B68     		ldr	r3, [r7, #4]
 2642 0112 0022     		movs	r2, #0
 2643 0114 DA67     		str	r2, [r3, #124]
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2644              		.loc 1 1789 10
 2645 0116 0023     		movs	r3, #0
 2646              	.L130:
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2647              		.loc 1 1790 1
 2648 0118 1846     		mov	r0, r3
 2649 011a 0837     		adds	r7, r7, #8
 2650              	.LCFI89:
 2651              		.cfi_def_cfa_offset 8
 2652 011c BD46     		mov	sp, r7
 2653              	.LCFI90:
 2654              		.cfi_def_cfa_register 13
 2655              		@ sp needed
 2656 011e 80BD     		pop	{r7, pc}
 2657              		.cfi_endproc
 2658              	.LFE148:
 2660              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2661              		.align	1
 2662              		.global	HAL_UART_AbortTransmit
 2663              		.syntax unified
 2664              		.thumb
 2665              		.thumb_func
 2666              		.fpu fpv4-sp-d16
 2668              	HAL_UART_AbortTransmit:
 2669              	.LFB149:
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2670              		.loc 1 1805 1
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc8fmbDk.s 			page 79


 2673              		@ frame_needed = 1, uses_anonymous_args = 0
 2674 0000 80B5     		push	{r7, lr}
 2675              	.LCFI91:
 2676              		.cfi_def_cfa_offset 8
 2677              		.cfi_offset 7, -8
 2678              		.cfi_offset 14, -4
 2679 0002 82B0     		sub	sp, sp, #8
 2680              	.LCFI92:
 2681              		.cfi_def_cfa_offset 16
 2682 0004 00AF     		add	r7, sp, #0
 2683              	.LCFI93:
 2684              		.cfi_def_cfa_register 7
 2685 0006 7860     		str	r0, [r7, #4]
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2686              		.loc 1 1812 3
 2687 0008 7B68     		ldr	r3, [r7, #4]
 2688 000a 1B68     		ldr	r3, [r3]
 2689 000c 1A68     		ldr	r2, [r3]
 2690 000e 7B68     		ldr	r3, [r7, #4]
 2691 0010 1B68     		ldr	r3, [r3]
 2692 0012 22F0C002 		bic	r2, r2, #192
 2693 0016 1A60     		str	r2, [r3]
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2694              		.loc 1 1816 7
 2695 0018 7B68     		ldr	r3, [r7, #4]
 2696 001a 1B68     		ldr	r3, [r3]
 2697 001c 9B68     		ldr	r3, [r3, #8]
 2698 001e 03F08003 		and	r3, r3, #128
 2699              		.loc 1 1816 6
 2700 0022 802B     		cmp	r3, #128
 2701 0024 24D1     		bne	.L133
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2702              		.loc 1 1818 5
 2703 0026 7B68     		ldr	r3, [r7, #4]
 2704 0028 1B68     		ldr	r3, [r3]
 2705 002a 9A68     		ldr	r2, [r3, #8]
 2706 002c 7B68     		ldr	r3, [r7, #4]
 2707 002e 1B68     		ldr	r3, [r3]
 2708 0030 22F08002 		bic	r2, r2, #128
 2709 0034 9A60     		str	r2, [r3, #8]
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2710              		.loc 1 1821 14
 2711 0036 7B68     		ldr	r3, [r7, #4]
 2712 0038 9B6E     		ldr	r3, [r3, #104]
 2713              		.loc 1 1821 8
ARM GAS  /tmp/cc8fmbDk.s 			page 80


 2714 003a 002B     		cmp	r3, #0
 2715 003c 18D0     		beq	.L133
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2716              		.loc 1 1825 12
 2717 003e 7B68     		ldr	r3, [r7, #4]
 2718 0040 9B6E     		ldr	r3, [r3, #104]
 2719              		.loc 1 1825 40
 2720 0042 0022     		movs	r2, #0
 2721 0044 9A63     		str	r2, [r3, #56]
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2722              		.loc 1 1827 11
 2723 0046 7B68     		ldr	r3, [r7, #4]
 2724 0048 9B6E     		ldr	r3, [r3, #104]
 2725 004a 1846     		mov	r0, r3
 2726 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2727 0050 0346     		mov	r3, r0
 2728              		.loc 1 1827 10
 2729 0052 002B     		cmp	r3, #0
 2730 0054 0CD0     		beq	.L133
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2731              		.loc 1 1829 13
 2732 0056 7B68     		ldr	r3, [r7, #4]
 2733 0058 9B6E     		ldr	r3, [r3, #104]
 2734 005a 1846     		mov	r0, r3
 2735 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2736 0060 0346     		mov	r3, r0
 2737              		.loc 1 1829 12
 2738 0062 202B     		cmp	r3, #32
 2739 0064 04D1     		bne	.L133
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2740              		.loc 1 1832 28
 2741 0066 7B68     		ldr	r3, [r7, #4]
 2742 0068 1022     		movs	r2, #16
 2743 006a DA67     		str	r2, [r3, #124]
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2744              		.loc 1 1834 18
 2745 006c 0323     		movs	r3, #3
 2746 006e 07E0     		b	.L134
 2747              	.L133:
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2748              		.loc 1 1841 22
 2749 0070 7B68     		ldr	r3, [r7, #4]
 2750 0072 0022     		movs	r2, #0
ARM GAS  /tmp/cc8fmbDk.s 			page 81


 2751 0074 A3F85220 		strh	r2, [r3, #82]	@ movhi
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2752              		.loc 1 1852 17
 2753 0078 7B68     		ldr	r3, [r7, #4]
 2754 007a 2022     		movs	r2, #32
 2755 007c 5A67     		str	r2, [r3, #116]
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2756              		.loc 1 1854 10
 2757 007e 0023     		movs	r3, #0
 2758              	.L134:
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2759              		.loc 1 1855 1
 2760 0080 1846     		mov	r0, r3
 2761 0082 0837     		adds	r7, r7, #8
 2762              	.LCFI94:
 2763              		.cfi_def_cfa_offset 8
 2764 0084 BD46     		mov	sp, r7
 2765              	.LCFI95:
 2766              		.cfi_def_cfa_register 13
 2767              		@ sp needed
 2768 0086 80BD     		pop	{r7, pc}
 2769              		.cfi_endproc
 2770              	.LFE149:
 2772              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2773              		.align	1
 2774              		.global	HAL_UART_AbortReceive
 2775              		.syntax unified
 2776              		.thumb
 2777              		.thumb_func
 2778              		.fpu fpv4-sp-d16
 2780              	HAL_UART_AbortReceive:
 2781              	.LFB150:
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc8fmbDk.s 			page 82


1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2782              		.loc 1 1870 1
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 8
 2785              		@ frame_needed = 1, uses_anonymous_args = 0
 2786 0000 80B5     		push	{r7, lr}
 2787              	.LCFI96:
 2788              		.cfi_def_cfa_offset 8
 2789              		.cfi_offset 7, -8
 2790              		.cfi_offset 14, -4
 2791 0002 82B0     		sub	sp, sp, #8
 2792              	.LCFI97:
 2793              		.cfi_def_cfa_offset 16
 2794 0004 00AF     		add	r7, sp, #0
 2795              	.LCFI98:
 2796              		.cfi_def_cfa_register 7
 2797 0006 7860     		str	r0, [r7, #4]
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2798              		.loc 1 1877 3
 2799 0008 7B68     		ldr	r3, [r7, #4]
 2800 000a 1B68     		ldr	r3, [r3]
 2801 000c 1A68     		ldr	r2, [r3]
 2802 000e 7B68     		ldr	r3, [r7, #4]
 2803 0010 1B68     		ldr	r3, [r3]
 2804 0012 22F49072 		bic	r2, r2, #288
 2805 0016 1A60     		str	r2, [r3]
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2806              		.loc 1 1878 3
 2807 0018 7B68     		ldr	r3, [r7, #4]
 2808 001a 1B68     		ldr	r3, [r3]
 2809 001c 9A68     		ldr	r2, [r3, #8]
 2810 001e 7B68     		ldr	r3, [r7, #4]
 2811 0020 1B68     		ldr	r3, [r3]
 2812 0022 22F00102 		bic	r2, r2, #1
 2813 0026 9A60     		str	r2, [r3, #8]
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2814              		.loc 1 1882 7
 2815 0028 7B68     		ldr	r3, [r7, #4]
 2816 002a 1B68     		ldr	r3, [r3]
 2817 002c 9B68     		ldr	r3, [r3, #8]
 2818 002e 03F04003 		and	r3, r3, #64
 2819              		.loc 1 1882 6
 2820 0032 402B     		cmp	r3, #64
 2821 0034 24D1     		bne	.L136
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2822              		.loc 1 1884 5
 2823 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 83


 2824 0038 1B68     		ldr	r3, [r3]
 2825 003a 9A68     		ldr	r2, [r3, #8]
 2826 003c 7B68     		ldr	r3, [r7, #4]
 2827 003e 1B68     		ldr	r3, [r3]
 2828 0040 22F04002 		bic	r2, r2, #64
 2829 0044 9A60     		str	r2, [r3, #8]
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2830              		.loc 1 1887 14
 2831 0046 7B68     		ldr	r3, [r7, #4]
 2832 0048 DB6E     		ldr	r3, [r3, #108]
 2833              		.loc 1 1887 8
 2834 004a 002B     		cmp	r3, #0
 2835 004c 18D0     		beq	.L136
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2836              		.loc 1 1891 12
 2837 004e 7B68     		ldr	r3, [r7, #4]
 2838 0050 DB6E     		ldr	r3, [r3, #108]
 2839              		.loc 1 1891 40
 2840 0052 0022     		movs	r2, #0
 2841 0054 9A63     		str	r2, [r3, #56]
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2842              		.loc 1 1893 11
 2843 0056 7B68     		ldr	r3, [r7, #4]
 2844 0058 DB6E     		ldr	r3, [r3, #108]
 2845 005a 1846     		mov	r0, r3
 2846 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2847 0060 0346     		mov	r3, r0
 2848              		.loc 1 1893 10
 2849 0062 002B     		cmp	r3, #0
 2850 0064 0CD0     		beq	.L136
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2851              		.loc 1 1895 13
 2852 0066 7B68     		ldr	r3, [r7, #4]
 2853 0068 DB6E     		ldr	r3, [r3, #108]
 2854 006a 1846     		mov	r0, r3
 2855 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2856 0070 0346     		mov	r3, r0
 2857              		.loc 1 1895 12
 2858 0072 202B     		cmp	r3, #32
 2859 0074 04D1     		bne	.L136
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2860              		.loc 1 1898 28
 2861 0076 7B68     		ldr	r3, [r7, #4]
 2862 0078 1022     		movs	r2, #16
 2863 007a DA67     		str	r2, [r3, #124]
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2864              		.loc 1 1900 18
ARM GAS  /tmp/cc8fmbDk.s 			page 84


 2865 007c 0323     		movs	r3, #3
 2866 007e 15E0     		b	.L137
 2867              	.L136:
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2868              		.loc 1 1907 22
 2869 0080 7B68     		ldr	r3, [r7, #4]
 2870 0082 0022     		movs	r2, #0
 2871 0084 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2872              		.loc 1 1910 3
 2873 0088 7B68     		ldr	r3, [r7, #4]
 2874 008a 1B68     		ldr	r3, [r3]
 2875 008c 0F22     		movs	r2, #15
 2876 008e 1A62     		str	r2, [r3, #32]
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2877              		.loc 1 1913 3
 2878 0090 7B68     		ldr	r3, [r7, #4]
 2879 0092 1B68     		ldr	r3, [r3]
 2880 0094 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2881 0096 9AB2     		uxth	r2, r3
 2882 0098 7B68     		ldr	r3, [r7, #4]
 2883 009a 1B68     		ldr	r3, [r3]
 2884 009c 42F00802 		orr	r2, r2, #8
 2885 00a0 92B2     		uxth	r2, r2
 2886 00a2 1A83     		strh	r2, [r3, #24]	@ movhi
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2887              		.loc 1 1916 18
 2888 00a4 7B68     		ldr	r3, [r7, #4]
 2889 00a6 2022     		movs	r2, #32
 2890 00a8 9A67     		str	r2, [r3, #120]
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2891              		.loc 1 1918 10
 2892 00aa 0023     		movs	r3, #0
 2893              	.L137:
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2894              		.loc 1 1919 1
 2895 00ac 1846     		mov	r0, r3
 2896 00ae 0837     		adds	r7, r7, #8
 2897              	.LCFI99:
 2898              		.cfi_def_cfa_offset 8
 2899 00b0 BD46     		mov	sp, r7
 2900              	.LCFI100:
 2901              		.cfi_def_cfa_register 13
 2902              		@ sp needed
ARM GAS  /tmp/cc8fmbDk.s 			page 85


 2903 00b2 80BD     		pop	{r7, pc}
 2904              		.cfi_endproc
 2905              	.LFE150:
 2907              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2908              		.align	1
 2909              		.global	HAL_UART_Abort_IT
 2910              		.syntax unified
 2911              		.thumb
 2912              		.thumb_func
 2913              		.fpu fpv4-sp-d16
 2915              	HAL_UART_Abort_IT:
 2916              	.LFB151:
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2917              		.loc 1 1936 1
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 16
 2920              		@ frame_needed = 1, uses_anonymous_args = 0
 2921 0000 80B5     		push	{r7, lr}
 2922              	.LCFI101:
 2923              		.cfi_def_cfa_offset 8
 2924              		.cfi_offset 7, -8
 2925              		.cfi_offset 14, -4
 2926 0002 84B0     		sub	sp, sp, #16
 2927              	.LCFI102:
 2928              		.cfi_def_cfa_offset 24
 2929 0004 00AF     		add	r7, sp, #0
 2930              	.LCFI103:
 2931              		.cfi_def_cfa_register 7
 2932 0006 7860     		str	r0, [r7, #4]
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2933              		.loc 1 1937 12
 2934 0008 0123     		movs	r3, #1
 2935 000a FB60     		str	r3, [r7, #12]
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2936              		.loc 1 1944 3
ARM GAS  /tmp/cc8fmbDk.s 			page 86


 2937 000c 7B68     		ldr	r3, [r7, #4]
 2938 000e 1B68     		ldr	r3, [r3]
 2939 0010 1A68     		ldr	r2, [r3]
 2940 0012 7B68     		ldr	r3, [r7, #4]
 2941 0014 1B68     		ldr	r3, [r3]
 2942 0016 22F4F072 		bic	r2, r2, #480
 2943 001a 1A60     		str	r2, [r3]
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2944              		.loc 1 1945 3
 2945 001c 7B68     		ldr	r3, [r7, #4]
 2946 001e 1B68     		ldr	r3, [r3]
 2947 0020 9A68     		ldr	r2, [r3, #8]
 2948 0022 7B68     		ldr	r3, [r7, #4]
 2949 0024 1B68     		ldr	r3, [r3]
 2950 0026 22F00102 		bic	r2, r2, #1
 2951 002a 9A60     		str	r2, [r3, #8]
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 2952              		.loc 1 1951 12
 2953 002c 7B68     		ldr	r3, [r7, #4]
 2954 002e 9B6E     		ldr	r3, [r3, #104]
 2955              		.loc 1 1951 6
 2956 0030 002B     		cmp	r3, #0
 2957 0032 0FD0     		beq	.L139
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2958              		.loc 1 1955 9
 2959 0034 7B68     		ldr	r3, [r7, #4]
 2960 0036 1B68     		ldr	r3, [r3]
 2961 0038 9B68     		ldr	r3, [r3, #8]
 2962 003a 03F08003 		and	r3, r3, #128
 2963              		.loc 1 1955 8
 2964 003e 802B     		cmp	r3, #128
 2965 0040 04D1     		bne	.L140
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2966              		.loc 1 1957 12
 2967 0042 7B68     		ldr	r3, [r7, #4]
 2968 0044 9B6E     		ldr	r3, [r3, #104]
 2969              		.loc 1 1957 40
 2970 0046 484A     		ldr	r2, .L149
 2971 0048 9A63     		str	r2, [r3, #56]
 2972 004a 03E0     		b	.L139
 2973              	.L140:
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2974              		.loc 1 1961 12
 2975 004c 7B68     		ldr	r3, [r7, #4]
 2976 004e 9B6E     		ldr	r3, [r3, #104]
ARM GAS  /tmp/cc8fmbDk.s 			page 87


 2977              		.loc 1 1961 40
 2978 0050 0022     		movs	r2, #0
 2979 0052 9A63     		str	r2, [r3, #56]
 2980              	.L139:
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 2981              		.loc 1 1965 12
 2982 0054 7B68     		ldr	r3, [r7, #4]
 2983 0056 DB6E     		ldr	r3, [r3, #108]
 2984              		.loc 1 1965 6
 2985 0058 002B     		cmp	r3, #0
 2986 005a 0FD0     		beq	.L141
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2987              		.loc 1 1969 9
 2988 005c 7B68     		ldr	r3, [r7, #4]
 2989 005e 1B68     		ldr	r3, [r3]
 2990 0060 9B68     		ldr	r3, [r3, #8]
 2991 0062 03F04003 		and	r3, r3, #64
 2992              		.loc 1 1969 8
 2993 0066 402B     		cmp	r3, #64
 2994 0068 04D1     		bne	.L142
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2995              		.loc 1 1971 12
 2996 006a 7B68     		ldr	r3, [r7, #4]
 2997 006c DB6E     		ldr	r3, [r3, #108]
 2998              		.loc 1 1971 40
 2999 006e 3F4A     		ldr	r2, .L149+4
 3000 0070 9A63     		str	r2, [r3, #56]
 3001 0072 03E0     		b	.L141
 3002              	.L142:
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3003              		.loc 1 1975 12
 3004 0074 7B68     		ldr	r3, [r7, #4]
 3005 0076 DB6E     		ldr	r3, [r3, #108]
 3006              		.loc 1 1975 40
 3007 0078 0022     		movs	r2, #0
 3008 007a 9A63     		str	r2, [r3, #56]
 3009              	.L141:
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3010              		.loc 1 1980 7
 3011 007c 7B68     		ldr	r3, [r7, #4]
 3012 007e 1B68     		ldr	r3, [r3]
 3013 0080 9B68     		ldr	r3, [r3, #8]
 3014 0082 03F08003 		and	r3, r3, #128
ARM GAS  /tmp/cc8fmbDk.s 			page 88


 3015              		.loc 1 1980 6
 3016 0086 802B     		cmp	r3, #128
 3017 0088 1AD1     		bne	.L143
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3018              		.loc 1 1983 5
 3019 008a 7B68     		ldr	r3, [r7, #4]
 3020 008c 1B68     		ldr	r3, [r3]
 3021 008e 9A68     		ldr	r2, [r3, #8]
 3022 0090 7B68     		ldr	r3, [r7, #4]
 3023 0092 1B68     		ldr	r3, [r3]
 3024 0094 22F08002 		bic	r2, r2, #128
 3025 0098 9A60     		str	r2, [r3, #8]
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3026              		.loc 1 1986 14
 3027 009a 7B68     		ldr	r3, [r7, #4]
 3028 009c 9B6E     		ldr	r3, [r3, #104]
 3029              		.loc 1 1986 8
 3030 009e 002B     		cmp	r3, #0
 3031 00a0 0ED0     		beq	.L143
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3032              		.loc 1 1992 11
 3033 00a2 7B68     		ldr	r3, [r7, #4]
 3034 00a4 9B6E     		ldr	r3, [r3, #104]
 3035 00a6 1846     		mov	r0, r3
 3036 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3037 00ac 0346     		mov	r3, r0
 3038              		.loc 1 1992 10
 3039 00ae 002B     		cmp	r3, #0
 3040 00b0 04D0     		beq	.L144
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 3041              		.loc 1 1994 14
 3042 00b2 7B68     		ldr	r3, [r7, #4]
 3043 00b4 9B6E     		ldr	r3, [r3, #104]
 3044              		.loc 1 1994 42
 3045 00b6 0022     		movs	r2, #0
 3046 00b8 9A63     		str	r2, [r3, #56]
 3047 00ba 01E0     		b	.L143
 3048              	.L144:
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
 3049              		.loc 1 1998 19
 3050 00bc 0023     		movs	r3, #0
 3051 00be FB60     		str	r3, [r7, #12]
 3052              	.L143:
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
ARM GAS  /tmp/cc8fmbDk.s 			page 89


2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3053              		.loc 1 2004 7
 3054 00c0 7B68     		ldr	r3, [r7, #4]
 3055 00c2 1B68     		ldr	r3, [r3]
 3056 00c4 9B68     		ldr	r3, [r3, #8]
 3057 00c6 03F04003 		and	r3, r3, #64
 3058              		.loc 1 2004 6
 3059 00ca 402B     		cmp	r3, #64
 3060 00cc 1CD1     		bne	.L145
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3061              		.loc 1 2006 5
 3062 00ce 7B68     		ldr	r3, [r7, #4]
 3063 00d0 1B68     		ldr	r3, [r3]
 3064 00d2 9A68     		ldr	r2, [r3, #8]
 3065 00d4 7B68     		ldr	r3, [r7, #4]
 3066 00d6 1B68     		ldr	r3, [r3]
 3067 00d8 22F04002 		bic	r2, r2, #64
 3068 00dc 9A60     		str	r2, [r3, #8]
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3069              		.loc 1 2009 14
 3070 00de 7B68     		ldr	r3, [r7, #4]
 3071 00e0 DB6E     		ldr	r3, [r3, #108]
 3072              		.loc 1 2009 8
 3073 00e2 002B     		cmp	r3, #0
 3074 00e4 10D0     		beq	.L145
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3075              		.loc 1 2015 11
 3076 00e6 7B68     		ldr	r3, [r7, #4]
 3077 00e8 DB6E     		ldr	r3, [r3, #108]
 3078 00ea 1846     		mov	r0, r3
 3079 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3080 00f0 0346     		mov	r3, r0
 3081              		.loc 1 2015 10
 3082 00f2 002B     		cmp	r3, #0
 3083 00f4 06D0     		beq	.L146
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 3084              		.loc 1 2017 14
 3085 00f6 7B68     		ldr	r3, [r7, #4]
 3086 00f8 DB6E     		ldr	r3, [r3, #108]
 3087              		.loc 1 2017 42
 3088 00fa 0022     		movs	r2, #0
 3089 00fc 9A63     		str	r2, [r3, #56]
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 3090              		.loc 1 2018 19
ARM GAS  /tmp/cc8fmbDk.s 			page 90


 3091 00fe 0123     		movs	r3, #1
 3092 0100 FB60     		str	r3, [r7, #12]
 3093 0102 01E0     		b	.L145
 3094              	.L146:
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
 3095              		.loc 1 2022 19
 3096 0104 0023     		movs	r3, #0
 3097 0106 FB60     		str	r3, [r7, #12]
 3098              	.L145:
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
 3099              		.loc 1 2028 6
 3100 0108 FB68     		ldr	r3, [r7, #12]
 3101 010a 012B     		cmp	r3, #1
 3102 010c 27D1     		bne	.L147
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3103              		.loc 1 2031 24
 3104 010e 7B68     		ldr	r3, [r7, #4]
 3105 0110 0022     		movs	r2, #0
 3106 0112 A3F85220 		strh	r2, [r3, #82]	@ movhi
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3107              		.loc 1 2032 24
 3108 0116 7B68     		ldr	r3, [r7, #4]
 3109 0118 0022     		movs	r2, #0
 3110 011a A3F85A20 		strh	r2, [r3, #90]	@ movhi
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
 3111              		.loc 1 2035 18
 3112 011e 7B68     		ldr	r3, [r7, #4]
 3113 0120 0022     		movs	r2, #0
 3114 0122 1A66     		str	r2, [r3, #96]
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 3115              		.loc 1 2036 18
 3116 0124 7B68     		ldr	r3, [r7, #4]
 3117 0126 0022     		movs	r2, #0
 3118 0128 5A66     		str	r2, [r3, #100]
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3119              		.loc 1 2039 22
 3120 012a 7B68     		ldr	r3, [r7, #4]
 3121 012c 0022     		movs	r2, #0
 3122 012e DA67     		str	r2, [r3, #124]
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3123              		.loc 1 2042 5
ARM GAS  /tmp/cc8fmbDk.s 			page 91


 3124 0130 7B68     		ldr	r3, [r7, #4]
 3125 0132 1B68     		ldr	r3, [r3]
 3126 0134 0F22     		movs	r2, #15
 3127 0136 1A62     		str	r2, [r3, #32]
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3128              		.loc 1 2053 5
 3129 0138 7B68     		ldr	r3, [r7, #4]
 3130 013a 1B68     		ldr	r3, [r3]
 3131 013c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3132 013e 9AB2     		uxth	r2, r3
 3133 0140 7B68     		ldr	r3, [r7, #4]
 3134 0142 1B68     		ldr	r3, [r3]
 3135 0144 42F00802 		orr	r2, r2, #8
 3136 0148 92B2     		uxth	r2, r2
 3137 014a 1A83     		strh	r2, [r3, #24]	@ movhi
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3138              		.loc 1 2056 20
 3139 014c 7B68     		ldr	r3, [r7, #4]
 3140 014e 2022     		movs	r2, #32
 3141 0150 5A67     		str	r2, [r3, #116]
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3142              		.loc 1 2057 20
 3143 0152 7B68     		ldr	r3, [r7, #4]
 3144 0154 2022     		movs	r2, #32
 3145 0156 9A67     		str	r2, [r3, #120]
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 3146              		.loc 1 2065 5
 3147 0158 7868     		ldr	r0, [r7, #4]
 3148 015a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3149              	.L147:
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3150              		.loc 1 2069 10
 3151 015e 0023     		movs	r3, #0
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3152              		.loc 1 2070 1
ARM GAS  /tmp/cc8fmbDk.s 			page 92


 3153 0160 1846     		mov	r0, r3
 3154 0162 1037     		adds	r7, r7, #16
 3155              	.LCFI104:
 3156              		.cfi_def_cfa_offset 8
 3157 0164 BD46     		mov	sp, r7
 3158              	.LCFI105:
 3159              		.cfi_def_cfa_register 13
 3160              		@ sp needed
 3161 0166 80BD     		pop	{r7, pc}
 3162              	.L150:
 3163              		.align	2
 3164              	.L149:
 3165 0168 00000000 		.word	UART_DMATxAbortCallback
 3166 016c 00000000 		.word	UART_DMARxAbortCallback
 3167              		.cfi_endproc
 3168              	.LFE151:
 3170              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3171              		.align	1
 3172              		.global	HAL_UART_AbortTransmit_IT
 3173              		.syntax unified
 3174              		.thumb
 3175              		.thumb_func
 3176              		.fpu fpv4-sp-d16
 3178              	HAL_UART_AbortTransmit_IT:
 3179              	.LFB152:
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3180              		.loc 1 2087 1
 3181              		.cfi_startproc
 3182              		@ args = 0, pretend = 0, frame = 8
 3183              		@ frame_needed = 1, uses_anonymous_args = 0
 3184 0000 80B5     		push	{r7, lr}
 3185              	.LCFI106:
 3186              		.cfi_def_cfa_offset 8
 3187              		.cfi_offset 7, -8
 3188              		.cfi_offset 14, -4
 3189 0002 82B0     		sub	sp, sp, #8
 3190              	.LCFI107:
 3191              		.cfi_def_cfa_offset 16
 3192 0004 00AF     		add	r7, sp, #0
 3193              	.LCFI108:
 3194              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc8fmbDk.s 			page 93


 3195 0006 7860     		str	r0, [r7, #4]
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3196              		.loc 1 2093 3
 3197 0008 7B68     		ldr	r3, [r7, #4]
 3198 000a 1B68     		ldr	r3, [r3]
 3199 000c 1A68     		ldr	r2, [r3]
 3200 000e 7B68     		ldr	r3, [r7, #4]
 3201 0010 1B68     		ldr	r3, [r3]
 3202 0012 22F0C002 		bic	r2, r2, #192
 3203 0016 1A60     		str	r2, [r3]
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3204              		.loc 1 2097 7
 3205 0018 7B68     		ldr	r3, [r7, #4]
 3206 001a 1B68     		ldr	r3, [r3]
 3207 001c 9B68     		ldr	r3, [r3, #8]
 3208 001e 03F08003 		and	r3, r3, #128
 3209              		.loc 1 2097 6
 3210 0022 802B     		cmp	r3, #128
 3211 0024 2DD1     		bne	.L152
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3212              		.loc 1 2099 5
 3213 0026 7B68     		ldr	r3, [r7, #4]
 3214 0028 1B68     		ldr	r3, [r3]
 3215 002a 9A68     		ldr	r2, [r3, #8]
 3216 002c 7B68     		ldr	r3, [r7, #4]
 3217 002e 1B68     		ldr	r3, [r3]
 3218 0030 22F08002 		bic	r2, r2, #128
 3219 0034 9A60     		str	r2, [r3, #8]
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3220              		.loc 1 2102 14
 3221 0036 7B68     		ldr	r3, [r7, #4]
 3222 0038 9B6E     		ldr	r3, [r3, #104]
 3223              		.loc 1 2102 8
 3224 003a 002B     		cmp	r3, #0
 3225 003c 13D0     		beq	.L153
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3226              		.loc 1 2106 12
 3227 003e 7B68     		ldr	r3, [r7, #4]
 3228 0040 9B6E     		ldr	r3, [r3, #104]
 3229              		.loc 1 2106 40
 3230 0042 194A     		ldr	r2, .L156
 3231 0044 9A63     		str	r2, [r3, #56]
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc8fmbDk.s 			page 94


2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3232              		.loc 1 2109 11
 3233 0046 7B68     		ldr	r3, [r7, #4]
 3234 0048 9B6E     		ldr	r3, [r3, #104]
 3235 004a 1846     		mov	r0, r3
 3236 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3237 0050 0346     		mov	r3, r0
 3238              		.loc 1 2109 10
 3239 0052 002B     		cmp	r3, #0
 3240 0054 22D0     		beq	.L154
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3241              		.loc 1 2112 14
 3242 0056 7B68     		ldr	r3, [r7, #4]
 3243 0058 9B6E     		ldr	r3, [r3, #104]
 3244              		.loc 1 2112 22
 3245 005a 9B6B     		ldr	r3, [r3, #56]
 3246              		.loc 1 2112 47
 3247 005c 7A68     		ldr	r2, [r7, #4]
 3248 005e 926E     		ldr	r2, [r2, #104]
 3249              		.loc 1 2112 9
 3250 0060 1046     		mov	r0, r2
 3251 0062 9847     		blx	r3
 3252              	.LVL0:
 3253 0064 1AE0     		b	.L154
 3254              	.L153:
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
 3255              		.loc 1 2118 26
 3256 0066 7B68     		ldr	r3, [r7, #4]
 3257 0068 0022     		movs	r2, #0
 3258 006a A3F85220 		strh	r2, [r3, #82]	@ movhi
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
 3259              		.loc 1 2121 20
 3260 006e 7B68     		ldr	r3, [r7, #4]
 3261 0070 0022     		movs	r2, #0
 3262 0072 5A66     		str	r2, [r3, #100]
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3263              		.loc 1 2124 21
 3264 0074 7B68     		ldr	r3, [r7, #4]
 3265 0076 2022     		movs	r2, #32
 3266 0078 5A67     		str	r2, [r3, #116]
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
ARM GAS  /tmp/cc8fmbDk.s 			page 95


2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3267              		.loc 1 2132 7
 3268 007a 7868     		ldr	r0, [r7, #4]
 3269 007c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3270 0080 0CE0     		b	.L154
 3271              	.L152:
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3272              		.loc 1 2139 24
 3273 0082 7B68     		ldr	r3, [r7, #4]
 3274 0084 0022     		movs	r2, #0
 3275 0086 A3F85220 		strh	r2, [r3, #82]	@ movhi
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 3276              		.loc 1 2142 18
 3277 008a 7B68     		ldr	r3, [r7, #4]
 3278 008c 0022     		movs	r2, #0
 3279 008e 5A66     		str	r2, [r3, #100]
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3280              		.loc 1 2153 19
 3281 0090 7B68     		ldr	r3, [r7, #4]
 3282 0092 2022     		movs	r2, #32
 3283 0094 5A67     		str	r2, [r3, #116]
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3284              		.loc 1 2161 5
 3285 0096 7868     		ldr	r0, [r7, #4]
 3286 0098 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3287              	.L154:
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/cc8fmbDk.s 			page 96


 3288              		.loc 1 2165 10
 3289 009c 0023     		movs	r3, #0
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3290              		.loc 1 2166 1
 3291 009e 1846     		mov	r0, r3
 3292 00a0 0837     		adds	r7, r7, #8
 3293              	.LCFI109:
 3294              		.cfi_def_cfa_offset 8
 3295 00a2 BD46     		mov	sp, r7
 3296              	.LCFI110:
 3297              		.cfi_def_cfa_register 13
 3298              		@ sp needed
 3299 00a4 80BD     		pop	{r7, pc}
 3300              	.L157:
 3301 00a6 00BF     		.align	2
 3302              	.L156:
 3303 00a8 00000000 		.word	UART_DMATxOnlyAbortCallback
 3304              		.cfi_endproc
 3305              	.LFE152:
 3307              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3308              		.align	1
 3309              		.global	HAL_UART_AbortReceive_IT
 3310              		.syntax unified
 3311              		.thumb
 3312              		.thumb_func
 3313              		.fpu fpv4-sp-d16
 3315              	HAL_UART_AbortReceive_IT:
 3316              	.LFB153:
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3317              		.loc 1 2183 1
 3318              		.cfi_startproc
 3319              		@ args = 0, pretend = 0, frame = 8
 3320              		@ frame_needed = 1, uses_anonymous_args = 0
 3321 0000 80B5     		push	{r7, lr}
 3322              	.LCFI111:
 3323              		.cfi_def_cfa_offset 8
 3324              		.cfi_offset 7, -8
 3325              		.cfi_offset 14, -4
 3326 0002 82B0     		sub	sp, sp, #8
 3327              	.LCFI112:
 3328              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc8fmbDk.s 			page 97


 3329 0004 00AF     		add	r7, sp, #0
 3330              	.LCFI113:
 3331              		.cfi_def_cfa_register 7
 3332 0006 7860     		str	r0, [r7, #4]
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3333              		.loc 1 2189 3
 3334 0008 7B68     		ldr	r3, [r7, #4]
 3335 000a 1B68     		ldr	r3, [r3]
 3336 000c 1A68     		ldr	r2, [r3]
 3337 000e 7B68     		ldr	r3, [r7, #4]
 3338 0010 1B68     		ldr	r3, [r3]
 3339 0012 22F49072 		bic	r2, r2, #288
 3340 0016 1A60     		str	r2, [r3]
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3341              		.loc 1 2190 3
 3342 0018 7B68     		ldr	r3, [r7, #4]
 3343 001a 1B68     		ldr	r3, [r3]
 3344 001c 9A68     		ldr	r2, [r3, #8]
 3345 001e 7B68     		ldr	r3, [r7, #4]
 3346 0020 1B68     		ldr	r3, [r3]
 3347 0022 22F00102 		bic	r2, r2, #1
 3348 0026 9A60     		str	r2, [r3, #8]
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3349              		.loc 1 2194 7
 3350 0028 7B68     		ldr	r3, [r7, #4]
 3351 002a 1B68     		ldr	r3, [r3]
 3352 002c 9B68     		ldr	r3, [r3, #8]
 3353 002e 03F04003 		and	r3, r3, #64
 3354              		.loc 1 2194 6
 3355 0032 402B     		cmp	r3, #64
 3356 0034 3BD1     		bne	.L159
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3357              		.loc 1 2196 5
 3358 0036 7B68     		ldr	r3, [r7, #4]
 3359 0038 1B68     		ldr	r3, [r3]
 3360 003a 9A68     		ldr	r2, [r3, #8]
 3361 003c 7B68     		ldr	r3, [r7, #4]
 3362 003e 1B68     		ldr	r3, [r3]
 3363 0040 22F04002 		bic	r2, r2, #64
 3364 0044 9A60     		str	r2, [r3, #8]
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3365              		.loc 1 2199 14
 3366 0046 7B68     		ldr	r3, [r7, #4]
 3367 0048 DB6E     		ldr	r3, [r3, #108]
 3368              		.loc 1 2199 8
 3369 004a 002B     		cmp	r3, #0
ARM GAS  /tmp/cc8fmbDk.s 			page 98


 3370 004c 13D0     		beq	.L160
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3371              		.loc 1 2203 12
 3372 004e 7B68     		ldr	r3, [r7, #4]
 3373 0050 DB6E     		ldr	r3, [r3, #108]
 3374              		.loc 1 2203 40
 3375 0052 224A     		ldr	r2, .L163
 3376 0054 9A63     		str	r2, [r3, #56]
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3377              		.loc 1 2206 11
 3378 0056 7B68     		ldr	r3, [r7, #4]
 3379 0058 DB6E     		ldr	r3, [r3, #108]
 3380 005a 1846     		mov	r0, r3
 3381 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3382 0060 0346     		mov	r3, r0
 3383              		.loc 1 2206 10
 3384 0062 002B     		cmp	r3, #0
 3385 0064 34D0     		beq	.L161
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3386              		.loc 1 2209 14
 3387 0066 7B68     		ldr	r3, [r7, #4]
 3388 0068 DB6E     		ldr	r3, [r3, #108]
 3389              		.loc 1 2209 22
 3390 006a 9B6B     		ldr	r3, [r3, #56]
 3391              		.loc 1 2209 47
 3392 006c 7A68     		ldr	r2, [r7, #4]
 3393 006e D26E     		ldr	r2, [r2, #108]
 3394              		.loc 1 2209 9
 3395 0070 1046     		mov	r0, r2
 3396 0072 9847     		blx	r3
 3397              	.LVL1:
 3398 0074 2CE0     		b	.L161
 3399              	.L160:
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
 3400              		.loc 1 2215 26
 3401 0076 7B68     		ldr	r3, [r7, #4]
 3402 0078 0022     		movs	r2, #0
 3403 007a A3F85A20 		strh	r2, [r3, #90]	@ movhi
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 3404              		.loc 1 2218 25
 3405 007e 7B68     		ldr	r3, [r7, #4]
 3406 0080 0022     		movs	r2, #0
 3407 0082 5A65     		str	r2, [r3, #84]
ARM GAS  /tmp/cc8fmbDk.s 			page 99


2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 3408              		.loc 1 2221 7
 3409 0084 7B68     		ldr	r3, [r7, #4]
 3410 0086 1B68     		ldr	r3, [r3]
 3411 0088 0F22     		movs	r2, #15
 3412 008a 1A62     		str	r2, [r3, #32]
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3413              		.loc 1 2224 7
 3414 008c 7B68     		ldr	r3, [r7, #4]
 3415 008e 1B68     		ldr	r3, [r3]
 3416 0090 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3417 0092 9AB2     		uxth	r2, r3
 3418 0094 7B68     		ldr	r3, [r7, #4]
 3419 0096 1B68     		ldr	r3, [r3]
 3420 0098 42F00802 		orr	r2, r2, #8
 3421 009c 92B2     		uxth	r2, r2
 3422 009e 1A83     		strh	r2, [r3, #24]	@ movhi
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3423              		.loc 1 2227 22
 3424 00a0 7B68     		ldr	r3, [r7, #4]
 3425 00a2 2022     		movs	r2, #32
 3426 00a4 9A67     		str	r2, [r3, #120]
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3427              		.loc 1 2235 7
 3428 00a6 7868     		ldr	r0, [r7, #4]
 3429 00a8 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3430 00ac 10E0     		b	.L161
 3431              	.L159:
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3432              		.loc 1 2242 24
 3433 00ae 7B68     		ldr	r3, [r7, #4]
 3434 00b0 0022     		movs	r2, #0
 3435 00b2 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 3436              		.loc 1 2245 23
 3437 00b6 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 100


 3438 00b8 0022     		movs	r2, #0
 3439 00ba 5A65     		str	r2, [r3, #84]
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3440              		.loc 1 2248 5
 3441 00bc 7B68     		ldr	r3, [r7, #4]
 3442 00be 1B68     		ldr	r3, [r3]
 3443 00c0 0F22     		movs	r2, #15
 3444 00c2 1A62     		str	r2, [r3, #32]
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3445              		.loc 1 2251 20
 3446 00c4 7B68     		ldr	r3, [r7, #4]
 3447 00c6 2022     		movs	r2, #32
 3448 00c8 9A67     		str	r2, [r3, #120]
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3449              		.loc 1 2259 5
 3450 00ca 7868     		ldr	r0, [r7, #4]
 3451 00cc FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3452              	.L161:
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3453              		.loc 1 2263 10
 3454 00d0 0023     		movs	r3, #0
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3455              		.loc 1 2264 1
 3456 00d2 1846     		mov	r0, r3
 3457 00d4 0837     		adds	r7, r7, #8
 3458              	.LCFI114:
 3459              		.cfi_def_cfa_offset 8
 3460 00d6 BD46     		mov	sp, r7
 3461              	.LCFI115:
 3462              		.cfi_def_cfa_register 13
 3463              		@ sp needed
 3464 00d8 80BD     		pop	{r7, pc}
 3465              	.L164:
 3466 00da 00BF     		.align	2
 3467              	.L163:
 3468 00dc 00000000 		.word	UART_DMARxOnlyAbortCallback
 3469              		.cfi_endproc
 3470              	.LFE153:
 3472              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3473              		.align	1
 3474              		.global	HAL_UART_IRQHandler
 3475              		.syntax unified
 3476              		.thumb
ARM GAS  /tmp/cc8fmbDk.s 			page 101


 3477              		.thumb_func
 3478              		.fpu fpv4-sp-d16
 3480              	HAL_UART_IRQHandler:
 3481              	.LFB154:
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3482              		.loc 1 2272 1
 3483              		.cfi_startproc
 3484              		@ args = 0, pretend = 0, frame = 32
 3485              		@ frame_needed = 1, uses_anonymous_args = 0
 3486 0000 80B5     		push	{r7, lr}
 3487              	.LCFI116:
 3488              		.cfi_def_cfa_offset 8
 3489              		.cfi_offset 7, -8
 3490              		.cfi_offset 14, -4
 3491 0002 88B0     		sub	sp, sp, #32
 3492              	.LCFI117:
 3493              		.cfi_def_cfa_offset 40
 3494 0004 00AF     		add	r7, sp, #0
 3495              	.LCFI118:
 3496              		.cfi_def_cfa_register 7
 3497 0006 7860     		str	r0, [r7, #4]
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3498              		.loc 1 2273 25
 3499 0008 7B68     		ldr	r3, [r7, #4]
 3500 000a 1B68     		ldr	r3, [r3]
 3501              		.loc 1 2273 12
 3502 000c DB69     		ldr	r3, [r3, #28]
 3503 000e FB61     		str	r3, [r7, #28]
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3504              		.loc 1 2274 25
 3505 0010 7B68     		ldr	r3, [r7, #4]
 3506 0012 1B68     		ldr	r3, [r3]
 3507              		.loc 1 2274 12
 3508 0014 1B68     		ldr	r3, [r3]
 3509 0016 BB61     		str	r3, [r7, #24]
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3510              		.loc 1 2275 25
 3511 0018 7B68     		ldr	r3, [r7, #4]
 3512 001a 1B68     		ldr	r3, [r3]
 3513              		.loc 1 2275 12
 3514 001c 9B68     		ldr	r3, [r3, #8]
 3515 001e 7B61     		str	r3, [r7, #20]
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorcode;
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
 3516              		.loc 1 2281 14
 3517 0020 FA69     		ldr	r2, [r7, #28]
ARM GAS  /tmp/cc8fmbDk.s 			page 102


 3518 0022 40F60F03 		movw	r3, #2063
 3519 0026 1340     		ands	r3, r3, r2
 3520 0028 3B61     		str	r3, [r7, #16]
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
 3521              		.loc 1 2282 6
 3522 002a 3B69     		ldr	r3, [r7, #16]
 3523 002c 002B     		cmp	r3, #0
 3524 002e 13D1     		bne	.L166
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
 3525              		.loc 1 2290 20
 3526 0030 FB69     		ldr	r3, [r7, #28]
 3527 0032 03F02003 		and	r3, r3, #32
 3528              		.loc 1 2290 8
 3529 0036 002B     		cmp	r3, #0
 3530 0038 0ED0     		beq	.L166
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 3531              		.loc 1 2291 21
 3532 003a BB69     		ldr	r3, [r7, #24]
 3533 003c 03F02003 		and	r3, r3, #32
 3534              		.loc 1 2291 9
 3535 0040 002B     		cmp	r3, #0
 3536 0042 09D0     		beq	.L166
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
 3537              		.loc 1 2294 16
 3538 0044 7B68     		ldr	r3, [r7, #4]
 3539 0046 1B6E     		ldr	r3, [r3, #96]
 3540              		.loc 1 2294 10
 3541 0048 002B     		cmp	r3, #0
 3542 004a 00F01381 		beq	.L187
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
 3543              		.loc 1 2296 14
 3544 004e 7B68     		ldr	r3, [r7, #4]
 3545 0050 1B6E     		ldr	r3, [r3, #96]
 3546              		.loc 1 2296 9
 3547 0052 7868     		ldr	r0, [r7, #4]
 3548 0054 9847     		blx	r3
 3549              	.LVL2:
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
 3550              		.loc 1 2298 7
 3551 0056 0DE1     		b	.L187
 3552              	.L166:
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
ARM GAS  /tmp/cc8fmbDk.s 			page 103


2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
 3553              		.loc 1 2308 6
 3554 0058 3B69     		ldr	r3, [r7, #16]
 3555 005a 002B     		cmp	r3, #0
 3556 005c 00F0D680 		beq	.L169
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 3557              		.loc 1 2309 20
 3558 0060 7B69     		ldr	r3, [r7, #20]
 3559 0062 03F00103 		and	r3, r3, #1
 3560              		.loc 1 2309 7
 3561 0066 002B     		cmp	r3, #0
 3562 0068 05D1     		bne	.L170
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 3563              		.loc 1 2310 23
 3564 006a BA69     		ldr	r2, [r7, #24]
 3565 006c 854B     		ldr	r3, .L191
 3566 006e 1340     		ands	r3, r3, r2
 3567              		.loc 1 2310 11
 3568 0070 002B     		cmp	r3, #0
 3569 0072 00F0CB80 		beq	.L169
 3570              	.L170:
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 3571              		.loc 1 2314 20
 3572 0076 FB69     		ldr	r3, [r7, #28]
 3573 0078 03F00103 		and	r3, r3, #1
 3574              		.loc 1 2314 8
 3575 007c 002B     		cmp	r3, #0
 3576 007e 0ED0     		beq	.L171
 3577              		.loc 1 2314 55 discriminator 1
 3578 0080 BB69     		ldr	r3, [r7, #24]
 3579 0082 03F48073 		and	r3, r3, #256
 3580              		.loc 1 2314 43 discriminator 1
 3581 0086 002B     		cmp	r3, #0
 3582 0088 09D0     		beq	.L171
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 3583              		.loc 1 2316 7
 3584 008a 7B68     		ldr	r3, [r7, #4]
 3585 008c 1B68     		ldr	r3, [r3]
 3586 008e 0122     		movs	r2, #1
 3587 0090 1A62     		str	r2, [r3, #32]
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3588              		.loc 1 2318 24
 3589 0092 7B68     		ldr	r3, [r7, #4]
 3590 0094 DB6F     		ldr	r3, [r3, #124]
 3591 0096 43F00102 		orr	r2, r3, #1
 3592 009a 7B68     		ldr	r3, [r7, #4]
 3593 009c DA67     		str	r2, [r3, #124]
 3594              	.L171:
ARM GAS  /tmp/cc8fmbDk.s 			page 104


2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3595              		.loc 1 2322 20
 3596 009e FB69     		ldr	r3, [r7, #28]
 3597 00a0 03F00203 		and	r3, r3, #2
 3598              		.loc 1 2322 8
 3599 00a4 002B     		cmp	r3, #0
 3600 00a6 0ED0     		beq	.L172
 3601              		.loc 1 2322 55 discriminator 1
 3602 00a8 7B69     		ldr	r3, [r7, #20]
 3603 00aa 03F00103 		and	r3, r3, #1
 3604              		.loc 1 2322 43 discriminator 1
 3605 00ae 002B     		cmp	r3, #0
 3606 00b0 09D0     		beq	.L172
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 3607              		.loc 1 2324 7
 3608 00b2 7B68     		ldr	r3, [r7, #4]
 3609 00b4 1B68     		ldr	r3, [r3]
 3610 00b6 0222     		movs	r2, #2
 3611 00b8 1A62     		str	r2, [r3, #32]
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3612              		.loc 1 2326 24
 3613 00ba 7B68     		ldr	r3, [r7, #4]
 3614 00bc DB6F     		ldr	r3, [r3, #124]
 3615 00be 43F00402 		orr	r2, r3, #4
 3616 00c2 7B68     		ldr	r3, [r7, #4]
 3617 00c4 DA67     		str	r2, [r3, #124]
 3618              	.L172:
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3619              		.loc 1 2330 20
 3620 00c6 FB69     		ldr	r3, [r7, #28]
 3621 00c8 03F00403 		and	r3, r3, #4
 3622              		.loc 1 2330 8
 3623 00cc 002B     		cmp	r3, #0
 3624 00ce 0ED0     		beq	.L173
 3625              		.loc 1 2330 55 discriminator 1
 3626 00d0 7B69     		ldr	r3, [r7, #20]
 3627 00d2 03F00103 		and	r3, r3, #1
 3628              		.loc 1 2330 43 discriminator 1
 3629 00d6 002B     		cmp	r3, #0
 3630 00d8 09D0     		beq	.L173
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 3631              		.loc 1 2332 7
 3632 00da 7B68     		ldr	r3, [r7, #4]
 3633 00dc 1B68     		ldr	r3, [r3]
 3634 00de 0422     		movs	r2, #4
 3635 00e0 1A62     		str	r2, [r3, #32]
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
ARM GAS  /tmp/cc8fmbDk.s 			page 105


 3636              		.loc 1 2334 24
 3637 00e2 7B68     		ldr	r3, [r7, #4]
 3638 00e4 DB6F     		ldr	r3, [r3, #124]
 3639 00e6 43F00202 		orr	r2, r3, #2
 3640 00ea 7B68     		ldr	r3, [r7, #4]
 3641 00ec DA67     		str	r2, [r3, #124]
 3642              	.L173:
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 3643              		.loc 1 2343 20
 3644 00ee FB69     		ldr	r3, [r7, #28]
 3645 00f0 03F00803 		and	r3, r3, #8
 3646              		.loc 1 2343 8
 3647 00f4 002B     		cmp	r3, #0
 3648 00f6 13D0     		beq	.L174
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3649              		.loc 1 2344 22
 3650 00f8 BB69     		ldr	r3, [r7, #24]
 3651 00fa 03F02003 		and	r3, r3, #32
 3652              		.loc 1 2344 9
 3653 00fe 002B     		cmp	r3, #0
 3654 0100 04D1     		bne	.L175
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 3655              		.loc 1 2345 22 discriminator 1
 3656 0102 7B69     		ldr	r3, [r7, #20]
 3657 0104 03F00103 		and	r3, r3, #1
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3658              		.loc 1 2344 49 discriminator 1
 3659 0108 002B     		cmp	r3, #0
 3660 010a 09D0     		beq	.L174
 3661              	.L175:
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 3662              		.loc 1 2348 7
 3663 010c 7B68     		ldr	r3, [r7, #4]
 3664 010e 1B68     		ldr	r3, [r3]
 3665 0110 0822     		movs	r2, #8
 3666 0112 1A62     		str	r2, [r3, #32]
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3667              		.loc 1 2350 24
 3668 0114 7B68     		ldr	r3, [r7, #4]
 3669 0116 DB6F     		ldr	r3, [r3, #124]
 3670 0118 43F00802 		orr	r2, r3, #8
 3671 011c 7B68     		ldr	r3, [r7, #4]
 3672 011e DA67     		str	r2, [r3, #124]
 3673              	.L174:
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc8fmbDk.s 			page 106


2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 3674              		.loc 1 2354 20
 3675 0120 FB69     		ldr	r3, [r7, #28]
 3676 0122 03F40063 		and	r3, r3, #2048
 3677              		.loc 1 2354 8
 3678 0126 002B     		cmp	r3, #0
 3679 0128 0FD0     		beq	.L176
 3680              		.loc 1 2354 57 discriminator 1
 3681 012a BB69     		ldr	r3, [r7, #24]
 3682 012c 03F08063 		and	r3, r3, #67108864
 3683              		.loc 1 2354 45 discriminator 1
 3684 0130 002B     		cmp	r3, #0
 3685 0132 0AD0     		beq	.L176
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 3686              		.loc 1 2356 7
 3687 0134 7B68     		ldr	r3, [r7, #4]
 3688 0136 1B68     		ldr	r3, [r3]
 3689 0138 4FF40062 		mov	r2, #2048
 3690 013c 1A62     		str	r2, [r3, #32]
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
 3691              		.loc 1 2358 24
 3692 013e 7B68     		ldr	r3, [r7, #4]
 3693 0140 DB6F     		ldr	r3, [r3, #124]
 3694 0142 43F02002 		orr	r2, r3, #32
 3695 0146 7B68     		ldr	r3, [r7, #4]
 3696 0148 DA67     		str	r2, [r3, #124]
 3697              	.L176:
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3698              		.loc 1 2362 14
 3699 014a 7B68     		ldr	r3, [r7, #4]
 3700 014c DB6F     		ldr	r3, [r3, #124]
 3701              		.loc 1 2362 8
 3702 014e 002B     		cmp	r3, #0
 3703 0150 00F09280 		beq	.L188
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
 3704              		.loc 1 2370 22
 3705 0154 FB69     		ldr	r3, [r7, #28]
 3706 0156 03F02003 		and	r3, r3, #32
 3707              		.loc 1 2370 10
 3708 015a 002B     		cmp	r3, #0
 3709 015c 0CD0     		beq	.L178
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 3710              		.loc 1 2371 23
 3711 015e BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/cc8fmbDk.s 			page 107


 3712 0160 03F02003 		and	r3, r3, #32
 3713              		.loc 1 2371 11
 3714 0164 002B     		cmp	r3, #0
 3715 0166 07D0     		beq	.L178
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
 3716              		.loc 1 2374 18
 3717 0168 7B68     		ldr	r3, [r7, #4]
 3718 016a 1B6E     		ldr	r3, [r3, #96]
 3719              		.loc 1 2374 12
 3720 016c 002B     		cmp	r3, #0
 3721 016e 03D0     		beq	.L178
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
 3722              		.loc 1 2376 16
 3723 0170 7B68     		ldr	r3, [r7, #4]
 3724 0172 1B6E     		ldr	r3, [r3, #96]
 3725              		.loc 1 2376 11
 3726 0174 7868     		ldr	r0, [r7, #4]
 3727 0176 9847     		blx	r3
 3728              	.LVL3:
 3729              	.L178:
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - Receiver Timeout error in Reception
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - Overrun error in Reception
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - any error occurs in DMA mode reception
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       */
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 3730              		.loc 1 2385 17
 3731 0178 7B68     		ldr	r3, [r7, #4]
 3732 017a DB6F     		ldr	r3, [r3, #124]
 3733 017c FB60     		str	r3, [r7, #12]
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3734              		.loc 1 2386 12
 3735 017e 7B68     		ldr	r3, [r7, #4]
 3736 0180 1B68     		ldr	r3, [r3]
 3737 0182 9B68     		ldr	r3, [r3, #8]
 3738 0184 03F04003 		and	r3, r3, #64
 3739              		.loc 1 2386 10
 3740 0188 402B     		cmp	r3, #64
 3741 018a 04D0     		beq	.L179
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 3742              		.loc 1 2387 23 discriminator 1
 3743 018c FB68     		ldr	r3, [r7, #12]
 3744 018e 03F02803 		and	r3, r3, #40
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3745              		.loc 1 2386 66 discriminator 1
 3746 0192 002B     		cmp	r3, #0
 3747 0194 31D0     		beq	.L180
 3748              	.L179:
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
ARM GAS  /tmp/cc8fmbDk.s 			page 108


2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3749              		.loc 1 2392 9
 3750 0196 7868     		ldr	r0, [r7, #4]
 3751 0198 FFF7FEFF 		bl	UART_EndRxTransfer
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3752              		.loc 1 2395 13
 3753 019c 7B68     		ldr	r3, [r7, #4]
 3754 019e 1B68     		ldr	r3, [r3]
 3755 01a0 9B68     		ldr	r3, [r3, #8]
 3756 01a2 03F04003 		and	r3, r3, #64
 3757              		.loc 1 2395 12
 3758 01a6 402B     		cmp	r3, #64
 3759 01a8 23D1     		bne	.L181
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3760              		.loc 1 2397 11
 3761 01aa 7B68     		ldr	r3, [r7, #4]
 3762 01ac 1B68     		ldr	r3, [r3]
 3763 01ae 9A68     		ldr	r2, [r3, #8]
 3764 01b0 7B68     		ldr	r3, [r7, #4]
 3765 01b2 1B68     		ldr	r3, [r3]
 3766 01b4 22F04002 		bic	r2, r2, #64
 3767 01b8 9A60     		str	r2, [r3, #8]
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3768              		.loc 1 2400 20
 3769 01ba 7B68     		ldr	r3, [r7, #4]
 3770 01bc DB6E     		ldr	r3, [r3, #108]
 3771              		.loc 1 2400 14
 3772 01be 002B     		cmp	r3, #0
 3773 01c0 13D0     		beq	.L182
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3774              		.loc 1 2404 18
 3775 01c2 7B68     		ldr	r3, [r7, #4]
 3776 01c4 DB6E     		ldr	r3, [r3, #108]
 3777              		.loc 1 2404 46
 3778 01c6 304A     		ldr	r2, .L191+4
 3779 01c8 9A63     		str	r2, [r3, #56]
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3780              		.loc 1 2407 17
 3781 01ca 7B68     		ldr	r3, [r7, #4]
 3782 01cc DB6E     		ldr	r3, [r3, #108]
 3783 01ce 1846     		mov	r0, r3
 3784 01d0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3785 01d4 0346     		mov	r3, r0
 3786              		.loc 1 2407 16
 3787 01d6 002B     		cmp	r3, #0
 3788 01d8 16D0     		beq	.L189
ARM GAS  /tmp/cc8fmbDk.s 			page 109


2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3789              		.loc 1 2410 20
 3790 01da 7B68     		ldr	r3, [r7, #4]
 3791 01dc DB6E     		ldr	r3, [r3, #108]
 3792              		.loc 1 2410 28
 3793 01de 9B6B     		ldr	r3, [r3, #56]
 3794              		.loc 1 2410 53
 3795 01e0 7A68     		ldr	r2, [r7, #4]
 3796 01e2 D26E     		ldr	r2, [r2, #108]
 3797              		.loc 1 2410 15
 3798 01e4 1046     		mov	r0, r2
 3799 01e6 9847     		blx	r3
 3800              	.LVL4:
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3801              		.loc 1 2395 12
 3802 01e8 0EE0     		b	.L189
 3803              	.L182:
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3804              		.loc 1 2421 13
 3805 01ea 7868     		ldr	r0, [r7, #4]
 3806 01ec FFF7FEFF 		bl	HAL_UART_ErrorCallback
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3807              		.loc 1 2395 12
 3808 01f0 0AE0     		b	.L189
 3809              	.L181:
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3810              		.loc 1 2434 11
 3811 01f2 7868     		ldr	r0, [r7, #4]
 3812 01f4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3813              		.loc 1 2395 12
 3814 01f8 06E0     		b	.L189
 3815              	.L180:
ARM GAS  /tmp/cc8fmbDk.s 			page 110


2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3816              		.loc 1 2447 9
 3817 01fa 7868     		ldr	r0, [r7, #4]
 3818 01fc FFF7FEFF 		bl	HAL_UART_ErrorCallback
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3819              		.loc 1 2449 26
 3820 0200 7B68     		ldr	r3, [r7, #4]
 3821 0202 0022     		movs	r2, #0
 3822 0204 DA67     		str	r2, [r3, #124]
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3823              		.loc 1 2452 5
 3824 0206 37E0     		b	.L188
 3825              	.L189:
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3826              		.loc 1 2395 12
 3827 0208 00BF     		nop
 3828              		.loc 1 2452 5
 3829 020a 35E0     		b	.L188
 3830              	.L169:
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 3831              		.loc 1 2457 18
 3832 020c FB69     		ldr	r3, [r7, #28]
 3833 020e 03F48013 		and	r3, r3, #1048576
 3834              		.loc 1 2457 6
 3835 0212 002B     		cmp	r3, #0
 3836 0214 0DD0     		beq	.L184
 3837              		.loc 1 2457 54 discriminator 1
 3838 0216 7B69     		ldr	r3, [r7, #20]
 3839 0218 03F48003 		and	r3, r3, #4194304
 3840              		.loc 1 2457 42 discriminator 1
 3841 021c 002B     		cmp	r3, #0
 3842 021e 08D0     		beq	.L184
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 3843              		.loc 1 2459 5
 3844 0220 7B68     		ldr	r3, [r7, #4]
 3845 0222 1B68     		ldr	r3, [r3]
 3846 0224 4FF48012 		mov	r2, #1048576
ARM GAS  /tmp/cc8fmbDk.s 			page 111


 3847 0228 1A62     		str	r2, [r3, #32]
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 3848              		.loc 1 2469 5
 3849 022a 7868     		ldr	r0, [r7, #4]
 3850 022c FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3851              		.loc 1 2471 5
 3852 0230 25E0     		b	.L165
 3853              	.L184:
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
 3854              		.loc 1 2480 18
 3855 0232 FB69     		ldr	r3, [r7, #28]
 3856 0234 03F08003 		and	r3, r3, #128
 3857              		.loc 1 2480 6
 3858 0238 002B     		cmp	r3, #0
 3859 023a 0DD0     		beq	.L185
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 3860              		.loc 1 2481 19
 3861 023c BB69     		ldr	r3, [r7, #24]
 3862 023e 03F08003 		and	r3, r3, #128
 3863              		.loc 1 2481 7
 3864 0242 002B     		cmp	r3, #0
 3865 0244 08D0     		beq	.L185
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
 3866              		.loc 1 2484 14
 3867 0246 7B68     		ldr	r3, [r7, #4]
 3868 0248 5B6E     		ldr	r3, [r3, #100]
 3869              		.loc 1 2484 8
 3870 024a 002B     		cmp	r3, #0
 3871 024c 16D0     		beq	.L190
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
 3872              		.loc 1 2486 12
 3873 024e 7B68     		ldr	r3, [r7, #4]
 3874 0250 5B6E     		ldr	r3, [r3, #100]
 3875              		.loc 1 2486 7
 3876 0252 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 112


 3877 0254 9847     		blx	r3
 3878              	.LVL5:
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3879              		.loc 1 2488 5
 3880 0256 11E0     		b	.L190
 3881              	.L185:
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 3882              		.loc 1 2492 18
 3883 0258 FB69     		ldr	r3, [r7, #28]
 3884 025a 03F04003 		and	r3, r3, #64
 3885              		.loc 1 2492 6
 3886 025e 002B     		cmp	r3, #0
 3887 0260 0DD0     		beq	.L165
 3888              		.loc 1 2492 53 discriminator 1
 3889 0262 BB69     		ldr	r3, [r7, #24]
 3890 0264 03F04003 		and	r3, r3, #64
 3891              		.loc 1 2492 41 discriminator 1
 3892 0268 002B     		cmp	r3, #0
 3893 026a 08D0     		beq	.L165
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3894              		.loc 1 2494 5
 3895 026c 7868     		ldr	r0, [r7, #4]
 3896 026e FFF7FEFF 		bl	UART_EndTransmit_IT
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3897              		.loc 1 2495 5
 3898 0272 04E0     		b	.L165
 3899              	.L187:
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3900              		.loc 1 2298 7
 3901 0274 00BF     		nop
 3902 0276 02E0     		b	.L165
 3903              	.L188:
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3904              		.loc 1 2452 5
 3905 0278 00BF     		nop
 3906 027a 00E0     		b	.L165
 3907              	.L190:
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3908              		.loc 1 2488 5
 3909 027c 00BF     		nop
 3910              	.L165:
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
ARM GAS  /tmp/cc8fmbDk.s 			page 113


2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3911              		.loc 1 2525 1
 3912 027e 2037     		adds	r7, r7, #32
 3913              	.LCFI119:
 3914              		.cfi_def_cfa_offset 8
 3915 0280 BD46     		mov	sp, r7
 3916              	.LCFI120:
 3917              		.cfi_def_cfa_register 13
 3918              		@ sp needed
 3919 0282 80BD     		pop	{r7, pc}
 3920              	.L192:
 3921              		.align	2
 3922              	.L191:
 3923 0284 20010004 		.word	67109152
 3924 0288 00000000 		.word	UART_DMAAbortOnError
 3925              		.cfi_endproc
 3926              	.LFE154:
 3928              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3929              		.align	1
 3930              		.weak	HAL_UART_TxCpltCallback
 3931              		.syntax unified
 3932              		.thumb
 3933              		.thumb_func
 3934              		.fpu fpv4-sp-d16
 3936              	HAL_UART_TxCpltCallback:
 3937              	.LFB155:
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3938              		.loc 1 2533 1
 3939              		.cfi_startproc
 3940              		@ args = 0, pretend = 0, frame = 8
 3941              		@ frame_needed = 1, uses_anonymous_args = 0
 3942              		@ link register save eliminated.
ARM GAS  /tmp/cc8fmbDk.s 			page 114


 3943 0000 80B4     		push	{r7}
 3944              	.LCFI121:
 3945              		.cfi_def_cfa_offset 4
 3946              		.cfi_offset 7, -4
 3947 0002 83B0     		sub	sp, sp, #12
 3948              	.LCFI122:
 3949              		.cfi_def_cfa_offset 16
 3950 0004 00AF     		add	r7, sp, #0
 3951              	.LCFI123:
 3952              		.cfi_def_cfa_register 7
 3953 0006 7860     		str	r0, [r7, #4]
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3954              		.loc 1 2540 1
 3955 0008 00BF     		nop
 3956 000a 0C37     		adds	r7, r7, #12
 3957              	.LCFI124:
 3958              		.cfi_def_cfa_offset 4
 3959 000c BD46     		mov	sp, r7
 3960              	.LCFI125:
 3961              		.cfi_def_cfa_register 13
 3962              		@ sp needed
 3963 000e 5DF8047B 		ldr	r7, [sp], #4
 3964              	.LCFI126:
 3965              		.cfi_restore 7
 3966              		.cfi_def_cfa_offset 0
 3967 0012 7047     		bx	lr
 3968              		.cfi_endproc
 3969              	.LFE155:
 3971              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3972              		.align	1
 3973              		.weak	HAL_UART_TxHalfCpltCallback
 3974              		.syntax unified
 3975              		.thumb
 3976              		.thumb_func
 3977              		.fpu fpv4-sp-d16
 3979              	HAL_UART_TxHalfCpltCallback:
 3980              	.LFB156:
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3981              		.loc 1 2548 1
 3982              		.cfi_startproc
 3983              		@ args = 0, pretend = 0, frame = 8
 3984              		@ frame_needed = 1, uses_anonymous_args = 0
 3985              		@ link register save eliminated.
 3986 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc8fmbDk.s 			page 115


 3987              	.LCFI127:
 3988              		.cfi_def_cfa_offset 4
 3989              		.cfi_offset 7, -4
 3990 0002 83B0     		sub	sp, sp, #12
 3991              	.LCFI128:
 3992              		.cfi_def_cfa_offset 16
 3993 0004 00AF     		add	r7, sp, #0
 3994              	.LCFI129:
 3995              		.cfi_def_cfa_register 7
 3996 0006 7860     		str	r0, [r7, #4]
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3997              		.loc 1 2555 1
 3998 0008 00BF     		nop
 3999 000a 0C37     		adds	r7, r7, #12
 4000              	.LCFI130:
 4001              		.cfi_def_cfa_offset 4
 4002 000c BD46     		mov	sp, r7
 4003              	.LCFI131:
 4004              		.cfi_def_cfa_register 13
 4005              		@ sp needed
 4006 000e 5DF8047B 		ldr	r7, [sp], #4
 4007              	.LCFI132:
 4008              		.cfi_restore 7
 4009              		.cfi_def_cfa_offset 0
 4010 0012 7047     		bx	lr
 4011              		.cfi_endproc
 4012              	.LFE156:
 4014              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 4015              		.align	1
 4016              		.weak	HAL_UART_RxCpltCallback
 4017              		.syntax unified
 4018              		.thumb
 4019              		.thumb_func
 4020              		.fpu fpv4-sp-d16
 4022              	HAL_UART_RxCpltCallback:
 4023              	.LFB157:
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4024              		.loc 1 2563 1
 4025              		.cfi_startproc
 4026              		@ args = 0, pretend = 0, frame = 8
 4027              		@ frame_needed = 1, uses_anonymous_args = 0
 4028              		@ link register save eliminated.
 4029 0000 80B4     		push	{r7}
 4030              	.LCFI133:
ARM GAS  /tmp/cc8fmbDk.s 			page 116


 4031              		.cfi_def_cfa_offset 4
 4032              		.cfi_offset 7, -4
 4033 0002 83B0     		sub	sp, sp, #12
 4034              	.LCFI134:
 4035              		.cfi_def_cfa_offset 16
 4036 0004 00AF     		add	r7, sp, #0
 4037              	.LCFI135:
 4038              		.cfi_def_cfa_register 7
 4039 0006 7860     		str	r0, [r7, #4]
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4040              		.loc 1 2570 1
 4041 0008 00BF     		nop
 4042 000a 0C37     		adds	r7, r7, #12
 4043              	.LCFI136:
 4044              		.cfi_def_cfa_offset 4
 4045 000c BD46     		mov	sp, r7
 4046              	.LCFI137:
 4047              		.cfi_def_cfa_register 13
 4048              		@ sp needed
 4049 000e 5DF8047B 		ldr	r7, [sp], #4
 4050              	.LCFI138:
 4051              		.cfi_restore 7
 4052              		.cfi_def_cfa_offset 0
 4053 0012 7047     		bx	lr
 4054              		.cfi_endproc
 4055              	.LFE157:
 4057              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 4058              		.align	1
 4059              		.weak	HAL_UART_RxHalfCpltCallback
 4060              		.syntax unified
 4061              		.thumb
 4062              		.thumb_func
 4063              		.fpu fpv4-sp-d16
 4065              	HAL_UART_RxHalfCpltCallback:
 4066              	.LFB158:
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4067              		.loc 1 2578 1
 4068              		.cfi_startproc
 4069              		@ args = 0, pretend = 0, frame = 8
 4070              		@ frame_needed = 1, uses_anonymous_args = 0
 4071              		@ link register save eliminated.
 4072 0000 80B4     		push	{r7}
 4073              	.LCFI139:
 4074              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc8fmbDk.s 			page 117


 4075              		.cfi_offset 7, -4
 4076 0002 83B0     		sub	sp, sp, #12
 4077              	.LCFI140:
 4078              		.cfi_def_cfa_offset 16
 4079 0004 00AF     		add	r7, sp, #0
 4080              	.LCFI141:
 4081              		.cfi_def_cfa_register 7
 4082 0006 7860     		str	r0, [r7, #4]
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4083              		.loc 1 2585 1
 4084 0008 00BF     		nop
 4085 000a 0C37     		adds	r7, r7, #12
 4086              	.LCFI142:
 4087              		.cfi_def_cfa_offset 4
 4088 000c BD46     		mov	sp, r7
 4089              	.LCFI143:
 4090              		.cfi_def_cfa_register 13
 4091              		@ sp needed
 4092 000e 5DF8047B 		ldr	r7, [sp], #4
 4093              	.LCFI144:
 4094              		.cfi_restore 7
 4095              		.cfi_def_cfa_offset 0
 4096 0012 7047     		bx	lr
 4097              		.cfi_endproc
 4098              	.LFE158:
 4100              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 4101              		.align	1
 4102              		.weak	HAL_UART_ErrorCallback
 4103              		.syntax unified
 4104              		.thumb
 4105              		.thumb_func
 4106              		.fpu fpv4-sp-d16
 4108              	HAL_UART_ErrorCallback:
 4109              	.LFB159:
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART error callback.
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4110              		.loc 1 2593 1
 4111              		.cfi_startproc
 4112              		@ args = 0, pretend = 0, frame = 8
 4113              		@ frame_needed = 1, uses_anonymous_args = 0
 4114              		@ link register save eliminated.
 4115 0000 80B4     		push	{r7}
 4116              	.LCFI145:
 4117              		.cfi_def_cfa_offset 4
 4118              		.cfi_offset 7, -4
ARM GAS  /tmp/cc8fmbDk.s 			page 118


 4119 0002 83B0     		sub	sp, sp, #12
 4120              	.LCFI146:
 4121              		.cfi_def_cfa_offset 16
 4122 0004 00AF     		add	r7, sp, #0
 4123              	.LCFI147:
 4124              		.cfi_def_cfa_register 7
 4125 0006 7860     		str	r0, [r7, #4]
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4126              		.loc 1 2600 1
 4127 0008 00BF     		nop
 4128 000a 0C37     		adds	r7, r7, #12
 4129              	.LCFI148:
 4130              		.cfi_def_cfa_offset 4
 4131 000c BD46     		mov	sp, r7
 4132              	.LCFI149:
 4133              		.cfi_def_cfa_register 13
 4134              		@ sp needed
 4135 000e 5DF8047B 		ldr	r7, [sp], #4
 4136              	.LCFI150:
 4137              		.cfi_restore 7
 4138              		.cfi_def_cfa_offset 0
 4139 0012 7047     		bx	lr
 4140              		.cfi_endproc
 4141              	.LFE159:
 4143              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 4144              		.align	1
 4145              		.weak	HAL_UART_AbortCpltCallback
 4146              		.syntax unified
 4147              		.thumb
 4148              		.thumb_func
 4149              		.fpu fpv4-sp-d16
 4151              	HAL_UART_AbortCpltCallback:
 4152              	.LFB160:
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4153              		.loc 1 2608 1
 4154              		.cfi_startproc
 4155              		@ args = 0, pretend = 0, frame = 8
 4156              		@ frame_needed = 1, uses_anonymous_args = 0
 4157              		@ link register save eliminated.
 4158 0000 80B4     		push	{r7}
 4159              	.LCFI151:
 4160              		.cfi_def_cfa_offset 4
 4161              		.cfi_offset 7, -4
 4162 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc8fmbDk.s 			page 119


 4163              	.LCFI152:
 4164              		.cfi_def_cfa_offset 16
 4165 0004 00AF     		add	r7, sp, #0
 4166              	.LCFI153:
 4167              		.cfi_def_cfa_register 7
 4168 0006 7860     		str	r0, [r7, #4]
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4169              		.loc 1 2615 1
 4170 0008 00BF     		nop
 4171 000a 0C37     		adds	r7, r7, #12
 4172              	.LCFI154:
 4173              		.cfi_def_cfa_offset 4
 4174 000c BD46     		mov	sp, r7
 4175              	.LCFI155:
 4176              		.cfi_def_cfa_register 13
 4177              		@ sp needed
 4178 000e 5DF8047B 		ldr	r7, [sp], #4
 4179              	.LCFI156:
 4180              		.cfi_restore 7
 4181              		.cfi_def_cfa_offset 0
 4182 0012 7047     		bx	lr
 4183              		.cfi_endproc
 4184              	.LFE160:
 4186              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4187              		.align	1
 4188              		.weak	HAL_UART_AbortTransmitCpltCallback
 4189              		.syntax unified
 4190              		.thumb
 4191              		.thumb_func
 4192              		.fpu fpv4-sp-d16
 4194              	HAL_UART_AbortTransmitCpltCallback:
 4195              	.LFB161:
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4196              		.loc 1 2623 1
 4197              		.cfi_startproc
 4198              		@ args = 0, pretend = 0, frame = 8
 4199              		@ frame_needed = 1, uses_anonymous_args = 0
 4200              		@ link register save eliminated.
 4201 0000 80B4     		push	{r7}
 4202              	.LCFI157:
 4203              		.cfi_def_cfa_offset 4
 4204              		.cfi_offset 7, -4
 4205 0002 83B0     		sub	sp, sp, #12
 4206              	.LCFI158:
ARM GAS  /tmp/cc8fmbDk.s 			page 120


 4207              		.cfi_def_cfa_offset 16
 4208 0004 00AF     		add	r7, sp, #0
 4209              	.LCFI159:
 4210              		.cfi_def_cfa_register 7
 4211 0006 7860     		str	r0, [r7, #4]
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4212              		.loc 1 2630 1
 4213 0008 00BF     		nop
 4214 000a 0C37     		adds	r7, r7, #12
 4215              	.LCFI160:
 4216              		.cfi_def_cfa_offset 4
 4217 000c BD46     		mov	sp, r7
 4218              	.LCFI161:
 4219              		.cfi_def_cfa_register 13
 4220              		@ sp needed
 4221 000e 5DF8047B 		ldr	r7, [sp], #4
 4222              	.LCFI162:
 4223              		.cfi_restore 7
 4224              		.cfi_def_cfa_offset 0
 4225 0012 7047     		bx	lr
 4226              		.cfi_endproc
 4227              	.LFE161:
 4229              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4230              		.align	1
 4231              		.weak	HAL_UART_AbortReceiveCpltCallback
 4232              		.syntax unified
 4233              		.thumb
 4234              		.thumb_func
 4235              		.fpu fpv4-sp-d16
 4237              	HAL_UART_AbortReceiveCpltCallback:
 4238              	.LFB162:
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4239              		.loc 1 2638 1
 4240              		.cfi_startproc
 4241              		@ args = 0, pretend = 0, frame = 8
 4242              		@ frame_needed = 1, uses_anonymous_args = 0
 4243              		@ link register save eliminated.
 4244 0000 80B4     		push	{r7}
 4245              	.LCFI163:
 4246              		.cfi_def_cfa_offset 4
 4247              		.cfi_offset 7, -4
 4248 0002 83B0     		sub	sp, sp, #12
 4249              	.LCFI164:
 4250              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc8fmbDk.s 			page 121


 4251 0004 00AF     		add	r7, sp, #0
 4252              	.LCFI165:
 4253              		.cfi_def_cfa_register 7
 4254 0006 7860     		str	r0, [r7, #4]
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4255              		.loc 1 2645 1
 4256 0008 00BF     		nop
 4257 000a 0C37     		adds	r7, r7, #12
 4258              	.LCFI166:
 4259              		.cfi_def_cfa_offset 4
 4260 000c BD46     		mov	sp, r7
 4261              	.LCFI167:
 4262              		.cfi_def_cfa_register 13
 4263              		@ sp needed
 4264 000e 5DF8047B 		ldr	r7, [sp], #4
 4265              	.LCFI168:
 4266              		.cfi_restore 7
 4267              		.cfi_def_cfa_offset 0
 4268 0012 7047     		bx	lr
 4269              		.cfi_endproc
 4270              	.LFE162:
 4272              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 4273              		.align	1
 4274              		.global	HAL_UART_ReceiverTimeout_Config
 4275              		.syntax unified
 4276              		.thumb
 4277              		.thumb_func
 4278              		.fpu fpv4-sp-d16
 4280              	HAL_UART_ReceiverTimeout_Config:
 4281              	.LFB163:
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
ARM GAS  /tmp/cc8fmbDk.s 			page 122


2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4282              		.loc 1 2685 1
 4283              		.cfi_startproc
 4284              		@ args = 0, pretend = 0, frame = 8
 4285              		@ frame_needed = 1, uses_anonymous_args = 0
 4286              		@ link register save eliminated.
 4287 0000 80B4     		push	{r7}
 4288              	.LCFI169:
 4289              		.cfi_def_cfa_offset 4
 4290              		.cfi_offset 7, -4
 4291 0002 83B0     		sub	sp, sp, #12
 4292              	.LCFI170:
 4293              		.cfi_def_cfa_offset 16
 4294 0004 00AF     		add	r7, sp, #0
 4295              	.LCFI171:
 4296              		.cfi_def_cfa_register 7
 4297 0006 7860     		str	r0, [r7, #4]
 4298 0008 3960     		str	r1, [r7]
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 4299              		.loc 1 2686 9
 4300 000a 7B68     		ldr	r3, [r7, #4]
 4301 000c 1B68     		ldr	r3, [r3]
 4302              		.loc 1 2686 6
 4303 000e 094A     		ldr	r2, .L204
 4304 0010 9342     		cmp	r3, r2
 4305 0012 09D0     		beq	.L203
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 4306              		.loc 1 2689 5
 4307 0014 7B68     		ldr	r3, [r7, #4]
 4308 0016 1B68     		ldr	r3, [r3]
 4309 0018 5B69     		ldr	r3, [r3, #20]
 4310 001a 03F07F41 		and	r1, r3, #-16777216
 4311 001e 7B68     		ldr	r3, [r7, #4]
 4312 0020 1B68     		ldr	r3, [r3]
 4313 0022 3A68     		ldr	r2, [r7]
 4314 0024 0A43     		orrs	r2, r2, r1
 4315 0026 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/cc8fmbDk.s 			page 123


 4316              	.L203:
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4317              		.loc 1 2691 1
 4318 0028 00BF     		nop
 4319 002a 0C37     		adds	r7, r7, #12
 4320              	.LCFI172:
 4321              		.cfi_def_cfa_offset 4
 4322 002c BD46     		mov	sp, r7
 4323              	.LCFI173:
 4324              		.cfi_def_cfa_register 13
 4325              		@ sp needed
 4326 002e 5DF8047B 		ldr	r7, [sp], #4
 4327              	.LCFI174:
 4328              		.cfi_restore 7
 4329              		.cfi_def_cfa_offset 0
 4330 0032 7047     		bx	lr
 4331              	.L205:
 4332              		.align	2
 4333              	.L204:
 4334 0034 00800040 		.word	1073774592
 4335              		.cfi_endproc
 4336              	.LFE163:
 4338              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 4339              		.align	1
 4340              		.global	HAL_UART_EnableReceiverTimeout
 4341              		.syntax unified
 4342              		.thumb
 4343              		.thumb_func
 4344              		.fpu fpv4-sp-d16
 4346              	HAL_UART_EnableReceiverTimeout:
 4347              	.LFB164:
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4348              		.loc 1 2700 1
 4349              		.cfi_startproc
 4350              		@ args = 0, pretend = 0, frame = 8
 4351              		@ frame_needed = 1, uses_anonymous_args = 0
 4352              		@ link register save eliminated.
 4353 0000 80B4     		push	{r7}
 4354              	.LCFI175:
 4355              		.cfi_def_cfa_offset 4
 4356              		.cfi_offset 7, -4
 4357 0002 83B0     		sub	sp, sp, #12
 4358              	.LCFI176:
 4359              		.cfi_def_cfa_offset 16
 4360 0004 00AF     		add	r7, sp, #0
 4361              	.LCFI177:
 4362              		.cfi_def_cfa_register 7
 4363 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 124


2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 4364              		.loc 1 2701 9
 4365 0008 7B68     		ldr	r3, [r7, #4]
 4366 000a 1B68     		ldr	r3, [r3]
 4367              		.loc 1 2701 6
 4368 000c 174A     		ldr	r2, .L211
 4369 000e 9342     		cmp	r3, r2
 4370 0010 24D0     		beq	.L207
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 4371              		.loc 1 2703 14
 4372 0012 7B68     		ldr	r3, [r7, #4]
 4373 0014 5B6F     		ldr	r3, [r3, #116]
 4374              		.loc 1 2703 8
 4375 0016 202B     		cmp	r3, #32
 4376 0018 1ED1     		bne	.L208
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Locked */
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
 4377              		.loc 1 2706 7
 4378 001a 7B68     		ldr	r3, [r7, #4]
 4379 001c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4380 0020 012B     		cmp	r3, #1
 4381 0022 01D1     		bne	.L209
 4382              		.loc 1 2706 7 is_stmt 0 discriminator 1
 4383 0024 0223     		movs	r3, #2
 4384 0026 1AE0     		b	.L210
 4385              	.L209:
 4386              		.loc 1 2706 7 discriminator 2
 4387 0028 7B68     		ldr	r3, [r7, #4]
 4388 002a 0122     		movs	r2, #1
 4389 002c 83F87020 		strb	r2, [r3, #112]
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 4390              		.loc 1 2708 21 is_stmt 1 discriminator 2
 4391 0030 7B68     		ldr	r3, [r7, #4]
 4392 0032 2422     		movs	r2, #36
 4393 0034 5A67     		str	r2, [r3, #116]
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 4394              		.loc 1 2711 7 discriminator 2
 4395 0036 7B68     		ldr	r3, [r7, #4]
 4396 0038 1B68     		ldr	r3, [r3]
 4397 003a 5A68     		ldr	r2, [r3, #4]
 4398 003c 7B68     		ldr	r3, [r7, #4]
 4399 003e 1B68     		ldr	r3, [r3]
 4400 0040 42F40002 		orr	r2, r2, #8388608
 4401 0044 5A60     		str	r2, [r3, #4]
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4402              		.loc 1 2713 21 discriminator 2
 4403 0046 7B68     		ldr	r3, [r7, #4]
 4404 0048 2022     		movs	r2, #32
 4405 004a 5A67     		str	r2, [r3, #116]
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
ARM GAS  /tmp/cc8fmbDk.s 			page 125


2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 4406              		.loc 1 2716 7 discriminator 2
 4407 004c 7B68     		ldr	r3, [r7, #4]
 4408 004e 0022     		movs	r2, #0
 4409 0050 83F87020 		strb	r2, [r3, #112]
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
 4410              		.loc 1 2718 14 discriminator 2
 4411 0054 0023     		movs	r3, #0
 4412 0056 02E0     		b	.L210
 4413              	.L208:
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
 4414              		.loc 1 2722 14
 4415 0058 0223     		movs	r3, #2
 4416 005a 00E0     		b	.L210
 4417              	.L207:
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 4418              		.loc 1 2727 12
 4419 005c 0123     		movs	r3, #1
 4420              	.L210:
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4421              		.loc 1 2729 1
 4422 005e 1846     		mov	r0, r3
 4423 0060 0C37     		adds	r7, r7, #12
 4424              	.LCFI178:
 4425              		.cfi_def_cfa_offset 4
 4426 0062 BD46     		mov	sp, r7
 4427              	.LCFI179:
 4428              		.cfi_def_cfa_register 13
 4429              		@ sp needed
 4430 0064 5DF8047B 		ldr	r7, [sp], #4
 4431              	.LCFI180:
 4432              		.cfi_restore 7
 4433              		.cfi_def_cfa_offset 0
 4434 0068 7047     		bx	lr
 4435              	.L212:
 4436 006a 00BF     		.align	2
 4437              	.L211:
 4438 006c 00800040 		.word	1073774592
 4439              		.cfi_endproc
 4440              	.LFE164:
 4442              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 4443              		.align	1
 4444              		.global	HAL_UART_DisableReceiverTimeout
 4445              		.syntax unified
 4446              		.thumb
 4447              		.thumb_func
 4448              		.fpu fpv4-sp-d16
 4450              	HAL_UART_DisableReceiverTimeout:
ARM GAS  /tmp/cc8fmbDk.s 			page 126


 4451              	.LFB165:
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4452              		.loc 1 2738 1
 4453              		.cfi_startproc
 4454              		@ args = 0, pretend = 0, frame = 8
 4455              		@ frame_needed = 1, uses_anonymous_args = 0
 4456              		@ link register save eliminated.
 4457 0000 80B4     		push	{r7}
 4458              	.LCFI181:
 4459              		.cfi_def_cfa_offset 4
 4460              		.cfi_offset 7, -4
 4461 0002 83B0     		sub	sp, sp, #12
 4462              	.LCFI182:
 4463              		.cfi_def_cfa_offset 16
 4464 0004 00AF     		add	r7, sp, #0
 4465              	.LCFI183:
 4466              		.cfi_def_cfa_register 7
 4467 0006 7860     		str	r0, [r7, #4]
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 4468              		.loc 1 2739 9
 4469 0008 7B68     		ldr	r3, [r7, #4]
 4470 000a 1B68     		ldr	r3, [r3]
 4471              		.loc 1 2739 6
 4472 000c 174A     		ldr	r2, .L218
 4473 000e 9342     		cmp	r3, r2
 4474 0010 24D0     		beq	.L214
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 4475              		.loc 1 2741 14
 4476 0012 7B68     		ldr	r3, [r7, #4]
 4477 0014 5B6F     		ldr	r3, [r3, #116]
 4478              		.loc 1 2741 8
 4479 0016 202B     		cmp	r3, #32
 4480 0018 1ED1     		bne	.L215
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Locked */
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
 4481              		.loc 1 2744 7
 4482 001a 7B68     		ldr	r3, [r7, #4]
 4483 001c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4484 0020 012B     		cmp	r3, #1
 4485 0022 01D1     		bne	.L216
 4486              		.loc 1 2744 7 is_stmt 0 discriminator 1
 4487 0024 0223     		movs	r3, #2
 4488 0026 1AE0     		b	.L217
 4489              	.L216:
 4490              		.loc 1 2744 7 discriminator 2
 4491 0028 7B68     		ldr	r3, [r7, #4]
 4492 002a 0122     		movs	r2, #1
ARM GAS  /tmp/cc8fmbDk.s 			page 127


 4493 002c 83F87020 		strb	r2, [r3, #112]
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 4494              		.loc 1 2746 21 is_stmt 1 discriminator 2
 4495 0030 7B68     		ldr	r3, [r7, #4]
 4496 0032 2422     		movs	r2, #36
 4497 0034 5A67     		str	r2, [r3, #116]
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 4498              		.loc 1 2749 7 discriminator 2
 4499 0036 7B68     		ldr	r3, [r7, #4]
 4500 0038 1B68     		ldr	r3, [r3]
 4501 003a 5A68     		ldr	r2, [r3, #4]
 4502 003c 7B68     		ldr	r3, [r7, #4]
 4503 003e 1B68     		ldr	r3, [r3]
 4504 0040 22F40002 		bic	r2, r2, #8388608
 4505 0044 5A60     		str	r2, [r3, #4]
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4506              		.loc 1 2751 21 discriminator 2
 4507 0046 7B68     		ldr	r3, [r7, #4]
 4508 0048 2022     		movs	r2, #32
 4509 004a 5A67     		str	r2, [r3, #116]
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 4510              		.loc 1 2754 7 discriminator 2
 4511 004c 7B68     		ldr	r3, [r7, #4]
 4512 004e 0022     		movs	r2, #0
 4513 0050 83F87020 		strb	r2, [r3, #112]
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
 4514              		.loc 1 2756 14 discriminator 2
 4515 0054 0023     		movs	r3, #0
 4516 0056 02E0     		b	.L217
 4517              	.L215:
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
 4518              		.loc 1 2760 14
 4519 0058 0223     		movs	r3, #2
 4520 005a 00E0     		b	.L217
 4521              	.L214:
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 4522              		.loc 1 2765 12
 4523 005c 0123     		movs	r3, #1
 4524              	.L217:
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4525              		.loc 1 2767 1
 4526 005e 1846     		mov	r0, r3
ARM GAS  /tmp/cc8fmbDk.s 			page 128


 4527 0060 0C37     		adds	r7, r7, #12
 4528              	.LCFI184:
 4529              		.cfi_def_cfa_offset 4
 4530 0062 BD46     		mov	sp, r7
 4531              	.LCFI185:
 4532              		.cfi_def_cfa_register 13
 4533              		@ sp needed
 4534 0064 5DF8047B 		ldr	r7, [sp], #4
 4535              	.LCFI186:
 4536              		.cfi_restore 7
 4537              		.cfi_def_cfa_offset 0
 4538 0068 7047     		bx	lr
 4539              	.L219:
 4540 006a 00BF     		.align	2
 4541              	.L218:
 4542 006c 00800040 		.word	1073774592
 4543              		.cfi_endproc
 4544              	.LFE165:
 4546              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4547              		.align	1
 4548              		.global	HAL_MultiProcessor_EnableMuteMode
 4549              		.syntax unified
 4550              		.thumb
 4551              		.thumb_func
 4552              		.fpu fpv4-sp-d16
 4554              	HAL_MultiProcessor_EnableMuteMode:
 4555              	.LFB166:
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4556              		.loc 1 2776 1
 4557              		.cfi_startproc
 4558              		@ args = 0, pretend = 0, frame = 8
 4559              		@ frame_needed = 1, uses_anonymous_args = 0
 4560 0000 80B5     		push	{r7, lr}
 4561              	.LCFI187:
 4562              		.cfi_def_cfa_offset 8
 4563              		.cfi_offset 7, -8
 4564              		.cfi_offset 14, -4
 4565 0002 82B0     		sub	sp, sp, #8
 4566              	.LCFI188:
 4567              		.cfi_def_cfa_offset 16
 4568 0004 00AF     		add	r7, sp, #0
 4569              	.LCFI189:
 4570              		.cfi_def_cfa_register 7
 4571 0006 7860     		str	r0, [r7, #4]
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4572              		.loc 1 2777 3
 4573 0008 7B68     		ldr	r3, [r7, #4]
 4574 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4575 000e 012B     		cmp	r3, #1
ARM GAS  /tmp/cc8fmbDk.s 			page 129


 4576 0010 01D1     		bne	.L221
 4577              		.loc 1 2777 3 is_stmt 0 discriminator 1
 4578 0012 0223     		movs	r3, #2
 4579 0014 15E0     		b	.L222
 4580              	.L221:
 4581              		.loc 1 2777 3 discriminator 2
 4582 0016 7B68     		ldr	r3, [r7, #4]
 4583 0018 0122     		movs	r2, #1
 4584 001a 83F87020 		strb	r2, [r3, #112]
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4585              		.loc 1 2779 17 is_stmt 1 discriminator 2
 4586 001e 7B68     		ldr	r3, [r7, #4]
 4587 0020 2422     		movs	r2, #36
 4588 0022 5A67     		str	r2, [r3, #116]
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 4589              		.loc 1 2782 3 discriminator 2
 4590 0024 7B68     		ldr	r3, [r7, #4]
 4591 0026 1B68     		ldr	r3, [r3]
 4592 0028 1A68     		ldr	r2, [r3]
 4593 002a 7B68     		ldr	r3, [r7, #4]
 4594 002c 1B68     		ldr	r3, [r3]
 4595 002e 42F40052 		orr	r2, r2, #8192
 4596 0032 1A60     		str	r2, [r3]
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4597              		.loc 1 2784 17 discriminator 2
 4598 0034 7B68     		ldr	r3, [r7, #4]
 4599 0036 2022     		movs	r2, #32
 4600 0038 5A67     		str	r2, [r3, #116]
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4601              		.loc 1 2786 11 discriminator 2
 4602 003a 7868     		ldr	r0, [r7, #4]
 4603 003c FFF7FEFF 		bl	UART_CheckIdleState
 4604 0040 0346     		mov	r3, r0
 4605              	.L222:
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4606              		.loc 1 2787 1
 4607 0042 1846     		mov	r0, r3
 4608 0044 0837     		adds	r7, r7, #8
 4609              	.LCFI190:
 4610              		.cfi_def_cfa_offset 8
 4611 0046 BD46     		mov	sp, r7
 4612              	.LCFI191:
 4613              		.cfi_def_cfa_register 13
 4614              		@ sp needed
 4615 0048 80BD     		pop	{r7, pc}
 4616              		.cfi_endproc
 4617              	.LFE166:
 4619              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4620              		.align	1
 4621              		.global	HAL_MultiProcessor_DisableMuteMode
 4622              		.syntax unified
 4623              		.thumb
ARM GAS  /tmp/cc8fmbDk.s 			page 130


 4624              		.thumb_func
 4625              		.fpu fpv4-sp-d16
 4627              	HAL_MultiProcessor_DisableMuteMode:
 4628              	.LFB167:
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4629              		.loc 1 2796 1
 4630              		.cfi_startproc
 4631              		@ args = 0, pretend = 0, frame = 8
 4632              		@ frame_needed = 1, uses_anonymous_args = 0
 4633 0000 80B5     		push	{r7, lr}
 4634              	.LCFI192:
 4635              		.cfi_def_cfa_offset 8
 4636              		.cfi_offset 7, -8
 4637              		.cfi_offset 14, -4
 4638 0002 82B0     		sub	sp, sp, #8
 4639              	.LCFI193:
 4640              		.cfi_def_cfa_offset 16
 4641 0004 00AF     		add	r7, sp, #0
 4642              	.LCFI194:
 4643              		.cfi_def_cfa_register 7
 4644 0006 7860     		str	r0, [r7, #4]
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4645              		.loc 1 2797 3
 4646 0008 7B68     		ldr	r3, [r7, #4]
 4647 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4648 000e 012B     		cmp	r3, #1
 4649 0010 01D1     		bne	.L224
 4650              		.loc 1 2797 3 is_stmt 0 discriminator 1
 4651 0012 0223     		movs	r3, #2
 4652 0014 15E0     		b	.L225
 4653              	.L224:
 4654              		.loc 1 2797 3 discriminator 2
 4655 0016 7B68     		ldr	r3, [r7, #4]
 4656 0018 0122     		movs	r2, #1
 4657 001a 83F87020 		strb	r2, [r3, #112]
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4658              		.loc 1 2799 17 is_stmt 1 discriminator 2
 4659 001e 7B68     		ldr	r3, [r7, #4]
 4660 0020 2422     		movs	r2, #36
 4661 0022 5A67     		str	r2, [r3, #116]
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 4662              		.loc 1 2802 3 discriminator 2
 4663 0024 7B68     		ldr	r3, [r7, #4]
 4664 0026 1B68     		ldr	r3, [r3]
 4665 0028 1A68     		ldr	r2, [r3]
 4666 002a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 131


 4667 002c 1B68     		ldr	r3, [r3]
 4668 002e 22F40052 		bic	r2, r2, #8192
 4669 0032 1A60     		str	r2, [r3]
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4670              		.loc 1 2804 17 discriminator 2
 4671 0034 7B68     		ldr	r3, [r7, #4]
 4672 0036 2022     		movs	r2, #32
 4673 0038 5A67     		str	r2, [r3, #116]
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4674              		.loc 1 2806 11 discriminator 2
 4675 003a 7868     		ldr	r0, [r7, #4]
 4676 003c FFF7FEFF 		bl	UART_CheckIdleState
 4677 0040 0346     		mov	r3, r0
 4678              	.L225:
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4679              		.loc 1 2807 1
 4680 0042 1846     		mov	r0, r3
 4681 0044 0837     		adds	r7, r7, #8
 4682              	.LCFI195:
 4683              		.cfi_def_cfa_offset 8
 4684 0046 BD46     		mov	sp, r7
 4685              	.LCFI196:
 4686              		.cfi_def_cfa_register 13
 4687              		@ sp needed
 4688 0048 80BD     		pop	{r7, pc}
 4689              		.cfi_endproc
 4690              	.LFE167:
 4692              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4693              		.align	1
 4694              		.global	HAL_MultiProcessor_EnterMuteMode
 4695              		.syntax unified
 4696              		.thumb
 4697              		.thumb_func
 4698              		.fpu fpv4-sp-d16
 4700              	HAL_MultiProcessor_EnterMuteMode:
 4701              	.LFB168:
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4702              		.loc 1 2816 1
 4703              		.cfi_startproc
 4704              		@ args = 0, pretend = 0, frame = 8
 4705              		@ frame_needed = 1, uses_anonymous_args = 0
 4706              		@ link register save eliminated.
 4707 0000 80B4     		push	{r7}
 4708              	.LCFI197:
 4709              		.cfi_def_cfa_offset 4
 4710              		.cfi_offset 7, -4
 4711 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc8fmbDk.s 			page 132


 4712              	.LCFI198:
 4713              		.cfi_def_cfa_offset 16
 4714 0004 00AF     		add	r7, sp, #0
 4715              	.LCFI199:
 4716              		.cfi_def_cfa_register 7
 4717 0006 7860     		str	r0, [r7, #4]
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4718              		.loc 1 2817 3
 4719 0008 7B68     		ldr	r3, [r7, #4]
 4720 000a 1B68     		ldr	r3, [r3]
 4721 000c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4722 000e 9AB2     		uxth	r2, r3
 4723 0010 7B68     		ldr	r3, [r7, #4]
 4724 0012 1B68     		ldr	r3, [r3]
 4725 0014 42F00402 		orr	r2, r2, #4
 4726 0018 92B2     		uxth	r2, r2
 4727 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4728              		.loc 1 2818 1
 4729 001c 00BF     		nop
 4730 001e 0C37     		adds	r7, r7, #12
 4731              	.LCFI200:
 4732              		.cfi_def_cfa_offset 4
 4733 0020 BD46     		mov	sp, r7
 4734              	.LCFI201:
 4735              		.cfi_def_cfa_register 13
 4736              		@ sp needed
 4737 0022 5DF8047B 		ldr	r7, [sp], #4
 4738              	.LCFI202:
 4739              		.cfi_restore 7
 4740              		.cfi_def_cfa_offset 0
 4741 0026 7047     		bx	lr
 4742              		.cfi_endproc
 4743              	.LFE168:
 4745              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4746              		.align	1
 4747              		.global	HAL_HalfDuplex_EnableTransmitter
 4748              		.syntax unified
 4749              		.thumb
 4750              		.thumb_func
 4751              		.fpu fpv4-sp-d16
 4753              	HAL_HalfDuplex_EnableTransmitter:
 4754              	.LFB169:
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4755              		.loc 1 2826 1
 4756              		.cfi_startproc
 4757              		@ args = 0, pretend = 0, frame = 8
 4758              		@ frame_needed = 1, uses_anonymous_args = 0
 4759              		@ link register save eliminated.
 4760 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc8fmbDk.s 			page 133


 4761              	.LCFI203:
 4762              		.cfi_def_cfa_offset 4
 4763              		.cfi_offset 7, -4
 4764 0002 83B0     		sub	sp, sp, #12
 4765              	.LCFI204:
 4766              		.cfi_def_cfa_offset 16
 4767 0004 00AF     		add	r7, sp, #0
 4768              	.LCFI205:
 4769              		.cfi_def_cfa_register 7
 4770 0006 7860     		str	r0, [r7, #4]
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4771              		.loc 1 2827 3
 4772 0008 7B68     		ldr	r3, [r7, #4]
 4773 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4774 000e 012B     		cmp	r3, #1
 4775 0010 01D1     		bne	.L228
 4776              		.loc 1 2827 3 is_stmt 0 discriminator 1
 4777 0012 0223     		movs	r3, #2
 4778 0014 1EE0     		b	.L229
 4779              	.L228:
 4780              		.loc 1 2827 3 discriminator 2
 4781 0016 7B68     		ldr	r3, [r7, #4]
 4782 0018 0122     		movs	r2, #1
 4783 001a 83F87020 		strb	r2, [r3, #112]
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4784              		.loc 1 2828 17 is_stmt 1 discriminator 2
 4785 001e 7B68     		ldr	r3, [r7, #4]
 4786 0020 2422     		movs	r2, #36
 4787 0022 5A67     		str	r2, [r3, #116]
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4788              		.loc 1 2831 3 discriminator 2
 4789 0024 7B68     		ldr	r3, [r7, #4]
 4790 0026 1B68     		ldr	r3, [r3]
 4791 0028 1A68     		ldr	r2, [r3]
 4792 002a 7B68     		ldr	r3, [r7, #4]
 4793 002c 1B68     		ldr	r3, [r3]
 4794 002e 22F00C02 		bic	r2, r2, #12
 4795 0032 1A60     		str	r2, [r3]
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 4796              		.loc 1 2834 3 discriminator 2
 4797 0034 7B68     		ldr	r3, [r7, #4]
 4798 0036 1B68     		ldr	r3, [r3]
 4799 0038 1A68     		ldr	r2, [r3]
 4800 003a 7B68     		ldr	r3, [r7, #4]
 4801 003c 1B68     		ldr	r3, [r3]
 4802 003e 42F00802 		orr	r2, r2, #8
 4803 0042 1A60     		str	r2, [r3]
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4804              		.loc 1 2836 17 discriminator 2
 4805 0044 7B68     		ldr	r3, [r7, #4]
 4806 0046 2022     		movs	r2, #32
 4807 0048 5A67     		str	r2, [r3, #116]
ARM GAS  /tmp/cc8fmbDk.s 			page 134


2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4808              		.loc 1 2838 3 discriminator 2
 4809 004a 7B68     		ldr	r3, [r7, #4]
 4810 004c 0022     		movs	r2, #0
 4811 004e 83F87020 		strb	r2, [r3, #112]
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4812              		.loc 1 2840 10 discriminator 2
 4813 0052 0023     		movs	r3, #0
 4814              	.L229:
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4815              		.loc 1 2841 1
 4816 0054 1846     		mov	r0, r3
 4817 0056 0C37     		adds	r7, r7, #12
 4818              	.LCFI206:
 4819              		.cfi_def_cfa_offset 4
 4820 0058 BD46     		mov	sp, r7
 4821              	.LCFI207:
 4822              		.cfi_def_cfa_register 13
 4823              		@ sp needed
 4824 005a 5DF8047B 		ldr	r7, [sp], #4
 4825              	.LCFI208:
 4826              		.cfi_restore 7
 4827              		.cfi_def_cfa_offset 0
 4828 005e 7047     		bx	lr
 4829              		.cfi_endproc
 4830              	.LFE169:
 4832              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4833              		.align	1
 4834              		.global	HAL_HalfDuplex_EnableReceiver
 4835              		.syntax unified
 4836              		.thumb
 4837              		.thumb_func
 4838              		.fpu fpv4-sp-d16
 4840              	HAL_HalfDuplex_EnableReceiver:
 4841              	.LFB170:
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4842              		.loc 1 2849 1
 4843              		.cfi_startproc
 4844              		@ args = 0, pretend = 0, frame = 8
 4845              		@ frame_needed = 1, uses_anonymous_args = 0
 4846              		@ link register save eliminated.
 4847 0000 80B4     		push	{r7}
 4848              	.LCFI209:
 4849              		.cfi_def_cfa_offset 4
 4850              		.cfi_offset 7, -4
 4851 0002 83B0     		sub	sp, sp, #12
 4852              	.LCFI210:
 4853              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc8fmbDk.s 			page 135


 4854 0004 00AF     		add	r7, sp, #0
 4855              	.LCFI211:
 4856              		.cfi_def_cfa_register 7
 4857 0006 7860     		str	r0, [r7, #4]
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4858              		.loc 1 2850 3
 4859 0008 7B68     		ldr	r3, [r7, #4]
 4860 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4861 000e 012B     		cmp	r3, #1
 4862 0010 01D1     		bne	.L231
 4863              		.loc 1 2850 3 is_stmt 0 discriminator 1
 4864 0012 0223     		movs	r3, #2
 4865 0014 1EE0     		b	.L232
 4866              	.L231:
 4867              		.loc 1 2850 3 discriminator 2
 4868 0016 7B68     		ldr	r3, [r7, #4]
 4869 0018 0122     		movs	r2, #1
 4870 001a 83F87020 		strb	r2, [r3, #112]
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4871              		.loc 1 2851 17 is_stmt 1 discriminator 2
 4872 001e 7B68     		ldr	r3, [r7, #4]
 4873 0020 2422     		movs	r2, #36
 4874 0022 5A67     		str	r2, [r3, #116]
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4875              		.loc 1 2854 3 discriminator 2
 4876 0024 7B68     		ldr	r3, [r7, #4]
 4877 0026 1B68     		ldr	r3, [r3]
 4878 0028 1A68     		ldr	r2, [r3]
 4879 002a 7B68     		ldr	r3, [r7, #4]
 4880 002c 1B68     		ldr	r3, [r3]
 4881 002e 22F00C02 		bic	r2, r2, #12
 4882 0032 1A60     		str	r2, [r3]
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 4883              		.loc 1 2857 3 discriminator 2
 4884 0034 7B68     		ldr	r3, [r7, #4]
 4885 0036 1B68     		ldr	r3, [r3]
 4886 0038 1A68     		ldr	r2, [r3]
 4887 003a 7B68     		ldr	r3, [r7, #4]
 4888 003c 1B68     		ldr	r3, [r3]
 4889 003e 42F00402 		orr	r2, r2, #4
 4890 0042 1A60     		str	r2, [r3]
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4891              		.loc 1 2859 17 discriminator 2
 4892 0044 7B68     		ldr	r3, [r7, #4]
 4893 0046 2022     		movs	r2, #32
 4894 0048 5A67     		str	r2, [r3, #116]
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4895              		.loc 1 2861 3 discriminator 2
 4896 004a 7B68     		ldr	r3, [r7, #4]
 4897 004c 0022     		movs	r2, #0
 4898 004e 83F87020 		strb	r2, [r3, #112]
ARM GAS  /tmp/cc8fmbDk.s 			page 136


2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4899              		.loc 1 2863 10 discriminator 2
 4900 0052 0023     		movs	r3, #0
 4901              	.L232:
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4902              		.loc 1 2864 1
 4903 0054 1846     		mov	r0, r3
 4904 0056 0C37     		adds	r7, r7, #12
 4905              	.LCFI212:
 4906              		.cfi_def_cfa_offset 4
 4907 0058 BD46     		mov	sp, r7
 4908              	.LCFI213:
 4909              		.cfi_def_cfa_register 13
 4910              		@ sp needed
 4911 005a 5DF8047B 		ldr	r7, [sp], #4
 4912              	.LCFI214:
 4913              		.cfi_restore 7
 4914              		.cfi_def_cfa_offset 0
 4915 005e 7047     		bx	lr
 4916              		.cfi_endproc
 4917              	.LFE170:
 4919              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4920              		.align	1
 4921              		.global	HAL_LIN_SendBreak
 4922              		.syntax unified
 4923              		.thumb
 4924              		.thumb_func
 4925              		.fpu fpv4-sp-d16
 4927              	HAL_LIN_SendBreak:
 4928              	.LFB171:
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4929              		.loc 1 2873 1
 4930              		.cfi_startproc
 4931              		@ args = 0, pretend = 0, frame = 8
 4932              		@ frame_needed = 1, uses_anonymous_args = 0
 4933              		@ link register save eliminated.
 4934 0000 80B4     		push	{r7}
 4935              	.LCFI215:
 4936              		.cfi_def_cfa_offset 4
 4937              		.cfi_offset 7, -4
 4938 0002 83B0     		sub	sp, sp, #12
 4939              	.LCFI216:
 4940              		.cfi_def_cfa_offset 16
 4941 0004 00AF     		add	r7, sp, #0
 4942              	.LCFI217:
 4943              		.cfi_def_cfa_register 7
 4944 0006 7860     		str	r0, [r7, #4]
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
ARM GAS  /tmp/cc8fmbDk.s 			page 137


2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4945              		.loc 1 2877 3
 4946 0008 7B68     		ldr	r3, [r7, #4]
 4947 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4948 000e 012B     		cmp	r3, #1
 4949 0010 01D1     		bne	.L234
 4950              		.loc 1 2877 3 is_stmt 0 discriminator 1
 4951 0012 0223     		movs	r3, #2
 4952 0014 18E0     		b	.L235
 4953              	.L234:
 4954              		.loc 1 2877 3 discriminator 2
 4955 0016 7B68     		ldr	r3, [r7, #4]
 4956 0018 0122     		movs	r2, #1
 4957 001a 83F87020 		strb	r2, [r3, #112]
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4958              		.loc 1 2879 17 is_stmt 1 discriminator 2
 4959 001e 7B68     		ldr	r3, [r7, #4]
 4960 0020 2422     		movs	r2, #36
 4961 0022 5A67     		str	r2, [r3, #116]
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 4962              		.loc 1 2882 3 discriminator 2
 4963 0024 7B68     		ldr	r3, [r7, #4]
 4964 0026 1B68     		ldr	r3, [r3]
 4965 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4966 002a 9AB2     		uxth	r2, r3
 4967 002c 7B68     		ldr	r3, [r7, #4]
 4968 002e 1B68     		ldr	r3, [r3]
 4969 0030 42F00202 		orr	r2, r2, #2
 4970 0034 92B2     		uxth	r2, r2
 4971 0036 1A83     		strh	r2, [r3, #24]	@ movhi
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4972              		.loc 1 2884 17 discriminator 2
 4973 0038 7B68     		ldr	r3, [r7, #4]
 4974 003a 2022     		movs	r2, #32
 4975 003c 5A67     		str	r2, [r3, #116]
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4976              		.loc 1 2886 3 discriminator 2
 4977 003e 7B68     		ldr	r3, [r7, #4]
 4978 0040 0022     		movs	r2, #0
 4979 0042 83F87020 		strb	r2, [r3, #112]
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4980              		.loc 1 2888 10 discriminator 2
 4981 0046 0023     		movs	r3, #0
 4982              	.L235:
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4983              		.loc 1 2889 1
 4984 0048 1846     		mov	r0, r3
 4985 004a 0C37     		adds	r7, r7, #12
 4986              	.LCFI218:
ARM GAS  /tmp/cc8fmbDk.s 			page 138


 4987              		.cfi_def_cfa_offset 4
 4988 004c BD46     		mov	sp, r7
 4989              	.LCFI219:
 4990              		.cfi_def_cfa_register 13
 4991              		@ sp needed
 4992 004e 5DF8047B 		ldr	r7, [sp], #4
 4993              	.LCFI220:
 4994              		.cfi_restore 7
 4995              		.cfi_def_cfa_offset 0
 4996 0052 7047     		bx	lr
 4997              		.cfi_endproc
 4998              	.LFE171:
 5000              		.section	.text.HAL_UART_GetState,"ax",%progbits
 5001              		.align	1
 5002              		.global	HAL_UART_GetState
 5003              		.syntax unified
 5004              		.thumb
 5005              		.thumb_func
 5006              		.fpu fpv4-sp-d16
 5008              	HAL_UART_GetState:
 5009              	.LFB172:
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5010              		.loc 1 2918 1
 5011              		.cfi_startproc
 5012              		@ args = 0, pretend = 0, frame = 16
 5013              		@ frame_needed = 1, uses_anonymous_args = 0
 5014              		@ link register save eliminated.
 5015 0000 80B4     		push	{r7}
 5016              	.LCFI221:
ARM GAS  /tmp/cc8fmbDk.s 			page 139


 5017              		.cfi_def_cfa_offset 4
 5018              		.cfi_offset 7, -4
 5019 0002 85B0     		sub	sp, sp, #20
 5020              	.LCFI222:
 5021              		.cfi_def_cfa_offset 24
 5022 0004 00AF     		add	r7, sp, #0
 5023              	.LCFI223:
 5024              		.cfi_def_cfa_register 7
 5025 0006 7860     		str	r0, [r7, #4]
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1;
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp2;
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
 5026              		.loc 1 2921 9
 5027 0008 7B68     		ldr	r3, [r7, #4]
 5028 000a 5B6F     		ldr	r3, [r3, #116]
 5029 000c FB60     		str	r3, [r7, #12]
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 5030              		.loc 1 2922 9
 5031 000e 7B68     		ldr	r3, [r7, #4]
 5032 0010 9B6F     		ldr	r3, [r3, #120]
 5033 0012 BB60     		str	r3, [r7, #8]
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 5034              		.loc 1 2924 10
 5035 0014 FA68     		ldr	r2, [r7, #12]
 5036 0016 BB68     		ldr	r3, [r7, #8]
 5037 0018 1343     		orrs	r3, r3, r2
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5038              		.loc 1 2925 1
 5039 001a 1846     		mov	r0, r3
 5040 001c 1437     		adds	r7, r7, #20
 5041              	.LCFI224:
 5042              		.cfi_def_cfa_offset 4
 5043 001e BD46     		mov	sp, r7
 5044              	.LCFI225:
 5045              		.cfi_def_cfa_register 13
 5046              		@ sp needed
 5047 0020 5DF8047B 		ldr	r7, [sp], #4
 5048              	.LCFI226:
 5049              		.cfi_restore 7
 5050              		.cfi_def_cfa_offset 0
 5051 0024 7047     		bx	lr
 5052              		.cfi_endproc
 5053              	.LFE172:
 5055              		.section	.text.HAL_UART_GetError,"ax",%progbits
 5056              		.align	1
 5057              		.global	HAL_UART_GetError
 5058              		.syntax unified
 5059              		.thumb
 5060              		.thumb_func
 5061              		.fpu fpv4-sp-d16
 5063              	HAL_UART_GetError:
 5064              	.LFB173:
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/cc8fmbDk.s 			page 140


2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval UART Error Code
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5065              		.loc 1 2934 1
 5066              		.cfi_startproc
 5067              		@ args = 0, pretend = 0, frame = 8
 5068              		@ frame_needed = 1, uses_anonymous_args = 0
 5069              		@ link register save eliminated.
 5070 0000 80B4     		push	{r7}
 5071              	.LCFI227:
 5072              		.cfi_def_cfa_offset 4
 5073              		.cfi_offset 7, -4
 5074 0002 83B0     		sub	sp, sp, #12
 5075              	.LCFI228:
 5076              		.cfi_def_cfa_offset 16
 5077 0004 00AF     		add	r7, sp, #0
 5078              	.LCFI229:
 5079              		.cfi_def_cfa_register 7
 5080 0006 7860     		str	r0, [r7, #4]
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 5081              		.loc 1 2935 15
 5082 0008 7B68     		ldr	r3, [r7, #4]
 5083 000a DB6F     		ldr	r3, [r3, #124]
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5084              		.loc 1 2936 1
 5085 000c 1846     		mov	r0, r3
 5086 000e 0C37     		adds	r7, r7, #12
 5087              	.LCFI230:
 5088              		.cfi_def_cfa_offset 4
 5089 0010 BD46     		mov	sp, r7
 5090              	.LCFI231:
 5091              		.cfi_def_cfa_register 13
 5092              		@ sp needed
 5093 0012 5DF8047B 		ldr	r7, [sp], #4
 5094              	.LCFI232:
 5095              		.cfi_restore 7
 5096              		.cfi_def_cfa_offset 0
 5097 0016 7047     		bx	lr
 5098              		.cfi_endproc
 5099              	.LFE173:
 5101              		.global	__aeabi_uldivmod
 5102              		.section	.text.UART_SetConfig,"ax",%progbits
 5103              		.align	1
 5104              		.global	UART_SetConfig
 5105              		.syntax unified
 5106              		.thumb
 5107              		.thumb_func
 5108              		.fpu fpv4-sp-d16
 5110              	UART_SetConfig:
 5111              	.LFB174:
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
ARM GAS  /tmp/cc8fmbDk.s 			page 141


2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval none
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5112              		.loc 1 2981 1
 5113              		.cfi_startproc
 5114              		@ args = 0, pretend = 0, frame = 40
 5115              		@ frame_needed = 1, uses_anonymous_args = 0
 5116 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 5117              	.LCFI233:
 5118              		.cfi_def_cfa_offset 32
 5119              		.cfi_offset 4, -32
 5120              		.cfi_offset 5, -28
 5121              		.cfi_offset 7, -24
 5122              		.cfi_offset 8, -20
 5123              		.cfi_offset 9, -16
 5124              		.cfi_offset 10, -12
 5125              		.cfi_offset 11, -8
 5126              		.cfi_offset 14, -4
 5127 0004 8AB0     		sub	sp, sp, #40
 5128              	.LCFI234:
ARM GAS  /tmp/cc8fmbDk.s 			page 142


 5129              		.cfi_def_cfa_offset 72
 5130 0006 00AF     		add	r7, sp, #0
 5131              	.LCFI235:
 5132              		.cfi_def_cfa_register 7
 5133 0008 F860     		str	r0, [r7, #12]
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp;
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv;
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 5134              		.loc 1 2986 21
 5135 000a 0023     		movs	r3, #0
 5136 000c 87F82230 		strb	r3, [r7, #34]
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t pclk;
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 5137              		.loc 1 3020 33
 5138 0010 FB68     		ldr	r3, [r7, #12]
 5139 0012 9A68     		ldr	r2, [r3, #8]
 5140              		.loc 1 3020 58
 5141 0014 FB68     		ldr	r3, [r7, #12]
 5142 0016 1B69     		ldr	r3, [r3, #16]
 5143              		.loc 1 3020 45
 5144 0018 1A43     		orrs	r2, r2, r3
 5145              		.loc 1 3020 79
 5146 001a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc8fmbDk.s 			page 143


 5147 001c 5B69     		ldr	r3, [r3, #20]
 5148              		.loc 1 3020 66
 5149 001e 1A43     		orrs	r2, r2, r3
 5150              		.loc 1 3020 98
 5151 0020 FB68     		ldr	r3, [r7, #12]
 5152 0022 DB69     		ldr	r3, [r3, #28]
 5153              		.loc 1 3020 10
 5154 0024 1343     		orrs	r3, r3, r2
 5155 0026 7B62     		str	r3, [r7, #36]
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 5156              		.loc 1 3024 3
 5157 0028 FB68     		ldr	r3, [r7, #12]
 5158 002a 1B68     		ldr	r3, [r3]
 5159 002c 1A68     		ldr	r2, [r3]
 5160 002e B44B     		ldr	r3, .L300
 5161 0030 1340     		ands	r3, r3, r2
 5162 0032 FA68     		ldr	r2, [r7, #12]
 5163 0034 1268     		ldr	r2, [r2]
 5164 0036 796A     		ldr	r1, [r7, #36]
 5165 0038 0B43     		orrs	r3, r3, r1
 5166 003a 1360     		str	r3, [r2]
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 5167              		.loc 1 3029 3
 5168 003c FB68     		ldr	r3, [r7, #12]
 5169 003e 1B68     		ldr	r3, [r3]
 5170 0040 5B68     		ldr	r3, [r3, #4]
 5171 0042 23F44051 		bic	r1, r3, #12288
 5172 0046 FB68     		ldr	r3, [r7, #12]
 5173 0048 DA68     		ldr	r2, [r3, #12]
 5174 004a FB68     		ldr	r3, [r7, #12]
 5175 004c 1B68     		ldr	r3, [r3]
 5176 004e 0A43     		orrs	r2, r2, r1
 5177 0050 5A60     		str	r2, [r3, #4]
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 5178              		.loc 1 3037 10
 5179 0052 FB68     		ldr	r3, [r7, #12]
 5180 0054 9B69     		ldr	r3, [r3, #24]
 5181 0056 7B62     		str	r3, [r7, #36]
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 5182              		.loc 1 3039 9
 5183 0058 FB68     		ldr	r3, [r7, #12]
 5184 005a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc8fmbDk.s 			page 144


 5185              		.loc 1 3039 6
 5186 005c A94A     		ldr	r2, .L300+4
 5187 005e 9342     		cmp	r3, r2
 5188 0060 04D0     		beq	.L241
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
 5189              		.loc 1 3041 26
 5190 0062 FB68     		ldr	r3, [r7, #12]
 5191 0064 1B6A     		ldr	r3, [r3, #32]
 5192              		.loc 1 3041 12
 5193 0066 7A6A     		ldr	r2, [r7, #36]
 5194 0068 1343     		orrs	r3, r3, r2
 5195 006a 7B62     		str	r3, [r7, #36]
 5196              	.L241:
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 5197              		.loc 1 3043 3
 5198 006c FB68     		ldr	r3, [r7, #12]
 5199 006e 1B68     		ldr	r3, [r3]
 5200 0070 9B68     		ldr	r3, [r3, #8]
 5201 0072 23F43061 		bic	r1, r3, #2816
 5202 0076 FB68     		ldr	r3, [r7, #12]
 5203 0078 1B68     		ldr	r3, [r3]
 5204 007a 7A6A     		ldr	r2, [r7, #36]
 5205 007c 0A43     		orrs	r2, r2, r1
 5206 007e 9A60     		str	r2, [r3, #8]
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 5207              		.loc 1 3053 3
 5208 0080 FB68     		ldr	r3, [r7, #12]
 5209 0082 1B68     		ldr	r3, [r3]
 5210 0084 A04A     		ldr	r2, .L300+8
 5211 0086 9342     		cmp	r3, r2
 5212 0088 26D1     		bne	.L242
 5213              		.loc 1 3053 3 is_stmt 0 discriminator 1
 5214 008a A04B     		ldr	r3, .L300+12
 5215 008c D3F88830 		ldr	r3, [r3, #136]
 5216 0090 03F00303 		and	r3, r3, #3
 5217 0094 032B     		cmp	r3, #3
 5218 0096 1BD8     		bhi	.L243
 5219 0098 01A2     		adr	r2, .L245
 5220 009a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5221 009e 00BF     		.p2align 2
 5222              	.L245:
 5223 00a0 B1000000 		.word	.L248+1
 5224 00a4 C1000000 		.word	.L247+1
 5225 00a8 B9000000 		.word	.L246+1
 5226 00ac C9000000 		.word	.L244+1
 5227              		.p2align 1
ARM GAS  /tmp/cc8fmbDk.s 			page 145


 5228              	.L248:
 5229              		.loc 1 3053 3 discriminator 4
 5230 00b0 0123     		movs	r3, #1
 5231 00b2 87F82330 		strb	r3, [r7, #35]
 5232 00b6 80E0     		b	.L250
 5233              	.L246:
 5234              		.loc 1 3053 3 discriminator 6
 5235 00b8 0223     		movs	r3, #2
 5236 00ba 87F82330 		strb	r3, [r7, #35]
 5237 00be 7CE0     		b	.L250
 5238              	.L247:
 5239              		.loc 1 3053 3 discriminator 5
 5240 00c0 0423     		movs	r3, #4
 5241 00c2 87F82330 		strb	r3, [r7, #35]
 5242 00c6 78E0     		b	.L250
 5243              	.L244:
 5244              		.loc 1 3053 3 discriminator 7
 5245 00c8 0823     		movs	r3, #8
 5246 00ca 87F82330 		strb	r3, [r7, #35]
 5247 00ce 74E0     		b	.L250
 5248              	.L243:
 5249              		.loc 1 3053 3 discriminator 3
 5250 00d0 1023     		movs	r3, #16
 5251 00d2 87F82330 		strb	r3, [r7, #35]
 5252 00d6 70E0     		b	.L250
 5253              	.L242:
 5254              		.loc 1 3053 3 discriminator 2
 5255 00d8 FB68     		ldr	r3, [r7, #12]
 5256 00da 1B68     		ldr	r3, [r3]
 5257 00dc 8C4A     		ldr	r2, .L300+16
 5258 00de 9342     		cmp	r3, r2
 5259 00e0 38D1     		bne	.L251
 5260              		.loc 1 3053 3 discriminator 13
 5261 00e2 8A4B     		ldr	r3, .L300+12
 5262 00e4 D3F88830 		ldr	r3, [r3, #136]
 5263 00e8 03F00C03 		and	r3, r3, #12
 5264 00ec 0C2B     		cmp	r3, #12
 5265 00ee 2DD8     		bhi	.L252
 5266 00f0 01A2     		adr	r2, .L254
 5267 00f2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5268 00f6 00BF     		.p2align 2
 5269              	.L254:
 5270 00f8 2D010000 		.word	.L257+1
 5271 00fc 4D010000 		.word	.L252+1
 5272 0100 4D010000 		.word	.L252+1
 5273 0104 4D010000 		.word	.L252+1
 5274 0108 3D010000 		.word	.L256+1
 5275 010c 4D010000 		.word	.L252+1
 5276 0110 4D010000 		.word	.L252+1
 5277 0114 4D010000 		.word	.L252+1
 5278 0118 35010000 		.word	.L255+1
 5279 011c 4D010000 		.word	.L252+1
 5280 0120 4D010000 		.word	.L252+1
 5281 0124 4D010000 		.word	.L252+1
 5282 0128 45010000 		.word	.L253+1
 5283              		.p2align 1
 5284              	.L257:
ARM GAS  /tmp/cc8fmbDk.s 			page 146


 5285              		.loc 1 3053 3 discriminator 16
 5286 012c 0023     		movs	r3, #0
 5287 012e 87F82330 		strb	r3, [r7, #35]
 5288 0132 42E0     		b	.L250
 5289              	.L255:
 5290              		.loc 1 3053 3 discriminator 18
 5291 0134 0223     		movs	r3, #2
 5292 0136 87F82330 		strb	r3, [r7, #35]
 5293 013a 3EE0     		b	.L250
 5294              	.L256:
 5295              		.loc 1 3053 3 discriminator 17
 5296 013c 0423     		movs	r3, #4
 5297 013e 87F82330 		strb	r3, [r7, #35]
 5298 0142 3AE0     		b	.L250
 5299              	.L253:
 5300              		.loc 1 3053 3 discriminator 19
 5301 0144 0823     		movs	r3, #8
 5302 0146 87F82330 		strb	r3, [r7, #35]
 5303 014a 36E0     		b	.L250
 5304              	.L252:
 5305              		.loc 1 3053 3 discriminator 15
 5306 014c 1023     		movs	r3, #16
 5307 014e 87F82330 		strb	r3, [r7, #35]
 5308 0152 32E0     		b	.L250
 5309              	.L251:
 5310              		.loc 1 3053 3 discriminator 14
 5311 0154 FB68     		ldr	r3, [r7, #12]
 5312 0156 1B68     		ldr	r3, [r3]
 5313 0158 6A4A     		ldr	r2, .L300+4
 5314 015a 9342     		cmp	r3, r2
 5315 015c 2AD1     		bne	.L259
 5316              		.loc 1 3053 3 discriminator 25
 5317 015e 6B4B     		ldr	r3, .L300+12
 5318 0160 D3F88830 		ldr	r3, [r3, #136]
 5319 0164 03F44063 		and	r3, r3, #3072
 5320 0168 B3F5406F 		cmp	r3, #3072
 5321 016c 1AD0     		beq	.L260
 5322              		.loc 1 3053 3
 5323 016e B3F5406F 		cmp	r3, #3072
 5324 0172 1BD8     		bhi	.L261
 5325 0174 B3F5006F 		cmp	r3, #2048
 5326 0178 0CD0     		beq	.L262
 5327 017a B3F5006F 		cmp	r3, #2048
 5328 017e 15D8     		bhi	.L261
 5329 0180 002B     		cmp	r3, #0
 5330 0182 03D0     		beq	.L263
 5331 0184 B3F5806F 		cmp	r3, #1024
 5332 0188 08D0     		beq	.L264
 5333 018a 0FE0     		b	.L261
 5334              	.L263:
 5335              		.loc 1 3053 3 discriminator 28
 5336 018c 0023     		movs	r3, #0
 5337 018e 87F82330 		strb	r3, [r7, #35]
 5338 0192 12E0     		b	.L250
 5339              	.L262:
 5340              		.loc 1 3053 3 discriminator 30
 5341 0194 0223     		movs	r3, #2
ARM GAS  /tmp/cc8fmbDk.s 			page 147


 5342 0196 87F82330 		strb	r3, [r7, #35]
 5343 019a 0EE0     		b	.L250
 5344              	.L264:
 5345              		.loc 1 3053 3 discriminator 29
 5346 019c 0423     		movs	r3, #4
 5347 019e 87F82330 		strb	r3, [r7, #35]
 5348 01a2 0AE0     		b	.L250
 5349              	.L260:
 5350              		.loc 1 3053 3 discriminator 31
 5351 01a4 0823     		movs	r3, #8
 5352 01a6 87F82330 		strb	r3, [r7, #35]
 5353 01aa 06E0     		b	.L250
 5354              	.L261:
 5355              		.loc 1 3053 3 discriminator 27
 5356 01ac 1023     		movs	r3, #16
 5357 01ae 87F82330 		strb	r3, [r7, #35]
 5358 01b2 02E0     		b	.L250
 5359              	.L259:
 5360              		.loc 1 3053 3 discriminator 26
 5361 01b4 1023     		movs	r3, #16
 5362 01b6 87F82330 		strb	r3, [r7, #35]
 5363              	.L250:
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 5364              		.loc 1 3056 7 is_stmt 1
 5365 01ba FB68     		ldr	r3, [r7, #12]
 5366 01bc 1B68     		ldr	r3, [r3]
 5367              		.loc 1 3056 6
 5368 01be 514A     		ldr	r2, .L300+4
 5369 01c0 9342     		cmp	r3, r2
 5370 01c2 7AD1     		bne	.L266
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 5371              		.loc 1 3059 5
 5372 01c4 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 5373 01c8 082B     		cmp	r3, #8
 5374 01ca 24D8     		bhi	.L267
 5375 01cc 01A2     		adr	r2, .L269
 5376 01ce 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5377 01d2 00BF     		.p2align 2
 5378              	.L269:
 5379 01d4 F9010000 		.word	.L272+1
 5380 01d8 17020000 		.word	.L267+1
 5381 01dc 01020000 		.word	.L271+1
 5382 01e0 17020000 		.word	.L267+1
 5383 01e4 07020000 		.word	.L270+1
 5384 01e8 17020000 		.word	.L267+1
 5385 01ec 17020000 		.word	.L267+1
 5386 01f0 17020000 		.word	.L267+1
 5387 01f4 0F020000 		.word	.L268+1
 5388              		.p2align 1
 5389              	.L272:
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
ARM GAS  /tmp/cc8fmbDk.s 			page 148


 5390              		.loc 1 3062 16
 5391 01f8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5392 01fc F861     		str	r0, [r7, #28]
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5393              		.loc 1 3063 9
 5394 01fe 10E0     		b	.L273
 5395              	.L271:
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 5396              		.loc 1 3065 14
 5397 0200 444B     		ldr	r3, .L300+20
 5398 0202 FB61     		str	r3, [r7, #28]
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5399              		.loc 1 3066 9
 5400 0204 0DE0     		b	.L273
 5401              	.L270:
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 5402              		.loc 1 3068 16
 5403 0206 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5404 020a F861     		str	r0, [r7, #28]
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5405              		.loc 1 3069 9
 5406 020c 09E0     		b	.L273
 5407              	.L268:
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 5408              		.loc 1 3071 14
 5409 020e 4FF40043 		mov	r3, #32768
 5410 0212 FB61     		str	r3, [r7, #28]
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5411              		.loc 1 3072 9
 5412 0214 05E0     		b	.L273
 5413              	.L267:
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = 0U;
 5414              		.loc 1 3074 14
 5415 0216 0023     		movs	r3, #0
 5416 0218 FB61     		str	r3, [r7, #28]
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5417              		.loc 1 3075 13
 5418 021a 0123     		movs	r3, #1
 5419 021c 87F82230 		strb	r3, [r7, #34]
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5420              		.loc 1 3076 9
 5421 0220 00BF     		nop
 5422              	.L273:
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If proper clock source reported */
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
 5423              		.loc 1 3080 8
 5424 0222 FB69     		ldr	r3, [r7, #28]
 5425 0224 002B     		cmp	r3, #0
 5426 0226 00F00981 		beq	.L278
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
ARM GAS  /tmp/cc8fmbDk.s 			page 149


3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Compute clock after Prescaler */
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, (uint64_t)huart->Init.BaudRate, huart->Init.Clo
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096 *
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* No Prescaler applicable */
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((pclk < (3U * huart->Init.BaudRate)) ||
 5427              		.loc 1 3109 36
 5428 022a FB68     		ldr	r3, [r7, #12]
 5429 022c 5A68     		ldr	r2, [r3, #4]
 5430              		.loc 1 3109 23
 5431 022e 1346     		mov	r3, r2
 5432 0230 5B00     		lsls	r3, r3, #1
 5433 0232 1344     		add	r3, r3, r2
 5434              		.loc 1 3109 10
 5435 0234 FA69     		ldr	r2, [r7, #28]
 5436 0236 9A42     		cmp	r2, r3
 5437 0238 05D3     		bcc	.L275
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
 5438              		.loc 1 3110 39 discriminator 1
 5439 023a FB68     		ldr	r3, [r7, #12]
 5440 023c 5B68     		ldr	r3, [r3, #4]
 5441              		.loc 1 3110 26 discriminator 1
 5442 023e 1B03     		lsls	r3, r3, #12
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
 5443              		.loc 1 3109 48 discriminator 1
 5444 0240 FA69     		ldr	r2, [r7, #28]
 5445 0242 9A42     		cmp	r2, r3
 5446 0244 03D9     		bls	.L276
 5447              	.L275:
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5448              		.loc 1 3112 13
 5449 0246 0123     		movs	r3, #1
 5450 0248 87F82230 		strb	r3, [r7, #34]
 5451 024c F6E0     		b	.L278
 5452              	.L276:
ARM GAS  /tmp/cc8fmbDk.s 			page 150


3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, (uint64_t)huart->Init.BaudRate));
 5453              		.loc 1 3116 31
 5454 024e FB69     		ldr	r3, [r7, #28]
 5455 0250 0022     		movs	r2, #0
 5456 0252 1C46     		mov	r4, r3
 5457 0254 1546     		mov	r5, r2
 5458 0256 4FF00002 		mov	r2, #0
 5459 025a 4FF00003 		mov	r3, #0
 5460 025e 2B02     		lsls	r3, r5, #8
 5461 0260 43EA1463 		orr	r3, r3, r4, lsr #24
 5462 0264 2202     		lsls	r2, r4, #8
 5463 0266 F968     		ldr	r1, [r7, #12]
 5464 0268 4968     		ldr	r1, [r1, #4]
 5465 026a 4908     		lsrs	r1, r1, #1
 5466 026c 0020     		movs	r0, #0
 5467 026e 8846     		mov	r8, r1
 5468 0270 8146     		mov	r9, r0
 5469 0272 12EB080A 		adds	r10, r2, r8
 5470 0276 43EB090B 		adc	fp, r3, r9
 5471 027a FB68     		ldr	r3, [r7, #12]
 5472 027c 5B68     		ldr	r3, [r3, #4]
 5473 027e 0022     		movs	r2, #0
 5474 0280 3B60     		str	r3, [r7]
 5475 0282 7A60     		str	r2, [r7, #4]
 5476 0284 D7E90023 		ldrd	r2, [r7]
 5477 0288 5046     		mov	r0, r10
 5478 028a 5946     		mov	r1, fp
 5479 028c FFF7FEFF 		bl	__aeabi_uldivmod
 5480 0290 0246     		mov	r2, r0
 5481 0292 0B46     		mov	r3, r1
 5482              		.loc 1 3116 18
 5483 0294 1346     		mov	r3, r2
 5484 0296 BB61     		str	r3, [r7, #24]
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 5485              		.loc 1 3117 12
 5486 0298 BB69     		ldr	r3, [r7, #24]
 5487 029a B3F5407F 		cmp	r3, #768
 5488 029e 08D3     		bcc	.L277
 5489              		.loc 1 3117 42 discriminator 1
 5490 02a0 BB69     		ldr	r3, [r7, #24]
 5491 02a2 B3F5801F 		cmp	r3, #1048576
 5492 02a6 04D2     		bcs	.L277
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
 5493              		.loc 1 3119 16
 5494 02a8 FB68     		ldr	r3, [r7, #12]
 5495 02aa 1B68     		ldr	r3, [r3]
 5496              		.loc 1 3119 32
 5497 02ac BA69     		ldr	r2, [r7, #24]
 5498 02ae DA60     		str	r2, [r3, #12]
 5499 02b0 C4E0     		b	.L278
 5500              	.L277:
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
ARM GAS  /tmp/cc8fmbDk.s 			page 151


3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
 5501              		.loc 1 3123 15
 5502 02b2 0123     		movs	r3, #1
 5503 02b4 87F82230 		strb	r3, [r7, #34]
 5504 02b8 C0E0     		b	.L278
 5505              	.L266:
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } /* if ( (pclk < (3 * huart->Init.BaudRate) ) || (pclk > (4096 * huart->Init.BaudRate) )) */
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (pclk != 0) */
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 5506              		.loc 1 3130 23
 5507 02ba FB68     		ldr	r3, [r7, #12]
 5508 02bc DB69     		ldr	r3, [r3, #28]
 5509              		.loc 1 3130 11
 5510 02be B3F5004F 		cmp	r3, #32768
 5511 02c2 6BD1     		bne	.L279
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 5512              		.loc 1 3132 5
 5513 02c4 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 5514 02c8 082B     		cmp	r3, #8
 5515 02ca 34D8     		bhi	.L280
 5516 02cc 01A2     		adr	r2, .L282
 5517 02ce 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5518 02d2 00BF     		.p2align 2
 5519              	.L282:
 5520 02d4 F9020000 		.word	.L286+1
 5521 02d8 19030000 		.word	.L285+1
 5522 02dc 21030000 		.word	.L284+1
 5523 02e0 37030000 		.word	.L280+1
 5524 02e4 27030000 		.word	.L283+1
 5525 02e8 37030000 		.word	.L280+1
 5526 02ec 37030000 		.word	.L280+1
 5527 02f0 37030000 		.word	.L280+1
 5528 02f4 2F030000 		.word	.L281+1
 5529              		.p2align 1
 5530              	.L286:
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 5531              		.loc 1 3135 16
 5532 02f8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5533 02fc F861     		str	r0, [r7, #28]
3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5534              		.loc 1 3136 9
 5535 02fe 20E0     		b	.L287
 5536              	.L301:
 5537              		.align	2
 5538              	.L300:
 5539 0300 F369FFEF 		.word	-268473869
 5540 0304 00800040 		.word	1073774592
 5541 0308 00380140 		.word	1073821696
 5542 030c 00100240 		.word	1073876992
ARM GAS  /tmp/cc8fmbDk.s 			page 152


 5543 0310 00440040 		.word	1073759232
 5544 0314 0024F400 		.word	16000000
 5545              	.L285:
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 5546              		.loc 1 3138 16
 5547 0318 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5548 031c F861     		str	r0, [r7, #28]
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5549              		.loc 1 3139 9
 5550 031e 10E0     		b	.L287
 5551              	.L284:
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 5552              		.loc 1 3141 14
 5553 0320 4D4B     		ldr	r3, .L302
 5554 0322 FB61     		str	r3, [r7, #28]
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5555              		.loc 1 3142 9
 5556 0324 0DE0     		b	.L287
 5557              	.L283:
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 5558              		.loc 1 3144 16
 5559 0326 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5560 032a F861     		str	r0, [r7, #28]
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5561              		.loc 1 3145 9
 5562 032c 09E0     		b	.L287
 5563              	.L281:
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 5564              		.loc 1 3147 14
 5565 032e 4FF40043 		mov	r3, #32768
 5566 0332 FB61     		str	r3, [r7, #28]
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5567              		.loc 1 3148 9
 5568 0334 05E0     		b	.L287
 5569              	.L280:
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = 0U;
 5570              		.loc 1 3150 14
 5571 0336 0023     		movs	r3, #0
 5572 0338 FB61     		str	r3, [r7, #28]
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5573              		.loc 1 3151 13
 5574 033a 0123     		movs	r3, #1
 5575 033c 87F82230 		strb	r3, [r7, #34]
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5576              		.loc 1 3152 9
 5577 0340 00BF     		nop
 5578              	.L287:
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
 5579              		.loc 1 3156 8
ARM GAS  /tmp/cc8fmbDk.s 			page 153


 5580 0342 FB69     		ldr	r3, [r7, #28]
 5581 0344 002B     		cmp	r3, #0
 5582 0346 79D0     		beq	.L278
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 5583              		.loc 1 3161 29
 5584 0348 FB69     		ldr	r3, [r7, #28]
 5585 034a 5A00     		lsls	r2, r3, #1
 5586 034c FB68     		ldr	r3, [r7, #12]
 5587 034e 5B68     		ldr	r3, [r3, #4]
 5588 0350 5B08     		lsrs	r3, r3, #1
 5589 0352 1A44     		add	r2, r2, r3
 5590 0354 FB68     		ldr	r3, [r7, #12]
 5591 0356 5B68     		ldr	r3, [r3, #4]
 5592 0358 B2FBF3F3 		udiv	r3, r2, r3
 5593              		.loc 1 3161 18
 5594 035c 9BB2     		uxth	r3, r3
 5595              		.loc 1 3161 16
 5596 035e BB61     		str	r3, [r7, #24]
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5597              		.loc 1 3163 10
 5598 0360 BB69     		ldr	r3, [r7, #24]
 5599 0362 0F2B     		cmp	r3, #15
 5600 0364 16D9     		bls	.L289
 5601              		.loc 1 3163 38 discriminator 1
 5602 0366 BB69     		ldr	r3, [r7, #24]
 5603 0368 B3F5803F 		cmp	r3, #65536
 5604 036c 12D2     		bcs	.L289
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 5605              		.loc 1 3165 19
 5606 036e BB69     		ldr	r3, [r7, #24]
 5607 0370 9BB2     		uxth	r3, r3
 5608              		.loc 1 3165 17
 5609 0372 23F00F03 		bic	r3, r3, #15
 5610 0376 FB82     		strh	r3, [r7, #22]	@ movhi
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 5611              		.loc 1 3166 62
 5612 0378 BB69     		ldr	r3, [r7, #24]
 5613 037a 5B08     		lsrs	r3, r3, #1
 5614              		.loc 1 3166 20
 5615 037c 9BB2     		uxth	r3, r3
 5616 037e 03F00703 		and	r3, r3, #7
 5617 0382 9AB2     		uxth	r2, r3
 5618              		.loc 1 3166 17
 5619 0384 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5620 0386 1343     		orrs	r3, r3, r2
 5621 0388 FB82     		strh	r3, [r7, #22]	@ movhi
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 5622              		.loc 1 3167 14
 5623 038a FB68     		ldr	r3, [r7, #12]
 5624 038c 1B68     		ldr	r3, [r3]
 5625              		.loc 1 3167 30
ARM GAS  /tmp/cc8fmbDk.s 			page 154


 5626 038e FA8A     		ldrh	r2, [r7, #22]
 5627 0390 DA60     		str	r2, [r3, #12]
 5628 0392 53E0     		b	.L278
 5629              	.L289:
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5630              		.loc 1 3171 13
 5631 0394 0123     		movs	r3, #1
 5632 0396 87F82230 		strb	r3, [r7, #34]
 5633 039a 4FE0     		b	.L278
 5634              	.L279:
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 5635              		.loc 1 3177 5
 5636 039c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 5637 03a0 082B     		cmp	r3, #8
 5638 03a2 28D8     		bhi	.L290
 5639 03a4 01A2     		adr	r2, .L292
 5640 03a6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5641 03aa 00BF     		.p2align 2
 5642              	.L292:
 5643 03ac D1030000 		.word	.L296+1
 5644 03b0 D9030000 		.word	.L295+1
 5645 03b4 E1030000 		.word	.L294+1
 5646 03b8 F7030000 		.word	.L290+1
 5647 03bc E7030000 		.word	.L293+1
 5648 03c0 F7030000 		.word	.L290+1
 5649 03c4 F7030000 		.word	.L290+1
 5650 03c8 F7030000 		.word	.L290+1
 5651 03cc EF030000 		.word	.L291+1
 5652              		.p2align 1
 5653              	.L296:
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 5654              		.loc 1 3180 16
 5655 03d0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5656 03d4 F861     		str	r0, [r7, #28]
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5657              		.loc 1 3181 9
 5658 03d6 14E0     		b	.L297
 5659              	.L295:
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 5660              		.loc 1 3183 16
 5661 03d8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5662 03dc F861     		str	r0, [r7, #28]
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5663              		.loc 1 3184 9
 5664 03de 10E0     		b	.L297
 5665              	.L294:
ARM GAS  /tmp/cc8fmbDk.s 			page 155


3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 5666              		.loc 1 3186 14
 5667 03e0 1D4B     		ldr	r3, .L302
 5668 03e2 FB61     		str	r3, [r7, #28]
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5669              		.loc 1 3187 9
 5670 03e4 0DE0     		b	.L297
 5671              	.L293:
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 5672              		.loc 1 3189 16
 5673 03e6 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5674 03ea F861     		str	r0, [r7, #28]
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5675              		.loc 1 3190 9
 5676 03ec 09E0     		b	.L297
 5677              	.L291:
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 5678              		.loc 1 3192 14
 5679 03ee 4FF40043 		mov	r3, #32768
 5680 03f2 FB61     		str	r3, [r7, #28]
3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5681              		.loc 1 3193 9
 5682 03f4 05E0     		b	.L297
 5683              	.L290:
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = 0U;
 5684              		.loc 1 3195 14
 5685 03f6 0023     		movs	r3, #0
 5686 03f8 FB61     		str	r3, [r7, #28]
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5687              		.loc 1 3196 13
 5688 03fa 0123     		movs	r3, #1
 5689 03fc 87F82230 		strb	r3, [r7, #34]
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5690              		.loc 1 3197 9
 5691 0400 00BF     		nop
 5692              	.L297:
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
 5693              		.loc 1 3200 8
 5694 0402 FB69     		ldr	r3, [r7, #28]
 5695 0404 002B     		cmp	r3, #0
 5696 0406 19D0     		beq	.L278
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 5697              		.loc 1 3206 29
 5698 0408 FB68     		ldr	r3, [r7, #12]
 5699 040a 5B68     		ldr	r3, [r3, #4]
 5700 040c 5A08     		lsrs	r2, r3, #1
ARM GAS  /tmp/cc8fmbDk.s 			page 156


 5701 040e FB69     		ldr	r3, [r7, #28]
 5702 0410 1A44     		add	r2, r2, r3
 5703 0412 FB68     		ldr	r3, [r7, #12]
 5704 0414 5B68     		ldr	r3, [r3, #4]
 5705 0416 B2FBF3F3 		udiv	r3, r2, r3
 5706              		.loc 1 3206 18
 5707 041a 9BB2     		uxth	r3, r3
 5708              		.loc 1 3206 16
 5709 041c BB61     		str	r3, [r7, #24]
3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5710              		.loc 1 3208 10
 5711 041e BB69     		ldr	r3, [r7, #24]
 5712 0420 0F2B     		cmp	r3, #15
 5713 0422 08D9     		bls	.L298
 5714              		.loc 1 3208 38 discriminator 1
 5715 0424 BB69     		ldr	r3, [r7, #24]
 5716 0426 B3F5803F 		cmp	r3, #65536
 5717 042a 04D2     		bcs	.L298
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = usartdiv;
 5718              		.loc 1 3210 14
 5719 042c FB68     		ldr	r3, [r7, #12]
 5720 042e 1B68     		ldr	r3, [r3]
 5721              		.loc 1 3210 30
 5722 0430 BA69     		ldr	r2, [r7, #24]
 5723 0432 DA60     		str	r2, [r3, #12]
 5724 0434 02E0     		b	.L278
 5725              	.L298:
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5726              		.loc 1 3214 13
 5727 0436 0123     		movs	r3, #1
 5728 0438 87F82230 		strb	r3, [r7, #34]
 5729              	.L278:
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
 5730              		.loc 1 3226 16
 5731 043c FB68     		ldr	r3, [r7, #12]
 5732 043e 0022     		movs	r2, #0
 5733 0440 1A66     		str	r2, [r3, #96]
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 5734              		.loc 1 3227 16
 5735 0442 FB68     		ldr	r3, [r7, #12]
 5736 0444 0022     		movs	r2, #0
ARM GAS  /tmp/cc8fmbDk.s 			page 157


 5737 0446 5A66     		str	r2, [r3, #100]
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
 5738              		.loc 1 3229 10
 5739 0448 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5740              		.loc 1 3230 1
 5741 044c 1846     		mov	r0, r3
 5742 044e 2837     		adds	r7, r7, #40
 5743              	.LCFI236:
 5744              		.cfi_def_cfa_offset 32
 5745 0450 BD46     		mov	sp, r7
 5746              	.LCFI237:
 5747              		.cfi_def_cfa_register 13
 5748              		@ sp needed
 5749 0452 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 5750              	.L303:
 5751 0456 00BF     		.align	2
 5752              	.L302:
 5753 0458 0024F400 		.word	16000000
 5754              		.cfi_endproc
 5755              	.LFE174:
 5757              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 5758              		.align	1
 5759              		.global	UART_AdvFeatureConfig
 5760              		.syntax unified
 5761              		.thumb
 5762              		.thumb_func
 5763              		.fpu fpv4-sp-d16
 5765              	UART_AdvFeatureConfig:
 5766              	.LFB175:
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5767              		.loc 1 3238 1
 5768              		.cfi_startproc
 5769              		@ args = 0, pretend = 0, frame = 8
 5770              		@ frame_needed = 1, uses_anonymous_args = 0
 5771              		@ link register save eliminated.
 5772 0000 80B4     		push	{r7}
 5773              	.LCFI238:
 5774              		.cfi_def_cfa_offset 4
 5775              		.cfi_offset 7, -4
 5776 0002 83B0     		sub	sp, sp, #12
 5777              	.LCFI239:
 5778              		.cfi_def_cfa_offset 16
 5779 0004 00AF     		add	r7, sp, #0
 5780              	.LCFI240:
 5781              		.cfi_def_cfa_register 7
 5782 0006 7860     		str	r0, [r7, #4]
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
ARM GAS  /tmp/cc8fmbDk.s 			page 158


3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 5783              		.loc 1 3243 7
 5784 0008 7B68     		ldr	r3, [r7, #4]
 5785 000a 5B6A     		ldr	r3, [r3, #36]
 5786 000c 03F00103 		and	r3, r3, #1
 5787              		.loc 1 3243 6
 5788 0010 002B     		cmp	r3, #0
 5789 0012 0AD0     		beq	.L305
3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5790              		.loc 1 3246 5
 5791 0014 7B68     		ldr	r3, [r7, #4]
 5792 0016 1B68     		ldr	r3, [r3]
 5793 0018 5B68     		ldr	r3, [r3, #4]
 5794 001a 23F40031 		bic	r1, r3, #131072
 5795 001e 7B68     		ldr	r3, [r7, #4]
 5796 0020 9A6A     		ldr	r2, [r3, #40]
 5797 0022 7B68     		ldr	r3, [r7, #4]
 5798 0024 1B68     		ldr	r3, [r3]
 5799 0026 0A43     		orrs	r2, r2, r1
 5800 0028 5A60     		str	r2, [r3, #4]
 5801              	.L305:
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 5802              		.loc 1 3250 7
 5803 002a 7B68     		ldr	r3, [r7, #4]
 5804 002c 5B6A     		ldr	r3, [r3, #36]
 5805 002e 03F00203 		and	r3, r3, #2
 5806              		.loc 1 3250 6
 5807 0032 002B     		cmp	r3, #0
 5808 0034 0AD0     		beq	.L306
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5809              		.loc 1 3253 5
 5810 0036 7B68     		ldr	r3, [r7, #4]
 5811 0038 1B68     		ldr	r3, [r3]
 5812 003a 5B68     		ldr	r3, [r3, #4]
 5813 003c 23F48031 		bic	r1, r3, #65536
 5814 0040 7B68     		ldr	r3, [r7, #4]
 5815 0042 DA6A     		ldr	r2, [r3, #44]
 5816 0044 7B68     		ldr	r3, [r7, #4]
 5817 0046 1B68     		ldr	r3, [r3]
 5818 0048 0A43     		orrs	r2, r2, r1
 5819 004a 5A60     		str	r2, [r3, #4]
 5820              	.L306:
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 5821              		.loc 1 3257 7
 5822 004c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 159


 5823 004e 5B6A     		ldr	r3, [r3, #36]
 5824 0050 03F00403 		and	r3, r3, #4
 5825              		.loc 1 3257 6
 5826 0054 002B     		cmp	r3, #0
 5827 0056 0AD0     		beq	.L307
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5828              		.loc 1 3260 5
 5829 0058 7B68     		ldr	r3, [r7, #4]
 5830 005a 1B68     		ldr	r3, [r3]
 5831 005c 5B68     		ldr	r3, [r3, #4]
 5832 005e 23F48021 		bic	r1, r3, #262144
 5833 0062 7B68     		ldr	r3, [r7, #4]
 5834 0064 1A6B     		ldr	r2, [r3, #48]
 5835 0066 7B68     		ldr	r3, [r7, #4]
 5836 0068 1B68     		ldr	r3, [r3]
 5837 006a 0A43     		orrs	r2, r2, r1
 5838 006c 5A60     		str	r2, [r3, #4]
 5839              	.L307:
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 5840              		.loc 1 3264 7
 5841 006e 7B68     		ldr	r3, [r7, #4]
 5842 0070 5B6A     		ldr	r3, [r3, #36]
 5843 0072 03F00803 		and	r3, r3, #8
 5844              		.loc 1 3264 6
 5845 0076 002B     		cmp	r3, #0
 5846 0078 0AD0     		beq	.L308
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5847              		.loc 1 3267 5
 5848 007a 7B68     		ldr	r3, [r7, #4]
 5849 007c 1B68     		ldr	r3, [r3]
 5850 007e 5B68     		ldr	r3, [r3, #4]
 5851 0080 23F40041 		bic	r1, r3, #32768
 5852 0084 7B68     		ldr	r3, [r7, #4]
 5853 0086 5A6B     		ldr	r2, [r3, #52]
 5854 0088 7B68     		ldr	r3, [r7, #4]
 5855 008a 1B68     		ldr	r3, [r3]
 5856 008c 0A43     		orrs	r2, r2, r1
 5857 008e 5A60     		str	r2, [r3, #4]
 5858              	.L308:
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 5859              		.loc 1 3271 7
 5860 0090 7B68     		ldr	r3, [r7, #4]
 5861 0092 5B6A     		ldr	r3, [r3, #36]
 5862 0094 03F01003 		and	r3, r3, #16
 5863              		.loc 1 3271 6
 5864 0098 002B     		cmp	r3, #0
 5865 009a 0AD0     		beq	.L309
ARM GAS  /tmp/cc8fmbDk.s 			page 160


3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5866              		.loc 1 3274 5
 5867 009c 7B68     		ldr	r3, [r7, #4]
 5868 009e 1B68     		ldr	r3, [r3]
 5869 00a0 9B68     		ldr	r3, [r3, #8]
 5870 00a2 23F48051 		bic	r1, r3, #4096
 5871 00a6 7B68     		ldr	r3, [r7, #4]
 5872 00a8 9A6B     		ldr	r2, [r3, #56]
 5873 00aa 7B68     		ldr	r3, [r7, #4]
 5874 00ac 1B68     		ldr	r3, [r3]
 5875 00ae 0A43     		orrs	r2, r2, r1
 5876 00b0 9A60     		str	r2, [r3, #8]
 5877              	.L309:
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 5878              		.loc 1 3278 7
 5879 00b2 7B68     		ldr	r3, [r7, #4]
 5880 00b4 5B6A     		ldr	r3, [r3, #36]
 5881 00b6 03F02003 		and	r3, r3, #32
 5882              		.loc 1 3278 6
 5883 00ba 002B     		cmp	r3, #0
 5884 00bc 0AD0     		beq	.L310
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5885              		.loc 1 3281 5
 5886 00be 7B68     		ldr	r3, [r7, #4]
 5887 00c0 1B68     		ldr	r3, [r3]
 5888 00c2 9B68     		ldr	r3, [r3, #8]
 5889 00c4 23F40051 		bic	r1, r3, #8192
 5890 00c8 7B68     		ldr	r3, [r7, #4]
 5891 00ca DA6B     		ldr	r2, [r3, #60]
 5892 00cc 7B68     		ldr	r3, [r7, #4]
 5893 00ce 1B68     		ldr	r3, [r3]
 5894 00d0 0A43     		orrs	r2, r2, r1
 5895 00d2 9A60     		str	r2, [r3, #8]
 5896              	.L310:
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 5897              		.loc 1 3285 7
 5898 00d4 7B68     		ldr	r3, [r7, #4]
 5899 00d6 5B6A     		ldr	r3, [r3, #36]
 5900 00d8 03F04003 		and	r3, r3, #64
 5901              		.loc 1 3285 6
 5902 00dc 002B     		cmp	r3, #0
 5903 00de 1AD0     		beq	.L311
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5904              		.loc 1 3289 5
ARM GAS  /tmp/cc8fmbDk.s 			page 161


 5905 00e0 7B68     		ldr	r3, [r7, #4]
 5906 00e2 1B68     		ldr	r3, [r3]
 5907 00e4 5B68     		ldr	r3, [r3, #4]
 5908 00e6 23F48011 		bic	r1, r3, #1048576
 5909 00ea 7B68     		ldr	r3, [r7, #4]
 5910 00ec 1A6C     		ldr	r2, [r3, #64]
 5911 00ee 7B68     		ldr	r3, [r7, #4]
 5912 00f0 1B68     		ldr	r3, [r3]
 5913 00f2 0A43     		orrs	r2, r2, r1
 5914 00f4 5A60     		str	r2, [r3, #4]
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 5915              		.loc 1 3291 28
 5916 00f6 7B68     		ldr	r3, [r7, #4]
 5917 00f8 1B6C     		ldr	r3, [r3, #64]
 5918              		.loc 1 3291 8
 5919 00fa B3F5801F 		cmp	r3, #1048576
 5920 00fe 0AD1     		bne	.L311
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5921              		.loc 1 3294 7
 5922 0100 7B68     		ldr	r3, [r7, #4]
 5923 0102 1B68     		ldr	r3, [r3]
 5924 0104 5B68     		ldr	r3, [r3, #4]
 5925 0106 23F4C001 		bic	r1, r3, #6291456
 5926 010a 7B68     		ldr	r3, [r7, #4]
 5927 010c 5A6C     		ldr	r2, [r3, #68]
 5928 010e 7B68     		ldr	r3, [r7, #4]
 5929 0110 1B68     		ldr	r3, [r3]
 5930 0112 0A43     		orrs	r2, r2, r1
 5931 0114 5A60     		str	r2, [r3, #4]
 5932              	.L311:
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 5933              		.loc 1 3299 7
 5934 0116 7B68     		ldr	r3, [r7, #4]
 5935 0118 5B6A     		ldr	r3, [r3, #36]
 5936 011a 03F08003 		and	r3, r3, #128
 5937              		.loc 1 3299 6
 5938 011e 002B     		cmp	r3, #0
 5939 0120 0AD0     		beq	.L313
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5940              		.loc 1 3302 5
 5941 0122 7B68     		ldr	r3, [r7, #4]
 5942 0124 1B68     		ldr	r3, [r3]
 5943 0126 5B68     		ldr	r3, [r3, #4]
 5944 0128 23F40021 		bic	r1, r3, #524288
 5945 012c 7B68     		ldr	r3, [r7, #4]
 5946 012e 9A6C     		ldr	r2, [r3, #72]
 5947 0130 7B68     		ldr	r3, [r7, #4]
 5948 0132 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc8fmbDk.s 			page 162


 5949 0134 0A43     		orrs	r2, r2, r1
 5950 0136 5A60     		str	r2, [r3, #4]
 5951              	.L313:
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5952              		.loc 1 3304 1
 5953 0138 00BF     		nop
 5954 013a 0C37     		adds	r7, r7, #12
 5955              	.LCFI241:
 5956              		.cfi_def_cfa_offset 4
 5957 013c BD46     		mov	sp, r7
 5958              	.LCFI242:
 5959              		.cfi_def_cfa_register 13
 5960              		@ sp needed
 5961 013e 5DF8047B 		ldr	r7, [sp], #4
 5962              	.LCFI243:
 5963              		.cfi_restore 7
 5964              		.cfi_def_cfa_offset 0
 5965 0142 7047     		bx	lr
 5966              		.cfi_endproc
 5967              	.LFE175:
 5969              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5970              		.align	1
 5971              		.global	UART_CheckIdleState
 5972              		.syntax unified
 5973              		.thumb
 5974              		.thumb_func
 5975              		.fpu fpv4-sp-d16
 5977              	UART_CheckIdleState:
 5978              	.LFB176:
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5979              		.loc 1 3312 1
 5980              		.cfi_startproc
 5981              		@ args = 0, pretend = 0, frame = 16
 5982              		@ frame_needed = 1, uses_anonymous_args = 0
 5983 0000 80B5     		push	{r7, lr}
 5984              	.LCFI244:
 5985              		.cfi_def_cfa_offset 8
 5986              		.cfi_offset 7, -8
 5987              		.cfi_offset 14, -4
 5988 0002 86B0     		sub	sp, sp, #24
 5989              	.LCFI245:
 5990              		.cfi_def_cfa_offset 32
 5991 0004 02AF     		add	r7, sp, #8
 5992              	.LCFI246:
 5993              		.cfi_def_cfa 7, 24
 5994 0006 7860     		str	r0, [r7, #4]
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
ARM GAS  /tmp/cc8fmbDk.s 			page 163


3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5995              		.loc 1 3316 20
 5996 0008 7B68     		ldr	r3, [r7, #4]
 5997 000a 0022     		movs	r2, #0
 5998 000c DA67     		str	r2, [r3, #124]
3317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
 5999              		.loc 1 3319 15
 6000 000e FFF7FEFF 		bl	HAL_GetTick
 6001 0012 F860     		str	r0, [r7, #12]
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 6002              		.loc 1 3322 13
 6003 0014 7B68     		ldr	r3, [r7, #4]
 6004 0016 1B68     		ldr	r3, [r3]
 6005              		.loc 1 3322 23
 6006 0018 1B68     		ldr	r3, [r3]
 6007              		.loc 1 3322 29
 6008 001a 03F00803 		and	r3, r3, #8
 6009              		.loc 1 3322 6
 6010 001e 082B     		cmp	r3, #8
 6011 0020 0ED1     		bne	.L315
3323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 6012              		.loc 1 3325 9
 6013 0022 6FF07E43 		mvn	r3, #-33554432
 6014 0026 0093     		str	r3, [sp]
 6015 0028 FB68     		ldr	r3, [r7, #12]
 6016 002a 0022     		movs	r2, #0
 6017 002c 4FF40011 		mov	r1, #2097152
 6018 0030 7868     		ldr	r0, [r7, #4]
 6019 0032 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6020 0036 0346     		mov	r3, r0
 6021              		.loc 1 3325 8
 6022 0038 002B     		cmp	r3, #0
 6023 003a 01D0     		beq	.L315
3326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 6024              		.loc 1 3328 14
 6025 003c 0323     		movs	r3, #3
 6026 003e 20E0     		b	.L316
 6027              	.L315:
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 6028              		.loc 1 3333 13
 6029 0040 7B68     		ldr	r3, [r7, #4]
 6030 0042 1B68     		ldr	r3, [r3]
 6031              		.loc 1 3333 23
 6032 0044 1B68     		ldr	r3, [r3]
 6033              		.loc 1 3333 29
ARM GAS  /tmp/cc8fmbDk.s 			page 164


 6034 0046 03F00403 		and	r3, r3, #4
 6035              		.loc 1 3333 6
 6036 004a 042B     		cmp	r3, #4
 6037 004c 0ED1     		bne	.L317
3334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 6038              		.loc 1 3336 9
 6039 004e 6FF07E43 		mvn	r3, #-33554432
 6040 0052 0093     		str	r3, [sp]
 6041 0054 FB68     		ldr	r3, [r7, #12]
 6042 0056 0022     		movs	r2, #0
 6043 0058 4FF48001 		mov	r1, #4194304
 6044 005c 7868     		ldr	r0, [r7, #4]
 6045 005e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6046 0062 0346     		mov	r3, r0
 6047              		.loc 1 3336 8
 6048 0064 002B     		cmp	r3, #0
 6049 0066 01D0     		beq	.L317
3337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 6050              		.loc 1 3339 14
 6051 0068 0323     		movs	r3, #3
 6052 006a 0AE0     		b	.L316
 6053              	.L317:
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6054              		.loc 1 3344 17
 6055 006c 7B68     		ldr	r3, [r7, #4]
 6056 006e 2022     		movs	r2, #32
 6057 0070 5A67     		str	r2, [r3, #116]
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6058              		.loc 1 3345 18
 6059 0072 7B68     		ldr	r3, [r7, #4]
 6060 0074 2022     		movs	r2, #32
 6061 0076 9A67     		str	r2, [r3, #120]
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6062              		.loc 1 3347 3
 6063 0078 7B68     		ldr	r3, [r7, #4]
 6064 007a 0022     		movs	r2, #0
 6065 007c 83F87020 		strb	r2, [r3, #112]
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 6066              		.loc 1 3349 10
 6067 0080 0023     		movs	r3, #0
 6068              	.L316:
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6069              		.loc 1 3350 1
 6070 0082 1846     		mov	r0, r3
 6071 0084 1037     		adds	r7, r7, #16
 6072              	.LCFI247:
 6073              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc8fmbDk.s 			page 165


 6074 0086 BD46     		mov	sp, r7
 6075              	.LCFI248:
 6076              		.cfi_def_cfa_register 13
 6077              		@ sp needed
 6078 0088 80BD     		pop	{r7, pc}
 6079              		.cfi_endproc
 6080              	.LFE176:
 6082              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 6083              		.align	1
 6084              		.global	UART_WaitOnFlagUntilTimeout
 6085              		.syntax unified
 6086              		.thumb
 6087              		.thumb_func
 6088              		.fpu fpv4-sp-d16
 6090              	UART_WaitOnFlagUntilTimeout:
 6091              	.LFB177:
3351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6092              		.loc 1 3363 1
 6093              		.cfi_startproc
 6094              		@ args = 4, pretend = 0, frame = 16
 6095              		@ frame_needed = 1, uses_anonymous_args = 0
 6096 0000 80B5     		push	{r7, lr}
 6097              	.LCFI249:
 6098              		.cfi_def_cfa_offset 8
 6099              		.cfi_offset 7, -8
 6100              		.cfi_offset 14, -4
 6101 0002 84B0     		sub	sp, sp, #16
 6102              	.LCFI250:
 6103              		.cfi_def_cfa_offset 24
 6104 0004 00AF     		add	r7, sp, #0
 6105              	.LCFI251:
 6106              		.cfi_def_cfa_register 7
 6107 0006 F860     		str	r0, [r7, #12]
 6108 0008 B960     		str	r1, [r7, #8]
 6109 000a 3B60     		str	r3, [r7]
 6110 000c 1346     		mov	r3, r2
 6111 000e FB71     		strb	r3, [r7, #7]
3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 6112              		.loc 1 3365 9
 6113 0010 5DE0     		b	.L319
 6114              	.L323:
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
ARM GAS  /tmp/cc8fmbDk.s 			page 166


 6115              		.loc 1 3368 8
 6116 0012 BB69     		ldr	r3, [r7, #24]
 6117 0014 B3F1FF3F 		cmp	r3, #-1
 6118 0018 59D0     		beq	.L319
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 6119              		.loc 1 3370 13
 6120 001a FFF7FEFF 		bl	HAL_GetTick
 6121 001e 0246     		mov	r2, r0
 6122              		.loc 1 3370 27
 6123 0020 3B68     		ldr	r3, [r7]
 6124 0022 D31A     		subs	r3, r2, r3
 6125              		.loc 1 3370 10
 6126 0024 BA69     		ldr	r2, [r7, #24]
 6127 0026 9A42     		cmp	r2, r3
 6128 0028 02D3     		bcc	.L320
 6129              		.loc 1 3370 51 discriminator 1
 6130 002a BB69     		ldr	r3, [r7, #24]
 6131 002c 002B     		cmp	r3, #0
 6132 002e 1BD1     		bne	.L321
 6133              	.L320:
3371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 6134              		.loc 1 3376 9
 6135 0030 FB68     		ldr	r3, [r7, #12]
 6136 0032 1B68     		ldr	r3, [r3]
 6137 0034 1A68     		ldr	r2, [r3]
 6138 0036 FB68     		ldr	r3, [r7, #12]
 6139 0038 1B68     		ldr	r3, [r3]
 6140 003a 22F4D072 		bic	r2, r2, #416
 6141 003e 1A60     		str	r2, [r3]
3377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6142              		.loc 1 3378 9
 6143 0040 FB68     		ldr	r3, [r7, #12]
 6144 0042 1B68     		ldr	r3, [r3]
 6145 0044 9A68     		ldr	r2, [r3, #8]
 6146 0046 FB68     		ldr	r3, [r7, #12]
 6147 0048 1B68     		ldr	r3, [r3]
 6148 004a 22F00102 		bic	r2, r2, #1
 6149 004e 9A60     		str	r2, [r3, #8]
3379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 6150              		.loc 1 3380 23
 6151 0050 FB68     		ldr	r3, [r7, #12]
 6152 0052 2022     		movs	r2, #32
 6153 0054 5A67     		str	r2, [r3, #116]
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6154              		.loc 1 3381 24
 6155 0056 FB68     		ldr	r3, [r7, #12]
 6156 0058 2022     		movs	r2, #32
 6157 005a 9A67     		str	r2, [r3, #120]
3382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc8fmbDk.s 			page 167


3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 6158              		.loc 1 3383 9
 6159 005c FB68     		ldr	r3, [r7, #12]
 6160 005e 0022     		movs	r2, #0
 6161 0060 83F87020 		strb	r2, [r3, #112]
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 6162              		.loc 1 3385 16
 6163 0064 0323     		movs	r3, #3
 6164 0066 42E0     		b	.L322
 6165              	.L321:
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 6166              		.loc 1 3388 11
 6167 0068 FB68     		ldr	r3, [r7, #12]
 6168 006a 1B68     		ldr	r3, [r3]
 6169 006c 1B68     		ldr	r3, [r3]
 6170 006e 03F00403 		and	r3, r3, #4
 6171              		.loc 1 3388 10
 6172 0072 002B     		cmp	r3, #0
 6173 0074 2BD0     		beq	.L319
3389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 6174              		.loc 1 3390 13
 6175 0076 FB68     		ldr	r3, [r7, #12]
 6176 0078 1B68     		ldr	r3, [r3]
 6177 007a DB69     		ldr	r3, [r3, #28]
 6178 007c 03F40063 		and	r3, r3, #2048
 6179              		.loc 1 3390 12
 6180 0080 B3F5006F 		cmp	r3, #2048
 6181 0084 23D1     		bne	.L319
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 6182              		.loc 1 3393 11
 6183 0086 FB68     		ldr	r3, [r7, #12]
 6184 0088 1B68     		ldr	r3, [r3]
 6185 008a 4FF40062 		mov	r2, #2048
 6186 008e 1A62     		str	r2, [r3, #32]
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
3396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TX
3398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 6187              		.loc 1 3399 11
 6188 0090 FB68     		ldr	r3, [r7, #12]
 6189 0092 1B68     		ldr	r3, [r3]
 6190 0094 1A68     		ldr	r2, [r3]
 6191 0096 FB68     		ldr	r3, [r7, #12]
 6192 0098 1B68     		ldr	r3, [r3]
 6193 009a 22F4D072 		bic	r2, r2, #416
 6194 009e 1A60     		str	r2, [r3]
3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6195              		.loc 1 3401 11
ARM GAS  /tmp/cc8fmbDk.s 			page 168


 6196 00a0 FB68     		ldr	r3, [r7, #12]
 6197 00a2 1B68     		ldr	r3, [r3]
 6198 00a4 9A68     		ldr	r2, [r3, #8]
 6199 00a6 FB68     		ldr	r3, [r7, #12]
 6200 00a8 1B68     		ldr	r3, [r3]
 6201 00aa 22F00102 		bic	r2, r2, #1
 6202 00ae 9A60     		str	r2, [r3, #8]
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
 6203              		.loc 1 3403 25
 6204 00b0 FB68     		ldr	r3, [r7, #12]
 6205 00b2 2022     		movs	r2, #32
 6206 00b4 5A67     		str	r2, [r3, #116]
3404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 6207              		.loc 1 3404 26
 6208 00b6 FB68     		ldr	r3, [r7, #12]
 6209 00b8 2022     		movs	r2, #32
 6210 00ba 9A67     		str	r2, [r3, #120]
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 6211              		.loc 1 3405 28
 6212 00bc FB68     		ldr	r3, [r7, #12]
 6213 00be 2022     		movs	r2, #32
 6214 00c0 DA67     		str	r2, [r3, #124]
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Process Unlocked */
3408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 6215              		.loc 1 3408 11
 6216 00c2 FB68     		ldr	r3, [r7, #12]
 6217 00c4 0022     		movs	r2, #0
 6218 00c6 83F87020 		strb	r2, [r3, #112]
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 6219              		.loc 1 3410 18
 6220 00ca 0323     		movs	r3, #3
 6221 00cc 0FE0     		b	.L322
 6222              	.L319:
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6223              		.loc 1 3365 11
 6224 00ce FB68     		ldr	r3, [r7, #12]
 6225 00d0 1B68     		ldr	r3, [r3]
 6226 00d2 DA69     		ldr	r2, [r3, #28]
 6227 00d4 BB68     		ldr	r3, [r7, #8]
 6228 00d6 1340     		ands	r3, r3, r2
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6229              		.loc 1 3365 50
 6230 00d8 BA68     		ldr	r2, [r7, #8]
 6231 00da 9A42     		cmp	r2, r3
 6232 00dc 0CBF     		ite	eq
 6233 00de 0123     		moveq	r3, #1
 6234 00e0 0023     		movne	r3, #0
 6235 00e2 DBB2     		uxtb	r3, r3
 6236 00e4 1A46     		mov	r2, r3
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6237              		.loc 1 3365 59
 6238 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6239              		.loc 1 3365 9
ARM GAS  /tmp/cc8fmbDk.s 			page 169


 6240 00e8 9A42     		cmp	r2, r3
 6241 00ea 92D0     		beq	.L323
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 6242              		.loc 1 3415 10
 6243 00ec 0023     		movs	r3, #0
 6244              	.L322:
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6245              		.loc 1 3416 1
 6246 00ee 1846     		mov	r0, r3
 6247 00f0 1037     		adds	r7, r7, #16
 6248              	.LCFI252:
 6249              		.cfi_def_cfa_offset 8
 6250 00f2 BD46     		mov	sp, r7
 6251              	.LCFI253:
 6252              		.cfi_def_cfa_register 13
 6253              		@ sp needed
 6254 00f4 80BD     		pop	{r7, pc}
 6255              		.cfi_endproc
 6256              	.LFE177:
 6258              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 6259              		.align	1
 6260              		.syntax unified
 6261              		.thumb
 6262              		.thumb_func
 6263              		.fpu fpv4-sp-d16
 6265              	UART_EndTxTransfer:
 6266              	.LFB178:
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6267              		.loc 1 3425 1
 6268              		.cfi_startproc
 6269              		@ args = 0, pretend = 0, frame = 8
 6270              		@ frame_needed = 1, uses_anonymous_args = 0
 6271              		@ link register save eliminated.
 6272 0000 80B4     		push	{r7}
 6273              	.LCFI254:
 6274              		.cfi_def_cfa_offset 4
 6275              		.cfi_offset 7, -4
 6276 0002 83B0     		sub	sp, sp, #12
 6277              	.LCFI255:
 6278              		.cfi_def_cfa_offset 16
 6279 0004 00AF     		add	r7, sp, #0
 6280              	.LCFI256:
 6281              		.cfi_def_cfa_register 7
 6282 0006 7860     		str	r0, [r7, #4]
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
ARM GAS  /tmp/cc8fmbDk.s 			page 170


3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 6283              		.loc 1 3432 3
 6284 0008 7B68     		ldr	r3, [r7, #4]
 6285 000a 1B68     		ldr	r3, [r3]
 6286 000c 1A68     		ldr	r2, [r3]
 6287 000e 7B68     		ldr	r3, [r7, #4]
 6288 0010 1B68     		ldr	r3, [r3]
 6289 0012 22F0C002 		bic	r2, r2, #192
 6290 0016 1A60     		str	r2, [r3]
3433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6291              		.loc 1 3436 17
 6292 0018 7B68     		ldr	r3, [r7, #4]
 6293 001a 2022     		movs	r2, #32
 6294 001c 5A67     		str	r2, [r3, #116]
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6295              		.loc 1 3437 1
 6296 001e 00BF     		nop
 6297 0020 0C37     		adds	r7, r7, #12
 6298              	.LCFI257:
 6299              		.cfi_def_cfa_offset 4
 6300 0022 BD46     		mov	sp, r7
 6301              	.LCFI258:
 6302              		.cfi_def_cfa_register 13
 6303              		@ sp needed
 6304 0024 5DF8047B 		ldr	r7, [sp], #4
 6305              	.LCFI259:
 6306              		.cfi_restore 7
 6307              		.cfi_def_cfa_offset 0
 6308 0028 7047     		bx	lr
 6309              		.cfi_endproc
 6310              	.LFE178:
 6312              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 6313              		.align	1
 6314              		.syntax unified
 6315              		.thumb
 6316              		.thumb_func
 6317              		.fpu fpv4-sp-d16
 6319              	UART_EndRxTransfer:
 6320              	.LFB179:
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6321              		.loc 1 3446 1
ARM GAS  /tmp/cc8fmbDk.s 			page 171


 6322              		.cfi_startproc
 6323              		@ args = 0, pretend = 0, frame = 8
 6324              		@ frame_needed = 1, uses_anonymous_args = 0
 6325              		@ link register save eliminated.
 6326 0000 80B4     		push	{r7}
 6327              	.LCFI260:
 6328              		.cfi_def_cfa_offset 4
 6329              		.cfi_offset 7, -4
 6330 0002 83B0     		sub	sp, sp, #12
 6331              	.LCFI261:
 6332              		.cfi_def_cfa_offset 16
 6333 0004 00AF     		add	r7, sp, #0
 6334              	.LCFI262:
 6335              		.cfi_def_cfa_register 7
 6336 0006 7860     		str	r0, [r7, #4]
3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6337              		.loc 1 3452 3
 6338 0008 7B68     		ldr	r3, [r7, #4]
 6339 000a 1B68     		ldr	r3, [r3]
 6340 000c 1A68     		ldr	r2, [r3]
 6341 000e 7B68     		ldr	r3, [r7, #4]
 6342 0010 1B68     		ldr	r3, [r3]
 6343 0012 22F49072 		bic	r2, r2, #288
 6344 0016 1A60     		str	r2, [r3]
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6345              		.loc 1 3453 3
 6346 0018 7B68     		ldr	r3, [r7, #4]
 6347 001a 1B68     		ldr	r3, [r3]
 6348 001c 9A68     		ldr	r2, [r3, #8]
 6349 001e 7B68     		ldr	r3, [r7, #4]
 6350 0020 1B68     		ldr	r3, [r3]
 6351 0022 22F00102 		bic	r2, r2, #1
 6352 0026 9A60     		str	r2, [r3, #8]
3454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6353              		.loc 1 3457 18
 6354 0028 7B68     		ldr	r3, [r7, #4]
 6355 002a 2022     		movs	r2, #32
 6356 002c 9A67     		str	r2, [r3, #120]
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
 6357              		.loc 1 3460 16
 6358 002e 7B68     		ldr	r3, [r7, #4]
 6359 0030 0022     		movs	r2, #0
 6360 0032 1A66     		str	r2, [r3, #96]
3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6361              		.loc 1 3461 1
 6362 0034 00BF     		nop
 6363 0036 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/cc8fmbDk.s 			page 172


 6364              	.LCFI263:
 6365              		.cfi_def_cfa_offset 4
 6366 0038 BD46     		mov	sp, r7
 6367              	.LCFI264:
 6368              		.cfi_def_cfa_register 13
 6369              		@ sp needed
 6370 003a 5DF8047B 		ldr	r7, [sp], #4
 6371              	.LCFI265:
 6372              		.cfi_restore 7
 6373              		.cfi_def_cfa_offset 0
 6374 003e 7047     		bx	lr
 6375              		.cfi_endproc
 6376              	.LFE179:
 6378              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 6379              		.align	1
 6380              		.syntax unified
 6381              		.thumb
 6382              		.thumb_func
 6383              		.fpu fpv4-sp-d16
 6385              	UART_DMATransmitCplt:
 6386              	.LFB180:
3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6387              		.loc 1 3470 1
 6388              		.cfi_startproc
 6389              		@ args = 0, pretend = 0, frame = 16
 6390              		@ frame_needed = 1, uses_anonymous_args = 0
 6391 0000 80B5     		push	{r7, lr}
 6392              	.LCFI266:
 6393              		.cfi_def_cfa_offset 8
 6394              		.cfi_offset 7, -8
 6395              		.cfi_offset 14, -4
 6396 0002 84B0     		sub	sp, sp, #16
 6397              	.LCFI267:
 6398              		.cfi_def_cfa_offset 24
 6399 0004 00AF     		add	r7, sp, #0
 6400              	.LCFI268:
 6401              		.cfi_def_cfa_register 7
 6402 0006 7860     		str	r0, [r7, #4]
3471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6403              		.loc 1 3471 23
 6404 0008 7B68     		ldr	r3, [r7, #4]
 6405 000a 9B6A     		ldr	r3, [r3, #40]
 6406 000c FB60     		str	r3, [r7, #12]
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 6407              		.loc 1 3474 7
 6408 000e 7B68     		ldr	r3, [r7, #4]
 6409 0010 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc8fmbDk.s 			page 173


 6410 0012 1B68     		ldr	r3, [r3]
 6411 0014 03F02003 		and	r3, r3, #32
 6412              		.loc 1 3474 6
 6413 0018 002B     		cmp	r3, #0
 6414 001a 14D1     		bne	.L327
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6415              		.loc 1 3476 24
 6416 001c FB68     		ldr	r3, [r7, #12]
 6417 001e 0022     		movs	r2, #0
 6418 0020 A3F85220 		strh	r2, [r3, #82]	@ movhi
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 6419              		.loc 1 3480 5
 6420 0024 FB68     		ldr	r3, [r7, #12]
 6421 0026 1B68     		ldr	r3, [r3]
 6422 0028 9A68     		ldr	r2, [r3, #8]
 6423 002a FB68     		ldr	r3, [r7, #12]
 6424 002c 1B68     		ldr	r3, [r3]
 6425 002e 22F08002 		bic	r2, r2, #128
 6426 0032 9A60     		str	r2, [r3, #8]
3481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6427              		.loc 1 3483 5
 6428 0034 FB68     		ldr	r3, [r7, #12]
 6429 0036 1B68     		ldr	r3, [r3]
 6430 0038 1A68     		ldr	r2, [r3]
 6431 003a FB68     		ldr	r3, [r7, #12]
 6432 003c 1B68     		ldr	r3, [r3]
 6433 003e 42F04002 		orr	r2, r2, #64
 6434 0042 1A60     		str	r2, [r3]
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6435              		.loc 1 3496 1
 6436 0044 02E0     		b	.L329
 6437              	.L327:
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 6438              		.loc 1 3493 5
 6439 0046 F868     		ldr	r0, [r7, #12]
 6440 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 6441              	.L329:
 6442              		.loc 1 3496 1
 6443 004c 00BF     		nop
ARM GAS  /tmp/cc8fmbDk.s 			page 174


 6444 004e 1037     		adds	r7, r7, #16
 6445              	.LCFI269:
 6446              		.cfi_def_cfa_offset 8
 6447 0050 BD46     		mov	sp, r7
 6448              	.LCFI270:
 6449              		.cfi_def_cfa_register 13
 6450              		@ sp needed
 6451 0052 80BD     		pop	{r7, pc}
 6452              		.cfi_endproc
 6453              	.LFE180:
 6455              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 6456              		.align	1
 6457              		.syntax unified
 6458              		.thumb
 6459              		.thumb_func
 6460              		.fpu fpv4-sp-d16
 6462              	UART_DMATxHalfCplt:
 6463              	.LFB181:
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6464              		.loc 1 3504 1
 6465              		.cfi_startproc
 6466              		@ args = 0, pretend = 0, frame = 16
 6467              		@ frame_needed = 1, uses_anonymous_args = 0
 6468 0000 80B5     		push	{r7, lr}
 6469              	.LCFI271:
 6470              		.cfi_def_cfa_offset 8
 6471              		.cfi_offset 7, -8
 6472              		.cfi_offset 14, -4
 6473 0002 84B0     		sub	sp, sp, #16
 6474              	.LCFI272:
 6475              		.cfi_def_cfa_offset 24
 6476 0004 00AF     		add	r7, sp, #0
 6477              	.LCFI273:
 6478              		.cfi_def_cfa_register 7
 6479 0006 7860     		str	r0, [r7, #4]
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6480              		.loc 1 3505 23
 6481 0008 7B68     		ldr	r3, [r7, #4]
 6482 000a 9B6A     		ldr	r3, [r3, #40]
 6483 000c FB60     		str	r3, [r7, #12]
3506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 6484              		.loc 1 3512 3
 6485 000e F868     		ldr	r0, [r7, #12]
 6486 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
ARM GAS  /tmp/cc8fmbDk.s 			page 175


3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6487              		.loc 1 3514 1
 6488 0014 00BF     		nop
 6489 0016 1037     		adds	r7, r7, #16
 6490              	.LCFI274:
 6491              		.cfi_def_cfa_offset 8
 6492 0018 BD46     		mov	sp, r7
 6493              	.LCFI275:
 6494              		.cfi_def_cfa_register 13
 6495              		@ sp needed
 6496 001a 80BD     		pop	{r7, pc}
 6497              		.cfi_endproc
 6498              	.LFE181:
 6500              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 6501              		.align	1
 6502              		.syntax unified
 6503              		.thumb
 6504              		.thumb_func
 6505              		.fpu fpv4-sp-d16
 6507              	UART_DMAReceiveCplt:
 6508              	.LFB182:
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6509              		.loc 1 3522 1
 6510              		.cfi_startproc
 6511              		@ args = 0, pretend = 0, frame = 16
 6512              		@ frame_needed = 1, uses_anonymous_args = 0
 6513 0000 80B5     		push	{r7, lr}
 6514              	.LCFI276:
 6515              		.cfi_def_cfa_offset 8
 6516              		.cfi_offset 7, -8
 6517              		.cfi_offset 14, -4
 6518 0002 84B0     		sub	sp, sp, #16
 6519              	.LCFI277:
 6520              		.cfi_def_cfa_offset 24
 6521 0004 00AF     		add	r7, sp, #0
 6522              	.LCFI278:
 6523              		.cfi_def_cfa_register 7
 6524 0006 7860     		str	r0, [r7, #4]
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6525              		.loc 1 3523 23
 6526 0008 7B68     		ldr	r3, [r7, #4]
 6527 000a 9B6A     		ldr	r3, [r3, #40]
 6528 000c FB60     		str	r3, [r7, #12]
3524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 6529              		.loc 1 3526 7
 6530 000e 7B68     		ldr	r3, [r7, #4]
 6531 0010 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc8fmbDk.s 			page 176


 6532 0012 1B68     		ldr	r3, [r3]
 6533 0014 03F02003 		and	r3, r3, #32
 6534              		.loc 1 3526 6
 6535 0018 002B     		cmp	r3, #0
 6536 001a 1ED1     		bne	.L332
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6537              		.loc 1 3528 24
 6538 001c FB68     		ldr	r3, [r7, #12]
 6539 001e 0022     		movs	r2, #0
 6540 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6541              		.loc 1 3531 5
 6542 0024 FB68     		ldr	r3, [r7, #12]
 6543 0026 1B68     		ldr	r3, [r3]
 6544 0028 1A68     		ldr	r2, [r3]
 6545 002a FB68     		ldr	r3, [r7, #12]
 6546 002c 1B68     		ldr	r3, [r3]
 6547 002e 22F48072 		bic	r2, r2, #256
 6548 0032 1A60     		str	r2, [r3]
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6549              		.loc 1 3532 5
 6550 0034 FB68     		ldr	r3, [r7, #12]
 6551 0036 1B68     		ldr	r3, [r3]
 6552 0038 9A68     		ldr	r2, [r3, #8]
 6553 003a FB68     		ldr	r3, [r7, #12]
 6554 003c 1B68     		ldr	r3, [r3]
 6555 003e 22F00102 		bic	r2, r2, #1
 6556 0042 9A60     		str	r2, [r3, #8]
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 6557              		.loc 1 3536 5
 6558 0044 FB68     		ldr	r3, [r7, #12]
 6559 0046 1B68     		ldr	r3, [r3]
 6560 0048 9A68     		ldr	r2, [r3, #8]
 6561 004a FB68     		ldr	r3, [r7, #12]
 6562 004c 1B68     		ldr	r3, [r3]
 6563 004e 22F04002 		bic	r2, r2, #64
 6564 0052 9A60     		str	r2, [r3, #8]
3537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 6565              		.loc 1 3539 20
 6566 0054 FB68     		ldr	r3, [r7, #12]
 6567 0056 2022     		movs	r2, #32
 6568 0058 9A67     		str	r2, [r3, #120]
 6569              	.L332:
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/cc8fmbDk.s 			page 177


3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 6570              		.loc 1 3547 3
 6571 005a F868     		ldr	r0, [r7, #12]
 6572 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6573              		.loc 1 3549 1
 6574 0060 00BF     		nop
 6575 0062 1037     		adds	r7, r7, #16
 6576              	.LCFI279:
 6577              		.cfi_def_cfa_offset 8
 6578 0064 BD46     		mov	sp, r7
 6579              	.LCFI280:
 6580              		.cfi_def_cfa_register 13
 6581              		@ sp needed
 6582 0066 80BD     		pop	{r7, pc}
 6583              		.cfi_endproc
 6584              	.LFE182:
 6586              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 6587              		.align	1
 6588              		.syntax unified
 6589              		.thumb
 6590              		.thumb_func
 6591              		.fpu fpv4-sp-d16
 6593              	UART_DMARxHalfCplt:
 6594              	.LFB183:
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6595              		.loc 1 3557 1
 6596              		.cfi_startproc
 6597              		@ args = 0, pretend = 0, frame = 16
 6598              		@ frame_needed = 1, uses_anonymous_args = 0
 6599 0000 80B5     		push	{r7, lr}
 6600              	.LCFI281:
 6601              		.cfi_def_cfa_offset 8
 6602              		.cfi_offset 7, -8
 6603              		.cfi_offset 14, -4
 6604 0002 84B0     		sub	sp, sp, #16
 6605              	.LCFI282:
 6606              		.cfi_def_cfa_offset 24
 6607 0004 00AF     		add	r7, sp, #0
 6608              	.LCFI283:
 6609              		.cfi_def_cfa_register 7
 6610 0006 7860     		str	r0, [r7, #4]
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6611              		.loc 1 3558 23
 6612 0008 7B68     		ldr	r3, [r7, #4]
 6613 000a 9B6A     		ldr	r3, [r3, #40]
 6614 000c FB60     		str	r3, [r7, #12]
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc8fmbDk.s 			page 178


3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 6615              		.loc 1 3565 3
 6616 000e F868     		ldr	r0, [r7, #12]
 6617 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
3566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6618              		.loc 1 3567 1
 6619 0014 00BF     		nop
 6620 0016 1037     		adds	r7, r7, #16
 6621              	.LCFI284:
 6622              		.cfi_def_cfa_offset 8
 6623 0018 BD46     		mov	sp, r7
 6624              	.LCFI285:
 6625              		.cfi_def_cfa_register 13
 6626              		@ sp needed
 6627 001a 80BD     		pop	{r7, pc}
 6628              		.cfi_endproc
 6629              	.LFE183:
 6631              		.section	.text.UART_DMAError,"ax",%progbits
 6632              		.align	1
 6633              		.syntax unified
 6634              		.thumb
 6635              		.thumb_func
 6636              		.fpu fpv4-sp-d16
 6638              	UART_DMAError:
 6639              	.LFB184:
3568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6640              		.loc 1 3575 1
 6641              		.cfi_startproc
 6642              		@ args = 0, pretend = 0, frame = 24
 6643              		@ frame_needed = 1, uses_anonymous_args = 0
 6644 0000 80B5     		push	{r7, lr}
 6645              	.LCFI286:
 6646              		.cfi_def_cfa_offset 8
 6647              		.cfi_offset 7, -8
 6648              		.cfi_offset 14, -4
 6649 0002 86B0     		sub	sp, sp, #24
 6650              	.LCFI287:
 6651              		.cfi_def_cfa_offset 32
 6652 0004 00AF     		add	r7, sp, #0
 6653              	.LCFI288:
 6654              		.cfi_def_cfa_register 7
 6655 0006 7860     		str	r0, [r7, #4]
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6656              		.loc 1 3576 23
ARM GAS  /tmp/cc8fmbDk.s 			page 179


 6657 0008 7B68     		ldr	r3, [r7, #4]
 6658 000a 9B6A     		ldr	r3, [r3, #40]
 6659 000c 7B61     		str	r3, [r7, #20]
3577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 6660              		.loc 1 3578 31
 6661 000e 7B69     		ldr	r3, [r7, #20]
 6662 0010 5B6F     		ldr	r3, [r3, #116]
 6663 0012 3B61     		str	r3, [r7, #16]
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 6664              		.loc 1 3579 31
 6665 0014 7B69     		ldr	r3, [r7, #20]
 6666 0016 9B6F     		ldr	r3, [r3, #120]
 6667 0018 FB60     		str	r3, [r7, #12]
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 6668              		.loc 1 3582 8
 6669 001a 7B69     		ldr	r3, [r7, #20]
 6670 001c 1B68     		ldr	r3, [r3]
 6671 001e 9B68     		ldr	r3, [r3, #8]
 6672 0020 03F08003 		and	r3, r3, #128
 6673              		.loc 1 3582 6
 6674 0024 802B     		cmp	r3, #128
 6675 0026 09D1     		bne	.L335
 6676              		.loc 1 3582 62 discriminator 1
 6677 0028 3B69     		ldr	r3, [r7, #16]
 6678 002a 212B     		cmp	r3, #33
 6679 002c 06D1     		bne	.L335
3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6680              		.loc 1 3585 24
 6681 002e 7B69     		ldr	r3, [r7, #20]
 6682 0030 0022     		movs	r2, #0
 6683 0032 A3F85220 		strh	r2, [r3, #82]	@ movhi
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 6684              		.loc 1 3586 5
 6685 0036 7869     		ldr	r0, [r7, #20]
 6686 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 6687              	.L335:
3587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 6688              		.loc 1 3590 8
 6689 003c 7B69     		ldr	r3, [r7, #20]
 6690 003e 1B68     		ldr	r3, [r3]
 6691 0040 9B68     		ldr	r3, [r3, #8]
 6692 0042 03F04003 		and	r3, r3, #64
 6693              		.loc 1 3590 6
 6694 0046 402B     		cmp	r3, #64
 6695 0048 09D1     		bne	.L336
 6696              		.loc 1 3590 62 discriminator 1
 6697 004a FB68     		ldr	r3, [r7, #12]
 6698 004c 222B     		cmp	r3, #34
 6699 004e 06D1     		bne	.L336
ARM GAS  /tmp/cc8fmbDk.s 			page 180


3591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6700              		.loc 1 3593 24
 6701 0050 7B69     		ldr	r3, [r7, #20]
 6702 0052 0022     		movs	r2, #0
 6703 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 6704              		.loc 1 3594 5
 6705 0058 7869     		ldr	r0, [r7, #20]
 6706 005a FFF7FEFF 		bl	UART_EndRxTransfer
 6707              	.L336:
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 6708              		.loc 1 3597 20
 6709 005e 7B69     		ldr	r3, [r7, #20]
 6710 0060 DB6F     		ldr	r3, [r3, #124]
 6711 0062 43F01002 		orr	r2, r3, #16
 6712 0066 7B69     		ldr	r3, [r7, #20]
 6713 0068 DA67     		str	r2, [r3, #124]
3598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6714              		.loc 1 3604 3
 6715 006a 7869     		ldr	r0, [r7, #20]
 6716 006c FFF7FEFF 		bl	HAL_UART_ErrorCallback
3605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6717              		.loc 1 3606 1
 6718 0070 00BF     		nop
 6719 0072 1837     		adds	r7, r7, #24
 6720              	.LCFI289:
 6721              		.cfi_def_cfa_offset 8
 6722 0074 BD46     		mov	sp, r7
 6723              	.LCFI290:
 6724              		.cfi_def_cfa_register 13
 6725              		@ sp needed
 6726 0076 80BD     		pop	{r7, pc}
 6727              		.cfi_endproc
 6728              	.LFE184:
 6730              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 6731              		.align	1
 6732              		.syntax unified
 6733              		.thumb
 6734              		.thumb_func
 6735              		.fpu fpv4-sp-d16
 6737              	UART_DMAAbortOnError:
 6738              	.LFB185:
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
ARM GAS  /tmp/cc8fmbDk.s 			page 181


3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6739              		.loc 1 3615 1
 6740              		.cfi_startproc
 6741              		@ args = 0, pretend = 0, frame = 16
 6742              		@ frame_needed = 1, uses_anonymous_args = 0
 6743 0000 80B5     		push	{r7, lr}
 6744              	.LCFI291:
 6745              		.cfi_def_cfa_offset 8
 6746              		.cfi_offset 7, -8
 6747              		.cfi_offset 14, -4
 6748 0002 84B0     		sub	sp, sp, #16
 6749              	.LCFI292:
 6750              		.cfi_def_cfa_offset 24
 6751 0004 00AF     		add	r7, sp, #0
 6752              	.LCFI293:
 6753              		.cfi_def_cfa_register 7
 6754 0006 7860     		str	r0, [r7, #4]
3616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6755              		.loc 1 3616 23
 6756 0008 7B68     		ldr	r3, [r7, #4]
 6757 000a 9B6A     		ldr	r3, [r3, #40]
 6758 000c FB60     		str	r3, [r7, #12]
3617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6759              		.loc 1 3617 22
 6760 000e FB68     		ldr	r3, [r7, #12]
 6761 0010 0022     		movs	r2, #0
 6762 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6763              		.loc 1 3618 22
 6764 0016 FB68     		ldr	r3, [r7, #12]
 6765 0018 0022     		movs	r2, #0
 6766 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
3619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6767              		.loc 1 3625 3
 6768 001e F868     		ldr	r0, [r7, #12]
 6769 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6770              		.loc 1 3627 1
 6771 0024 00BF     		nop
 6772 0026 1037     		adds	r7, r7, #16
 6773              	.LCFI294:
 6774              		.cfi_def_cfa_offset 8
 6775 0028 BD46     		mov	sp, r7
 6776              	.LCFI295:
 6777              		.cfi_def_cfa_register 13
 6778              		@ sp needed
ARM GAS  /tmp/cc8fmbDk.s 			page 182


 6779 002a 80BD     		pop	{r7, pc}
 6780              		.cfi_endproc
 6781              	.LFE185:
 6783              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 6784              		.align	1
 6785              		.syntax unified
 6786              		.thumb
 6787              		.thumb_func
 6788              		.fpu fpv4-sp-d16
 6790              	UART_DMATxAbortCallback:
 6791              	.LFB186:
3628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6792              		.loc 1 3638 1
 6793              		.cfi_startproc
 6794              		@ args = 0, pretend = 0, frame = 16
 6795              		@ frame_needed = 1, uses_anonymous_args = 0
 6796 0000 80B5     		push	{r7, lr}
 6797              	.LCFI296:
 6798              		.cfi_def_cfa_offset 8
 6799              		.cfi_offset 7, -8
 6800              		.cfi_offset 14, -4
 6801 0002 84B0     		sub	sp, sp, #16
 6802              	.LCFI297:
 6803              		.cfi_def_cfa_offset 24
 6804 0004 00AF     		add	r7, sp, #0
 6805              	.LCFI298:
 6806              		.cfi_def_cfa_register 7
 6807 0006 7860     		str	r0, [r7, #4]
3639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6808              		.loc 1 3639 23
 6809 0008 7B68     		ldr	r3, [r7, #4]
 6810 000a 9B6A     		ldr	r3, [r3, #40]
 6811 000c FB60     		str	r3, [r7, #12]
3640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 6812              		.loc 1 3641 8
 6813 000e FB68     		ldr	r3, [r7, #12]
 6814 0010 9B6E     		ldr	r3, [r3, #104]
 6815              		.loc 1 3641 36
 6816 0012 0022     		movs	r2, #0
 6817 0014 9A63     		str	r2, [r3, #56]
3642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 6818              		.loc 1 3644 12
 6819 0016 FB68     		ldr	r3, [r7, #12]
 6820 0018 DB6E     		ldr	r3, [r3, #108]
ARM GAS  /tmp/cc8fmbDk.s 			page 183


 6821              		.loc 1 3644 6
 6822 001a 002B     		cmp	r3, #0
 6823 001c 04D0     		beq	.L339
3645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 6824              		.loc 1 3646 14
 6825 001e FB68     		ldr	r3, [r7, #12]
 6826 0020 DB6E     		ldr	r3, [r3, #108]
 6827              		.loc 1 3646 22
 6828 0022 9B6B     		ldr	r3, [r3, #56]
 6829              		.loc 1 3646 8
 6830 0024 002B     		cmp	r3, #0
 6831 0026 18D1     		bne	.L341
 6832              	.L339:
3647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6833              		.loc 1 3653 22
 6834 0028 FB68     		ldr	r3, [r7, #12]
 6835 002a 0022     		movs	r2, #0
 6836 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6837              		.loc 1 3654 22
 6838 0030 FB68     		ldr	r3, [r7, #12]
 6839 0032 0022     		movs	r2, #0
 6840 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6841              		.loc 1 3657 20
 6842 0038 FB68     		ldr	r3, [r7, #12]
 6843 003a 0022     		movs	r2, #0
 6844 003c DA67     		str	r2, [r3, #124]
3658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6845              		.loc 1 3660 3
 6846 003e FB68     		ldr	r3, [r7, #12]
 6847 0040 1B68     		ldr	r3, [r3]
 6848 0042 0F22     		movs	r2, #15
 6849 0044 1A62     		str	r2, [r3, #32]
3661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6850              		.loc 1 3671 18
ARM GAS  /tmp/cc8fmbDk.s 			page 184


 6851 0046 FB68     		ldr	r3, [r7, #12]
 6852 0048 2022     		movs	r2, #32
 6853 004a 5A67     		str	r2, [r3, #116]
3672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6854              		.loc 1 3672 18
 6855 004c FB68     		ldr	r3, [r7, #12]
 6856 004e 2022     		movs	r2, #32
 6857 0050 9A67     		str	r2, [r3, #120]
3673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6858              		.loc 1 3680 3
 6859 0052 F868     		ldr	r0, [r7, #12]
 6860 0054 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6861 0058 00E0     		b	.L338
 6862              	.L341:
3648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6863              		.loc 1 3648 7
 6864 005a 00BF     		nop
 6865              	.L338:
3681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6866              		.loc 1 3682 1
 6867 005c 1037     		adds	r7, r7, #16
 6868              	.LCFI299:
 6869              		.cfi_def_cfa_offset 8
 6870 005e BD46     		mov	sp, r7
 6871              	.LCFI300:
 6872              		.cfi_def_cfa_register 13
 6873              		@ sp needed
 6874 0060 80BD     		pop	{r7, pc}
 6875              		.cfi_endproc
 6876              	.LFE186:
 6878              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 6879              		.align	1
 6880              		.syntax unified
 6881              		.thumb
 6882              		.thumb_func
 6883              		.fpu fpv4-sp-d16
 6885              	UART_DMARxAbortCallback:
 6886              	.LFB187:
3683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/cc8fmbDk.s 			page 185


3694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6887              		.loc 1 3694 1
 6888              		.cfi_startproc
 6889              		@ args = 0, pretend = 0, frame = 16
 6890              		@ frame_needed = 1, uses_anonymous_args = 0
 6891 0000 80B5     		push	{r7, lr}
 6892              	.LCFI301:
 6893              		.cfi_def_cfa_offset 8
 6894              		.cfi_offset 7, -8
 6895              		.cfi_offset 14, -4
 6896 0002 84B0     		sub	sp, sp, #16
 6897              	.LCFI302:
 6898              		.cfi_def_cfa_offset 24
 6899 0004 00AF     		add	r7, sp, #0
 6900              	.LCFI303:
 6901              		.cfi_def_cfa_register 7
 6902 0006 7860     		str	r0, [r7, #4]
3695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6903              		.loc 1 3695 23
 6904 0008 7B68     		ldr	r3, [r7, #4]
 6905 000a 9B6A     		ldr	r3, [r3, #40]
 6906 000c FB60     		str	r3, [r7, #12]
3696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 6907              		.loc 1 3697 8
 6908 000e FB68     		ldr	r3, [r7, #12]
 6909 0010 DB6E     		ldr	r3, [r3, #108]
 6910              		.loc 1 3697 36
 6911 0012 0022     		movs	r2, #0
 6912 0014 9A63     		str	r2, [r3, #56]
3698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 6913              		.loc 1 3700 12
 6914 0016 FB68     		ldr	r3, [r7, #12]
 6915 0018 9B6E     		ldr	r3, [r3, #104]
 6916              		.loc 1 3700 6
 6917 001a 002B     		cmp	r3, #0
 6918 001c 04D0     		beq	.L343
3701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 6919              		.loc 1 3702 14
 6920 001e FB68     		ldr	r3, [r7, #12]
 6921 0020 9B6E     		ldr	r3, [r3, #104]
 6922              		.loc 1 3702 22
 6923 0022 9B6B     		ldr	r3, [r3, #56]
 6924              		.loc 1 3702 8
 6925 0024 002B     		cmp	r3, #0
 6926 0026 22D1     		bne	.L345
 6927              	.L343:
3703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
ARM GAS  /tmp/cc8fmbDk.s 			page 186


 6928              		.loc 1 3709 22
 6929 0028 FB68     		ldr	r3, [r7, #12]
 6930 002a 0022     		movs	r2, #0
 6931 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6932              		.loc 1 3710 22
 6933 0030 FB68     		ldr	r3, [r7, #12]
 6934 0032 0022     		movs	r2, #0
 6935 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6936              		.loc 1 3713 20
 6937 0038 FB68     		ldr	r3, [r7, #12]
 6938 003a 0022     		movs	r2, #0
 6939 003c DA67     		str	r2, [r3, #124]
3714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6940              		.loc 1 3716 3
 6941 003e FB68     		ldr	r3, [r7, #12]
 6942 0040 1B68     		ldr	r3, [r3]
 6943 0042 0F22     		movs	r2, #15
 6944 0044 1A62     		str	r2, [r3, #32]
3717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6945              		.loc 1 3719 3
 6946 0046 FB68     		ldr	r3, [r7, #12]
 6947 0048 1B68     		ldr	r3, [r3]
 6948 004a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 6949 004c 9AB2     		uxth	r2, r3
 6950 004e FB68     		ldr	r3, [r7, #12]
 6951 0050 1B68     		ldr	r3, [r3]
 6952 0052 42F00802 		orr	r2, r2, #8
 6953 0056 92B2     		uxth	r2, r2
 6954 0058 1A83     		strh	r2, [r3, #24]	@ movhi
3720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6955              		.loc 1 3722 18
 6956 005a FB68     		ldr	r3, [r7, #12]
 6957 005c 2022     		movs	r2, #32
 6958 005e 5A67     		str	r2, [r3, #116]
3723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6959              		.loc 1 3723 18
 6960 0060 FB68     		ldr	r3, [r7, #12]
 6961 0062 2022     		movs	r2, #32
 6962 0064 9A67     		str	r2, [r3, #120]
3724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
ARM GAS  /tmp/cc8fmbDk.s 			page 187


 6963              		.loc 1 3731 3
 6964 0066 F868     		ldr	r0, [r7, #12]
 6965 0068 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6966 006c 00E0     		b	.L342
 6967              	.L345:
3704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6968              		.loc 1 3704 7
 6969 006e 00BF     		nop
 6970              	.L342:
3732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6971              		.loc 1 3733 1
 6972 0070 1037     		adds	r7, r7, #16
 6973              	.LCFI304:
 6974              		.cfi_def_cfa_offset 8
 6975 0072 BD46     		mov	sp, r7
 6976              	.LCFI305:
 6977              		.cfi_def_cfa_register 13
 6978              		@ sp needed
 6979 0074 80BD     		pop	{r7, pc}
 6980              		.cfi_endproc
 6981              	.LFE187:
 6983              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 6984              		.align	1
 6985              		.syntax unified
 6986              		.thumb
 6987              		.thumb_func
 6988              		.fpu fpv4-sp-d16
 6990              	UART_DMATxOnlyAbortCallback:
 6991              	.LFB188:
3734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6992              		.loc 1 3745 1
 6993              		.cfi_startproc
 6994              		@ args = 0, pretend = 0, frame = 16
 6995              		@ frame_needed = 1, uses_anonymous_args = 0
 6996 0000 80B5     		push	{r7, lr}
 6997              	.LCFI306:
 6998              		.cfi_def_cfa_offset 8
 6999              		.cfi_offset 7, -8
 7000              		.cfi_offset 14, -4
 7001 0002 84B0     		sub	sp, sp, #16
 7002              	.LCFI307:
 7003              		.cfi_def_cfa_offset 24
 7004 0004 00AF     		add	r7, sp, #0
 7005              	.LCFI308:
 7006              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc8fmbDk.s 			page 188


 7007 0006 7860     		str	r0, [r7, #4]
3746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 7008              		.loc 1 3746 23
 7009 0008 7B68     		ldr	r3, [r7, #4]
 7010 000a 9B6A     		ldr	r3, [r3, #40]
 7011 000c FB60     		str	r3, [r7, #12]
3747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 7012              		.loc 1 3748 22
 7013 000e FB68     		ldr	r3, [r7, #12]
 7014 0010 0022     		movs	r2, #0
 7015 0012 A3F85220 		strh	r2, [r3, #82]	@ movhi
3749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7016              		.loc 1 3759 17
 7017 0016 FB68     		ldr	r3, [r7, #12]
 7018 0018 2022     		movs	r2, #32
 7019 001a 5A67     		str	r2, [r3, #116]
3760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 7020              		.loc 1 3767 3
 7021 001c F868     		ldr	r0, [r7, #12]
 7022 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7023              		.loc 1 3769 1
 7024 0022 00BF     		nop
 7025 0024 1037     		adds	r7, r7, #16
 7026              	.LCFI309:
 7027              		.cfi_def_cfa_offset 8
 7028 0026 BD46     		mov	sp, r7
 7029              	.LCFI310:
 7030              		.cfi_def_cfa_register 13
 7031              		@ sp needed
 7032 0028 80BD     		pop	{r7, pc}
 7033              		.cfi_endproc
 7034              	.LFE188:
 7036              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 7037              		.align	1
 7038              		.syntax unified
 7039              		.thumb
 7040              		.thumb_func
ARM GAS  /tmp/cc8fmbDk.s 			page 189


 7041              		.fpu fpv4-sp-d16
 7043              	UART_DMARxOnlyAbortCallback:
 7044              	.LFB189:
3770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7045              		.loc 1 3780 1
 7046              		.cfi_startproc
 7047              		@ args = 0, pretend = 0, frame = 16
 7048              		@ frame_needed = 1, uses_anonymous_args = 0
 7049 0000 80B5     		push	{r7, lr}
 7050              	.LCFI311:
 7051              		.cfi_def_cfa_offset 8
 7052              		.cfi_offset 7, -8
 7053              		.cfi_offset 14, -4
 7054 0002 84B0     		sub	sp, sp, #16
 7055              	.LCFI312:
 7056              		.cfi_def_cfa_offset 24
 7057 0004 00AF     		add	r7, sp, #0
 7058              	.LCFI313:
 7059              		.cfi_def_cfa_register 7
 7060 0006 7860     		str	r0, [r7, #4]
3781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7061              		.loc 1 3781 23
 7062 0008 7B68     		ldr	r3, [r7, #4]
 7063 000a 9B6A     		ldr	r3, [r3, #40]
 7064 000c FB60     		str	r3, [r7, #12]
3782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 7065              		.loc 1 3783 22
 7066 000e FB68     		ldr	r3, [r7, #12]
 7067 0010 0022     		movs	r2, #0
 7068 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 7069              		.loc 1 3786 3
 7070 0016 FB68     		ldr	r3, [r7, #12]
 7071 0018 1B68     		ldr	r3, [r3]
 7072 001a 0F22     		movs	r2, #15
 7073 001c 1A62     		str	r2, [r3, #32]
3787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 7074              		.loc 1 3789 3
 7075 001e FB68     		ldr	r3, [r7, #12]
 7076 0020 1B68     		ldr	r3, [r3]
 7077 0022 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7078 0024 9AB2     		uxth	r2, r3
ARM GAS  /tmp/cc8fmbDk.s 			page 190


 7079 0026 FB68     		ldr	r3, [r7, #12]
 7080 0028 1B68     		ldr	r3, [r3]
 7081 002a 42F00802 		orr	r2, r2, #8
 7082 002e 92B2     		uxth	r2, r2
 7083 0030 1A83     		strh	r2, [r3, #24]	@ movhi
3790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7084              		.loc 1 3792 18
 7085 0032 FB68     		ldr	r3, [r7, #12]
 7086 0034 2022     		movs	r2, #32
 7087 0036 9A67     		str	r2, [r3, #120]
3793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 7088              		.loc 1 3800 3
 7089 0038 F868     		ldr	r0, [r7, #12]
 7090 003a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7091              		.loc 1 3802 1
 7092 003e 00BF     		nop
 7093 0040 1037     		adds	r7, r7, #16
 7094              	.LCFI314:
 7095              		.cfi_def_cfa_offset 8
 7096 0042 BD46     		mov	sp, r7
 7097              	.LCFI315:
 7098              		.cfi_def_cfa_register 13
 7099              		@ sp needed
 7100 0044 80BD     		pop	{r7, pc}
 7101              		.cfi_endproc
 7102              	.LFE189:
 7104              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 7105              		.align	1
 7106              		.syntax unified
 7107              		.thumb
 7108              		.thumb_func
 7109              		.fpu fpv4-sp-d16
 7111              	UART_TxISR_8BIT:
 7112              	.LFB190:
3803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7113              		.loc 1 3812 1
 7114              		.cfi_startproc
ARM GAS  /tmp/cc8fmbDk.s 			page 191


 7115              		@ args = 0, pretend = 0, frame = 8
 7116              		@ frame_needed = 1, uses_anonymous_args = 0
 7117              		@ link register save eliminated.
 7118 0000 80B4     		push	{r7}
 7119              	.LCFI316:
 7120              		.cfi_def_cfa_offset 4
 7121              		.cfi_offset 7, -4
 7122 0002 83B0     		sub	sp, sp, #12
 7123              	.LCFI317:
 7124              		.cfi_def_cfa_offset 16
 7125 0004 00AF     		add	r7, sp, #0
 7126              	.LCFI318:
 7127              		.cfi_def_cfa_register 7
 7128 0006 7860     		str	r0, [r7, #4]
3813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 7129              		.loc 1 3814 12
 7130 0008 7B68     		ldr	r3, [r7, #4]
 7131 000a 5B6F     		ldr	r3, [r3, #116]
 7132              		.loc 1 3814 6
 7133 000c 212B     		cmp	r3, #33
 7134 000e 2BD1     		bne	.L351
3815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 7135              		.loc 1 3816 14
 7136 0010 7B68     		ldr	r3, [r7, #4]
 7137 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7138 0016 9BB2     		uxth	r3, r3
 7139              		.loc 1 3816 8
 7140 0018 002B     		cmp	r3, #0
 7141 001a 10D1     		bne	.L350
3817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 7142              		.loc 1 3822 7
 7143 001c 7B68     		ldr	r3, [r7, #4]
 7144 001e 1B68     		ldr	r3, [r3]
 7145 0020 1A68     		ldr	r2, [r3]
 7146 0022 7B68     		ldr	r3, [r7, #4]
 7147 0024 1B68     		ldr	r3, [r3]
 7148 0026 22F08002 		bic	r2, r2, #128
 7149 002a 1A60     		str	r2, [r3]
3823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7150              		.loc 1 3826 7
 7151 002c 7B68     		ldr	r3, [r7, #4]
 7152 002e 1B68     		ldr	r3, [r3]
 7153 0030 1A68     		ldr	r2, [r3]
 7154 0032 7B68     		ldr	r3, [r7, #4]
 7155 0034 1B68     		ldr	r3, [r3]
 7156 0036 42F04002 		orr	r2, r2, #64
 7157 003a 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc8fmbDk.s 			page 192


3827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
3832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
3833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7158              		.loc 1 3835 1
 7159 003c 14E0     		b	.L351
 7160              	.L350:
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7161              		.loc 1 3830 46
 7162 003e 7B68     		ldr	r3, [r7, #4]
 7163 0040 DB6C     		ldr	r3, [r3, #76]
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7164              		.loc 1 3830 40
 7165 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7166              		.loc 1 3830 12
 7167 0044 7B68     		ldr	r3, [r7, #4]
 7168 0046 1B68     		ldr	r3, [r3]
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7169              		.loc 1 3830 30
 7170 0048 92B2     		uxth	r2, r2
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7171              		.loc 1 3830 28
 7172 004a 1A85     		strh	r2, [r3, #40]	@ movhi
3831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 7173              		.loc 1 3831 12
 7174 004c 7B68     		ldr	r3, [r7, #4]
 7175 004e DB6C     		ldr	r3, [r3, #76]
3831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 7176              		.loc 1 3831 24
 7177 0050 5A1C     		adds	r2, r3, #1
 7178 0052 7B68     		ldr	r3, [r7, #4]
 7179 0054 DA64     		str	r2, [r3, #76]
3832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7180              		.loc 1 3832 12
 7181 0056 7B68     		ldr	r3, [r7, #4]
 7182 0058 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7183 005c 9BB2     		uxth	r3, r3
3832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7184              		.loc 1 3832 25
 7185 005e 013B     		subs	r3, r3, #1
 7186 0060 9AB2     		uxth	r2, r3
 7187 0062 7B68     		ldr	r3, [r7, #4]
 7188 0064 A3F85220 		strh	r2, [r3, #82]	@ movhi
 7189              	.L351:
 7190              		.loc 1 3835 1
 7191 0068 00BF     		nop
 7192 006a 0C37     		adds	r7, r7, #12
 7193              	.LCFI319:
 7194              		.cfi_def_cfa_offset 4
 7195 006c BD46     		mov	sp, r7
 7196              	.LCFI320:
ARM GAS  /tmp/cc8fmbDk.s 			page 193


 7197              		.cfi_def_cfa_register 13
 7198              		@ sp needed
 7199 006e 5DF8047B 		ldr	r7, [sp], #4
 7200              	.LCFI321:
 7201              		.cfi_restore 7
 7202              		.cfi_def_cfa_offset 0
 7203 0072 7047     		bx	lr
 7204              		.cfi_endproc
 7205              	.LFE190:
 7207              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 7208              		.align	1
 7209              		.syntax unified
 7210              		.thumb
 7211              		.thumb_func
 7212              		.fpu fpv4-sp-d16
 7214              	UART_TxISR_16BIT:
 7215              	.LFB191:
3836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7216              		.loc 1 3845 1
 7217              		.cfi_startproc
 7218              		@ args = 0, pretend = 0, frame = 16
 7219              		@ frame_needed = 1, uses_anonymous_args = 0
 7220              		@ link register save eliminated.
 7221 0000 80B4     		push	{r7}
 7222              	.LCFI322:
 7223              		.cfi_def_cfa_offset 4
 7224              		.cfi_offset 7, -4
 7225 0002 85B0     		sub	sp, sp, #20
 7226              	.LCFI323:
 7227              		.cfi_def_cfa_offset 24
 7228 0004 00AF     		add	r7, sp, #0
 7229              	.LCFI324:
 7230              		.cfi_def_cfa_register 7
 7231 0006 7860     		str	r0, [r7, #4]
3846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 7232              		.loc 1 3849 12
 7233 0008 7B68     		ldr	r3, [r7, #4]
 7234 000a 5B6F     		ldr	r3, [r3, #116]
 7235              		.loc 1 3849 6
 7236 000c 212B     		cmp	r3, #33
 7237 000e 2FD1     		bne	.L355
3850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 7238              		.loc 1 3851 14
 7239 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 194


 7240 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7241 0016 9BB2     		uxth	r3, r3
 7242              		.loc 1 3851 8
 7243 0018 002B     		cmp	r3, #0
 7244 001a 10D1     		bne	.L354
3852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 7245              		.loc 1 3857 7
 7246 001c 7B68     		ldr	r3, [r7, #4]
 7247 001e 1B68     		ldr	r3, [r3]
 7248 0020 1A68     		ldr	r2, [r3]
 7249 0022 7B68     		ldr	r3, [r7, #4]
 7250 0024 1B68     		ldr	r3, [r3]
 7251 0026 22F08002 		bic	r2, r2, #128
 7252 002a 1A60     		str	r2, [r3]
3858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7253              		.loc 1 3861 7
 7254 002c 7B68     		ldr	r3, [r7, #4]
 7255 002e 1B68     		ldr	r3, [r3]
 7256 0030 1A68     		ldr	r2, [r3]
 7257 0032 7B68     		ldr	r3, [r7, #4]
 7258 0034 1B68     		ldr	r3, [r3]
 7259 0036 42F04002 		orr	r2, r2, #64
 7260 003a 1A60     		str	r2, [r3]
3862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
3869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7261              		.loc 1 3871 1
 7262 003c 18E0     		b	.L355
 7263              	.L354:
3865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 7264              		.loc 1 3865 11
 7265 003e 7B68     		ldr	r3, [r7, #4]
 7266 0040 DB6C     		ldr	r3, [r3, #76]
 7267 0042 FB60     		str	r3, [r7, #12]
3866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7268              		.loc 1 3866 43
 7269 0044 FB68     		ldr	r3, [r7, #12]
 7270 0046 1A88     		ldrh	r2, [r3]
3866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7271              		.loc 1 3866 12
 7272 0048 7B68     		ldr	r3, [r7, #4]
 7273 004a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc8fmbDk.s 			page 195


3866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7274              		.loc 1 3866 50
 7275 004c C2F30802 		ubfx	r2, r2, #0, #9
 7276 0050 92B2     		uxth	r2, r2
3866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7277              		.loc 1 3866 28
 7278 0052 1A85     		strh	r2, [r3, #40]	@ movhi
3867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 7279              		.loc 1 3867 25
 7280 0054 7B68     		ldr	r3, [r7, #4]
 7281 0056 DB6C     		ldr	r3, [r3, #76]
 7282 0058 9A1C     		adds	r2, r3, #2
 7283 005a 7B68     		ldr	r3, [r7, #4]
 7284 005c DA64     		str	r2, [r3, #76]
3868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7285              		.loc 1 3868 12
 7286 005e 7B68     		ldr	r3, [r7, #4]
 7287 0060 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7288 0064 9BB2     		uxth	r3, r3
3868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7289              		.loc 1 3868 25
 7290 0066 013B     		subs	r3, r3, #1
 7291 0068 9AB2     		uxth	r2, r3
 7292 006a 7B68     		ldr	r3, [r7, #4]
 7293 006c A3F85220 		strh	r2, [r3, #82]	@ movhi
 7294              	.L355:
 7295              		.loc 1 3871 1
 7296 0070 00BF     		nop
 7297 0072 1437     		adds	r7, r7, #20
 7298              	.LCFI325:
 7299              		.cfi_def_cfa_offset 4
 7300 0074 BD46     		mov	sp, r7
 7301              	.LCFI326:
 7302              		.cfi_def_cfa_register 13
 7303              		@ sp needed
 7304 0076 5DF8047B 		ldr	r7, [sp], #4
 7305              	.LCFI327:
 7306              		.cfi_restore 7
 7307              		.cfi_def_cfa_offset 0
 7308 007a 7047     		bx	lr
 7309              		.cfi_endproc
 7310              	.LFE191:
 7312              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 7313              		.align	1
 7314              		.syntax unified
 7315              		.thumb
 7316              		.thumb_func
 7317              		.fpu fpv4-sp-d16
 7319              	UART_EndTransmit_IT:
 7320              	.LFB192:
3872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/cc8fmbDk.s 			page 196


3879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr++;
3904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
3909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc8fmbDk.s 			page 197


3936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
3951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7321              		.loc 1 3964 1
 7322              		.cfi_startproc
 7323              		@ args = 0, pretend = 0, frame = 8
 7324              		@ frame_needed = 1, uses_anonymous_args = 0
 7325 0000 80B5     		push	{r7, lr}
 7326              	.LCFI328:
 7327              		.cfi_def_cfa_offset 8
 7328              		.cfi_offset 7, -8
 7329              		.cfi_offset 14, -4
 7330 0002 82B0     		sub	sp, sp, #8
 7331              	.LCFI329:
 7332              		.cfi_def_cfa_offset 16
 7333 0004 00AF     		add	r7, sp, #0
 7334              	.LCFI330:
 7335              		.cfi_def_cfa_register 7
 7336 0006 7860     		str	r0, [r7, #4]
3965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7337              		.loc 1 3966 3
 7338 0008 7B68     		ldr	r3, [r7, #4]
 7339 000a 1B68     		ldr	r3, [r3]
 7340 000c 1A68     		ldr	r2, [r3]
 7341 000e 7B68     		ldr	r3, [r7, #4]
 7342 0010 1B68     		ldr	r3, [r3]
 7343 0012 22F04002 		bic	r2, r2, #64
 7344 0016 1A60     		str	r2, [r3]
3967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
ARM GAS  /tmp/cc8fmbDk.s 			page 198


3969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7345              		.loc 1 3969 17
 7346 0018 7B68     		ldr	r3, [r7, #4]
 7347 001a 2022     		movs	r2, #32
 7348 001c 5A67     		str	r2, [r3, #116]
3970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 7349              		.loc 1 3972 16
 7350 001e 7B68     		ldr	r3, [r7, #4]
 7351 0020 0022     		movs	r2, #0
 7352 0022 5A66     		str	r2, [r3, #100]
3973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 7353              		.loc 1 3979 3
 7354 0024 7868     		ldr	r0, [r7, #4]
 7355 0026 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7356              		.loc 1 3981 1
 7357 002a 00BF     		nop
 7358 002c 0837     		adds	r7, r7, #8
 7359              	.LCFI331:
 7360              		.cfi_def_cfa_offset 8
 7361 002e BD46     		mov	sp, r7
 7362              	.LCFI332:
 7363              		.cfi_def_cfa_register 13
 7364              		@ sp needed
 7365 0030 80BD     		pop	{r7, pc}
 7366              		.cfi_endproc
 7367              	.LFE192:
 7369              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 7370              		.align	1
 7371              		.syntax unified
 7372              		.thumb
 7373              		.thumb_func
 7374              		.fpu fpv4-sp-d16
 7376              	UART_RxISR_8BIT:
 7377              	.LFB193:
3982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7378              		.loc 1 3989 1
 7379              		.cfi_startproc
 7380              		@ args = 0, pretend = 0, frame = 16
 7381              		@ frame_needed = 1, uses_anonymous_args = 0
 7382 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cc8fmbDk.s 			page 199


 7383              	.LCFI333:
 7384              		.cfi_def_cfa_offset 8
 7385              		.cfi_offset 7, -8
 7386              		.cfi_offset 14, -4
 7387 0002 84B0     		sub	sp, sp, #16
 7388              	.LCFI334:
 7389              		.cfi_def_cfa_offset 24
 7390 0004 00AF     		add	r7, sp, #0
 7391              	.LCFI335:
 7392              		.cfi_def_cfa_register 7
 7393 0006 7860     		str	r0, [r7, #4]
3990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 7394              		.loc 1 3990 12
 7395 0008 7B68     		ldr	r3, [r7, #4]
 7396 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 7397 000e FB81     		strh	r3, [r7, #14]	@ movhi
3991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7398              		.loc 1 3994 12
 7399 0010 7B68     		ldr	r3, [r7, #4]
 7400 0012 9B6F     		ldr	r3, [r3, #120]
 7401              		.loc 1 3994 6
 7402 0014 222B     		cmp	r3, #34
 7403 0016 3AD1     		bne	.L358
3995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 7404              		.loc 1 3996 25
 7405 0018 7B68     		ldr	r3, [r7, #4]
 7406 001a 1B68     		ldr	r3, [r3]
 7407              		.loc 1 3996 12
 7408 001c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 7409 001e BB81     		strh	r3, [r7, #12]	@ movhi
3997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 7410              		.loc 1 3997 26
 7411 0020 BB89     		ldrh	r3, [r7, #12]	@ movhi
 7412 0022 D9B2     		uxtb	r1, r3
 7413              		.loc 1 3997 45
 7414 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7415 0026 DAB2     		uxtb	r2, r3
 7416              		.loc 1 3997 11
 7417 0028 7B68     		ldr	r3, [r7, #4]
 7418 002a 5B6D     		ldr	r3, [r3, #84]
 7419              		.loc 1 3997 26
 7420 002c 0A40     		ands	r2, r2, r1
 7421 002e D2B2     		uxtb	r2, r2
 7422              		.loc 1 3997 24
 7423 0030 1A70     		strb	r2, [r3]
3998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 7424              		.loc 1 3998 10
 7425 0032 7B68     		ldr	r3, [r7, #4]
 7426 0034 5B6D     		ldr	r3, [r3, #84]
 7427              		.loc 1 3998 22
 7428 0036 5A1C     		adds	r2, r3, #1
 7429 0038 7B68     		ldr	r3, [r7, #4]
 7430 003a 5A65     		str	r2, [r3, #84]
ARM GAS  /tmp/cc8fmbDk.s 			page 200


3999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 7431              		.loc 1 3999 10
 7432 003c 7B68     		ldr	r3, [r7, #4]
 7433 003e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7434 0042 9BB2     		uxth	r3, r3
 7435              		.loc 1 3999 23
 7436 0044 013B     		subs	r3, r3, #1
 7437 0046 9AB2     		uxth	r2, r3
 7438 0048 7B68     		ldr	r3, [r7, #4]
 7439 004a A3F85A20 		strh	r2, [r3, #90]	@ movhi
4000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 7440              		.loc 1 4001 14
 7441 004e 7B68     		ldr	r3, [r7, #4]
 7442 0050 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7443 0054 9BB2     		uxth	r3, r3
 7444              		.loc 1 4001 8
 7445 0056 002B     		cmp	r3, #0
 7446 0058 23D1     		bne	.L360
4002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 7447              		.loc 1 4007 7
 7448 005a 7B68     		ldr	r3, [r7, #4]
 7449 005c 1B68     		ldr	r3, [r3]
 7450 005e 1A68     		ldr	r2, [r3]
 7451 0060 7B68     		ldr	r3, [r7, #4]
 7452 0062 1B68     		ldr	r3, [r3]
 7453 0064 22F49072 		bic	r2, r2, #288
 7454 0068 1A60     		str	r2, [r3]
4008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7455              		.loc 1 4011 7
 7456 006a 7B68     		ldr	r3, [r7, #4]
 7457 006c 1B68     		ldr	r3, [r3]
 7458 006e 9A68     		ldr	r2, [r3, #8]
 7459 0070 7B68     		ldr	r3, [r7, #4]
 7460 0072 1B68     		ldr	r3, [r3]
 7461 0074 22F00102 		bic	r2, r2, #1
 7462 0078 9A60     		str	r2, [r3, #8]
4012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7463              		.loc 1 4014 22
 7464 007a 7B68     		ldr	r3, [r7, #4]
 7465 007c 2022     		movs	r2, #32
 7466 007e 9A67     		str	r2, [r3, #120]
4015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 7467              		.loc 1 4017 20
 7468 0080 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc8fmbDk.s 			page 201


 7469 0082 0022     		movs	r2, #0
 7470 0084 1A66     		str	r2, [r3, #96]
4018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
4021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
4022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
4024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 7471              		.loc 1 4024 7
 7472 0086 7868     		ldr	r0, [r7, #4]
 7473 0088 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
4025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
4029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7474              		.loc 1 4033 1
 7475 008c 09E0     		b	.L360
 7476              	.L358:
4031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7477              		.loc 1 4031 5
 7478 008e 7B68     		ldr	r3, [r7, #4]
 7479 0090 1B68     		ldr	r3, [r3]
 7480 0092 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7481 0094 9AB2     		uxth	r2, r3
 7482 0096 7B68     		ldr	r3, [r7, #4]
 7483 0098 1B68     		ldr	r3, [r3]
 7484 009a 42F00802 		orr	r2, r2, #8
 7485 009e 92B2     		uxth	r2, r2
 7486 00a0 1A83     		strh	r2, [r3, #24]	@ movhi
 7487              	.L360:
 7488              		.loc 1 4033 1
 7489 00a2 00BF     		nop
 7490 00a4 1037     		adds	r7, r7, #16
 7491              	.LCFI336:
 7492              		.cfi_def_cfa_offset 8
 7493 00a6 BD46     		mov	sp, r7
 7494              	.LCFI337:
 7495              		.cfi_def_cfa_register 13
 7496              		@ sp needed
 7497 00a8 80BD     		pop	{r7, pc}
 7498              		.cfi_endproc
 7499              	.LFE193:
 7501              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 7502              		.align	1
 7503              		.syntax unified
 7504              		.thumb
 7505              		.thumb_func
 7506              		.fpu fpv4-sp-d16
 7508              	UART_RxISR_16BIT:
 7509              	.LFB194:
4034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc8fmbDk.s 			page 202


4035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
4037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7510              		.loc 1 4043 1
 7511              		.cfi_startproc
 7512              		@ args = 0, pretend = 0, frame = 16
 7513              		@ frame_needed = 1, uses_anonymous_args = 0
 7514 0000 80B5     		push	{r7, lr}
 7515              	.LCFI338:
 7516              		.cfi_def_cfa_offset 8
 7517              		.cfi_offset 7, -8
 7518              		.cfi_offset 14, -4
 7519 0002 84B0     		sub	sp, sp, #16
 7520              	.LCFI339:
 7521              		.cfi_def_cfa_offset 24
 7522 0004 00AF     		add	r7, sp, #0
 7523              	.LCFI340:
 7524              		.cfi_def_cfa_register 7
 7525 0006 7860     		str	r0, [r7, #4]
4044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
4045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 7526              		.loc 1 4045 12
 7527 0008 7B68     		ldr	r3, [r7, #4]
 7528 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 7529 000e FB81     		strh	r3, [r7, #14]	@ movhi
4046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
4047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7530              		.loc 1 4049 12
 7531 0010 7B68     		ldr	r3, [r7, #4]
 7532 0012 9B6F     		ldr	r3, [r3, #120]
 7533              		.loc 1 4049 6
 7534 0014 222B     		cmp	r3, #34
 7535 0016 3AD1     		bne	.L362
4050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 7536              		.loc 1 4051 25
 7537 0018 7B68     		ldr	r3, [r7, #4]
 7538 001a 1B68     		ldr	r3, [r3]
 7539              		.loc 1 4051 12
 7540 001c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 7541 001e BB81     		strh	r3, [r7, #12]	@ movhi
4052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 7542              		.loc 1 4052 9
 7543 0020 7B68     		ldr	r3, [r7, #4]
 7544 0022 5B6D     		ldr	r3, [r3, #84]
 7545 0024 BB60     		str	r3, [r7, #8]
4053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 7546              		.loc 1 4053 12
 7547 0026 BA89     		ldrh	r2, [r7, #12]	@ movhi
ARM GAS  /tmp/cc8fmbDk.s 			page 203


 7548 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7549 002a 1340     		ands	r3, r3, r2
 7550 002c 9AB2     		uxth	r2, r3
 7551              		.loc 1 4053 10
 7552 002e BB68     		ldr	r3, [r7, #8]
 7553 0030 1A80     		strh	r2, [r3]	@ movhi
4054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 7554              		.loc 1 4054 23
 7555 0032 7B68     		ldr	r3, [r7, #4]
 7556 0034 5B6D     		ldr	r3, [r3, #84]
 7557 0036 9A1C     		adds	r2, r3, #2
 7558 0038 7B68     		ldr	r3, [r7, #4]
 7559 003a 5A65     		str	r2, [r3, #84]
4055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 7560              		.loc 1 4055 10
 7561 003c 7B68     		ldr	r3, [r7, #4]
 7562 003e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7563 0042 9BB2     		uxth	r3, r3
 7564              		.loc 1 4055 23
 7565 0044 013B     		subs	r3, r3, #1
 7566 0046 9AB2     		uxth	r2, r3
 7567 0048 7B68     		ldr	r3, [r7, #4]
 7568 004a A3F85A20 		strh	r2, [r3, #90]	@ movhi
4056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 7569              		.loc 1 4057 14
 7570 004e 7B68     		ldr	r3, [r7, #4]
 7571 0050 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7572 0054 9BB2     		uxth	r3, r3
 7573              		.loc 1 4057 8
 7574 0056 002B     		cmp	r3, #0
 7575 0058 23D1     		bne	.L364
4058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 7576              		.loc 1 4063 7
 7577 005a 7B68     		ldr	r3, [r7, #4]
 7578 005c 1B68     		ldr	r3, [r3]
 7579 005e 1A68     		ldr	r2, [r3]
 7580 0060 7B68     		ldr	r3, [r7, #4]
 7581 0062 1B68     		ldr	r3, [r3]
 7582 0064 22F49072 		bic	r2, r2, #288
 7583 0068 1A60     		str	r2, [r3]
4064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7584              		.loc 1 4067 7
 7585 006a 7B68     		ldr	r3, [r7, #4]
 7586 006c 1B68     		ldr	r3, [r3]
 7587 006e 9A68     		ldr	r2, [r3, #8]
 7588 0070 7B68     		ldr	r3, [r7, #4]
 7589 0072 1B68     		ldr	r3, [r3]
 7590 0074 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp/cc8fmbDk.s 			page 204


 7591 0078 9A60     		str	r2, [r3, #8]
4068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7592              		.loc 1 4070 22
 7593 007a 7B68     		ldr	r3, [r7, #4]
 7594 007c 2022     		movs	r2, #32
 7595 007e 9A67     		str	r2, [r3, #120]
4071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 7596              		.loc 1 4073 20
 7597 0080 7B68     		ldr	r3, [r7, #4]
 7598 0082 0022     		movs	r2, #0
 7599 0084 1A66     		str	r2, [r3, #96]
4074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
4077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
4078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
4080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 7600              		.loc 1 4080 7
 7601 0086 7868     		ldr	r0, [r7, #4]
 7602 0088 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
4081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
4085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7603              		.loc 1 4089 1
 7604 008c 09E0     		b	.L364
 7605              	.L362:
4087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7606              		.loc 1 4087 5
 7607 008e 7B68     		ldr	r3, [r7, #4]
 7608 0090 1B68     		ldr	r3, [r3]
 7609 0092 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7610 0094 9AB2     		uxth	r2, r3
 7611 0096 7B68     		ldr	r3, [r7, #4]
 7612 0098 1B68     		ldr	r3, [r3]
 7613 009a 42F00802 		orr	r2, r2, #8
 7614 009e 92B2     		uxth	r2, r2
 7615 00a0 1A83     		strh	r2, [r3, #24]	@ movhi
 7616              	.L364:
 7617              		.loc 1 4089 1
 7618 00a2 00BF     		nop
 7619 00a4 1037     		adds	r7, r7, #16
 7620              	.LCFI341:
 7621              		.cfi_def_cfa_offset 8
 7622 00a6 BD46     		mov	sp, r7
 7623              	.LCFI342:
 7624              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc8fmbDk.s 			page 205


 7625              		@ sp needed
 7626 00a8 80BD     		pop	{r7, pc}
 7627              		.cfi_endproc
 7628              	.LFE194:
 7630              		.text
 7631              	.Letext0:
 7632              		.file 2 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_
 7633              		.file 3 "/opt/gcc-arm-none-eabi/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdi
 7634              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 7635              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 7636              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 7637              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 7638              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
ARM GAS  /tmp/cc8fmbDk.s 			page 206


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/cc8fmbDk.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc8fmbDk.s:26     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc8fmbDk.s:694    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc8fmbDk.s:5110   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc8fmbDk.s:5765   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/cc8fmbDk.s:5977   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cc8fmbDk.s:143    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc8fmbDk.s:150    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc8fmbDk.s:274    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc8fmbDk.s:281    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc8fmbDk.s:436    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc8fmbDk.s:443    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc8fmbDk.s:588    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc8fmbDk.s:595    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc8fmbDk.s:737    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc8fmbDk.s:687    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc8fmbDk.s:730    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc8fmbDk.s:773    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc8fmbDk.s:780    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc8fmbDk.s:6090   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc8fmbDk.s:997    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc8fmbDk.s:1004   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc8fmbDk.s:1289   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc8fmbDk.s:1296   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc8fmbDk.s:1432   .text.HAL_UART_Transmit_IT:00000000000000b0 $d
     /tmp/cc8fmbDk.s:7214   .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/cc8fmbDk.s:7111   .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/cc8fmbDk.s:1438   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc8fmbDk.s:1445   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc8fmbDk.s:1660   .text.HAL_UART_Receive_IT:000000000000013c $d
     /tmp/cc8fmbDk.s:7508   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/cc8fmbDk.s:7376   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/cc8fmbDk.s:1666   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc8fmbDk.s:1673   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc8fmbDk.s:1850   .text.HAL_UART_Transmit_DMA:00000000000000ec $d
     /tmp/cc8fmbDk.s:6385   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc8fmbDk.s:6462   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc8fmbDk.s:6638   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc8fmbDk.s:1857   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc8fmbDk.s:1864   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc8fmbDk.s:2048   .text.HAL_UART_Receive_DMA:00000000000000fc $d
     /tmp/cc8fmbDk.s:6507   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc8fmbDk.s:6593   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc8fmbDk.s:2055   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc8fmbDk.s:2062   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc8fmbDk.s:2184   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc8fmbDk.s:2191   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc8fmbDk.s:2298   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc8fmbDk.s:2305   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc8fmbDk.s:6265   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cc8fmbDk.s:6319   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cc8fmbDk.s:2460   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc8fmbDk.s:2467   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc8fmbDk.s:2661   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc8fmbDk.s:2668   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
ARM GAS  /tmp/cc8fmbDk.s 			page 207


     /tmp/cc8fmbDk.s:2773   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc8fmbDk.s:2780   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc8fmbDk.s:2908   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc8fmbDk.s:2915   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cc8fmbDk.s:4151   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc8fmbDk.s:3165   .text.HAL_UART_Abort_IT:0000000000000168 $d
     /tmp/cc8fmbDk.s:6790   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc8fmbDk.s:6885   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cc8fmbDk.s:3171   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc8fmbDk.s:3178   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc8fmbDk.s:4194   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc8fmbDk.s:3303   .text.HAL_UART_AbortTransmit_IT:00000000000000a8 $d
     /tmp/cc8fmbDk.s:6990   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc8fmbDk.s:3308   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc8fmbDk.s:3315   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc8fmbDk.s:4237   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc8fmbDk.s:3468   .text.HAL_UART_AbortReceive_IT:00000000000000dc $d
     /tmp/cc8fmbDk.s:7043   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc8fmbDk.s:3473   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc8fmbDk.s:3480   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc8fmbDk.s:4108   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc8fmbDk.s:7319   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cc8fmbDk.s:3923   .text.HAL_UART_IRQHandler:0000000000000284 $d
     /tmp/cc8fmbDk.s:6737   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc8fmbDk.s:3929   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:3936   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc8fmbDk.s:3972   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:3979   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc8fmbDk.s:4015   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:4022   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc8fmbDk.s:4058   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:4065   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc8fmbDk.s:4101   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:4144   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:4187   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:4230   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:4273   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/cc8fmbDk.s:4280   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/cc8fmbDk.s:4334   .text.HAL_UART_ReceiverTimeout_Config:0000000000000034 $d
     /tmp/cc8fmbDk.s:4339   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/cc8fmbDk.s:4346   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/cc8fmbDk.s:4438   .text.HAL_UART_EnableReceiverTimeout:000000000000006c $d
     /tmp/cc8fmbDk.s:4443   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
     /tmp/cc8fmbDk.s:4450   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/cc8fmbDk.s:4542   .text.HAL_UART_DisableReceiverTimeout:000000000000006c $d
     /tmp/cc8fmbDk.s:4547   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/cc8fmbDk.s:4554   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cc8fmbDk.s:4620   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/cc8fmbDk.s:4627   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cc8fmbDk.s:4693   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc8fmbDk.s:4700   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc8fmbDk.s:4746   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc8fmbDk.s:4753   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc8fmbDk.s:4833   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc8fmbDk.s:4840   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc8fmbDk.s:4920   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc8fmbDk.s:4927   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
ARM GAS  /tmp/cc8fmbDk.s 			page 208


     /tmp/cc8fmbDk.s:5001   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc8fmbDk.s:5008   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc8fmbDk.s:5056   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc8fmbDk.s:5063   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cc8fmbDk.s:5103   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc8fmbDk.s:5223   .text.UART_SetConfig:00000000000000a0 $d
     /tmp/cc8fmbDk.s:5227   .text.UART_SetConfig:00000000000000b0 $t
     /tmp/cc8fmbDk.s:5270   .text.UART_SetConfig:00000000000000f8 $d
     /tmp/cc8fmbDk.s:5283   .text.UART_SetConfig:000000000000012c $t
     /tmp/cc8fmbDk.s:5379   .text.UART_SetConfig:00000000000001d4 $d
     /tmp/cc8fmbDk.s:5388   .text.UART_SetConfig:00000000000001f8 $t
     /tmp/cc8fmbDk.s:5520   .text.UART_SetConfig:00000000000002d4 $d
     /tmp/cc8fmbDk.s:5529   .text.UART_SetConfig:00000000000002f8 $t
     /tmp/cc8fmbDk.s:5539   .text.UART_SetConfig:0000000000000300 $d
     /tmp/cc8fmbDk.s:5547   .text.UART_SetConfig:0000000000000318 $t
     /tmp/cc8fmbDk.s:5643   .text.UART_SetConfig:00000000000003ac $d
     /tmp/cc8fmbDk.s:5652   .text.UART_SetConfig:00000000000003d0 $t
     /tmp/cc8fmbDk.s:5753   .text.UART_SetConfig:0000000000000458 $d
     /tmp/cc8fmbDk.s:5758   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/cc8fmbDk.s:5970   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cc8fmbDk.s:6083   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc8fmbDk.s:6259   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cc8fmbDk.s:6313   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cc8fmbDk.s:6379   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc8fmbDk.s:6456   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc8fmbDk.s:6501   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc8fmbDk.s:6587   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cc8fmbDk.s:6632   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc8fmbDk.s:6731   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc8fmbDk.s:6784   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:6879   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:6984   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:7037   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc8fmbDk.s:7105   .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/cc8fmbDk.s:7208   .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/cc8fmbDk.s:7313   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cc8fmbDk.s:7370   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/cc8fmbDk.s:7502   .text.UART_RxISR_16BIT:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
